<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>KVM, BIOS Tarafından Devredışı Bırakıldı Problemi Nasıl Çözülür?</title>
    <url>/post/3236384314.html</url>
    <content><![CDATA[<p>KVM, linux çekirdekli sistemler üzerinde, “çekirdek seviyesinde” sanallaştırma yapmamıza imkan veren bir sanallaştırma uygulamasıdır. Diğer sanallaştırma teknolojilerinin aksine hızlı, ve çekirdek seviyesinde çalışmasından dolayıda çok güvenlidir.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ egrep <span class="string">&#x27;^flags.*(vmx|svm)&#x27;</span> /proc/cpuinfo</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts</span><br></pre></td></tr></table></figure>

<p>komutu ile sisteminizin kvm ‘ yi destekleyip desteklemediğini görebilirsiniz.</p>
<p>Açılışta aldığım kvm disabled by bios hatası için bios ayarlarımı düzenledim.</p>
<p>Intel Virtual Technology kısmını Enable olarak ayarlayıp reboot ettikten sonra sorun düzeldi.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3236384314001.png"></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>kvm</tag>
        <tag>bios</tag>
        <tag>arch linux</tag>
      </tags>
  </entry>
  <entry>
    <title>makepkg için GPG İmzaları Doğrulama Nasıl Yapılır?</title>
    <url>/post/315743461.html</url>
    <content><![CDATA[<p>Drush için php-box bağımlılığını kurmaya çalışırken imza hatasıyla karşılaştım ve bunun iki türlü çözümüne ulaştım. Birisi sadece kurulumu yapmama sağlayacak olan geçici çözüm. Diğeri ise resmi olmayan bir imzayı kalıcı olarak resmi yapmamı sağlayan çözüm. Burada geçici olarak bu sorunu nasıl çözdüğümden bahsedeceğim.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://aur.archlinux.org/php-box.git</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Cloning into <span class="string">&#x27;php-box&#x27;</span>...</span><br><span class="line">remote: Counting objects: 57, <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (45/45), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 57 (delta 12), reused 56 (delta 12)</span><br><span class="line">Unpacking objects: 100% (57/57), <span class="keyword">done</span>.</span><br><span class="line">Checking connectivity... <span class="keyword">done</span>.</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> php-box</span><br><span class="line">$ makepkg -s</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">==&gt; php-box 2.7.2-1 (Çrş Haz 22 00:55:30 EEST 2016) paketi oluşturuluyor</span><br><span class="line">==&gt; Bağımlılıklar denetleniyor...</span><br><span class="line">==&gt; Derleme bağımlılıkları denetleniyor...</span><br><span class="line">==&gt; Kaynaklar getiriliyor...</span><br><span class="line">-&gt; box-2.7.2.phar indiriliyor...</span><br><span class="line">% Total % Received % Xferd Average Speed Time Time Time Current</span><br><span class="line">Dload Upload Total Spent Left Speed</span><br><span class="line">100 591 0 591 0 0 801 0 --:--:-- --:--:-- --:--:-- 801</span><br><span class="line">100 954k 100 954k 0 0 229k 0 0:00:04 0:00:04 --:--:-- 388k</span><br><span class="line">-&gt; box-2.7.2.phar.sig indiriliyor...</span><br><span class="line">% Total % Received % Xferd Average Speed Time Time Time Current</span><br><span class="line">Dload Upload Total Spent Left Speed</span><br><span class="line">100 594 0 594 0 0 766 0 --:--:-- --:--:-- --:--:-- 766</span><br><span class="line">100 543 100 543 0 0 327 0 0:00:01 0:00:01 --:--:-- 530k</span><br><span class="line">-&gt; LICENSE indiriliyor...</span><br><span class="line">% Total % Received % Xferd Average Speed Time Time Time Current</span><br><span class="line">Dload Upload Total Spent Left Speed</span><br><span class="line">0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0</span><br><span class="line">100 1057 100 1057 0 0 846 0 0:00:01 0:00:01 --:--:-- 2487</span><br><span class="line">==&gt; <span class="built_in">source</span> ile sha256sums dosyası <span class="keyword">do</span>ğrulanıyor...</span><br><span class="line">box-2.7.2.phar ... Doğrulandı</span><br><span class="line">box-2.7.2.phar.sig ... Atlandı</span><br><span class="line">LICENSE ... Doğrulandı</span><br><span class="line">==&gt; Kaynak dosya imzaları gpg ile <span class="keyword">do</span>ğrulanıyor...</span><br><span class="line"></span><br><span class="line">box-2.7.2.phar ... BAŞARISIZ (bilinmeyen kamu anahtarı 293D771241515FE8)</span><br><span class="line"></span><br><span class="line">==&gt; HATA: Bir veya daha fazla PGP imzası <span class="keyword">do</span>ğrulanamıyor!</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpg --recv-keys 293D771241515FE8</span><br><span class="line">gpg: anahtar sunucusundan alım başarısızlığa uğradı: No keyserver available</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpg --list-keys</span><br><span class="line">gpg: /home/ramazan/.gnupg/trustdb.gpg: güvence veritabanı oluşturuldu.</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -rd ~/.gnupg</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpg --recv-keys 293D771241515FE8</span><br><span class="line">gpg: directory <span class="string">&#x27;/home/ramazan/.gnupg&#x27;</span> created</span><br><span class="line">gpg: new configuration file <span class="string">&#x27;/home/ramazan/.gnupg/dirmngr.conf&#x27;</span> created</span><br><span class="line">gpg: new configuration file <span class="string">&#x27;/home/ramazan/.gnupg/gpg.conf&#x27;</span> created</span><br><span class="line">gpg: keybox <span class="string">&#x27;/home/ramazan/.gnupg/pubring.kbx&#x27;</span> created</span><br><span class="line">gpg: /home/ramazan/.gnupg/trustdb.gpg: güvence veritabanı oluşturuldu</span><br><span class="line">gpg: anahtar 41515FE8: genel anahtar <span class="string">&quot;Kevin G. Herrera &quot;</span> alındı</span><br><span class="line">gpg: İşlenmiş toplam miktar: 1</span><br><span class="line">gpg:                       alınan: 1</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ makepkg –skippgpcheck</span><br><span class="line">==&gt; php-box 2.7.2-1 (Çrş Haz 22 00:58:19 EEST 2016) paketi oluşturuluyor</span><br><span class="line">==&gt; Bağımlılıklar denetleniyor...</span><br><span class="line">==&gt; Derleme bağımlılıkları denetleniyor...</span><br><span class="line">==&gt; Kaynaklar getiriliyor...</span><br><span class="line">-&gt; box-2.7.2.phar bulundu</span><br><span class="line">-&gt; box-2.7.2.phar.sig bulundu</span><br><span class="line">-&gt; LICENSE bulundu</span><br><span class="line">==&gt; UYARI: Kaynak dosya PGP imza <span class="keyword">do</span>ğrulamaları atlanıyor.</span><br><span class="line">==&gt; <span class="built_in">source</span> ile sha256sums dosyası <span class="keyword">do</span>ğrulanıyor...</span><br><span class="line">box-2.7.2.phar ... Doğrulandı</span><br><span class="line">box-2.7.2.phar.sig ... Atlandı</span><br><span class="line">LICENSE ... Doğrulandı</span><br><span class="line">==&gt; Kaynaklar açılıyor...</span><br><span class="line">==&gt; fakeroot ortamına giriliyor...</span><br><span class="line">==&gt; package() işlemine başlanıyor...</span><br><span class="line">==&gt; Kurulum düzenleniyor...</span><br><span class="line">-&gt; libtool dosyaları kaldırılıyor...</span><br><span class="line">-&gt; İstenmeyen dosyalar kaldırılıyor...</span><br><span class="line">-&gt; Statik kütüphane dosyaları kaldırılıyor...</span><br><span class="line">-&gt; İkilik dosyalardan ve kütüphanelerden gereksiz ayıklama sembolleri ayıklanıyor...</span><br><span class="line">-&gt; Kılavuz ve bilgi sayfaları sıkıştırılıyor...</span><br><span class="line">==&gt; Checking <span class="keyword">for</span> packaging issue...</span><br><span class="line">==&gt; <span class="string">&quot;php-box&quot;</span> paketi oluşturuluyor...</span><br><span class="line">-&gt; .PKGINFO dosyası üretiliyor...</span><br><span class="line">-&gt; .BUILDINFO dosyası üretiliyor...</span><br><span class="line">-&gt; install dosyası ekleniyor...</span><br><span class="line">-&gt; .MTREE dosyası oluşturuluyor...</span><br><span class="line">-&gt; Paket sıkıştırılıyor...</span><br><span class="line">==&gt; fakeroot ortamından çıkılıyor.</span><br><span class="line">==&gt; php-box 2.7.2-1 (Çrş Haz 22 00:58:20 EEST 2016) paketinin derlenmesi tamamlandı</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ makepkg -sri</span><br><span class="line">$ ==&gt; UYARI: Paketlerden biri zaten derlenmiş, mevcut paket yükleniyor...</span><br><span class="line">==&gt; php-box paketi pacman -U ile kuruluyor ...</span><br><span class="line">[sudo] password <span class="keyword">for</span> ramazan:</span><br><span class="line">paketler yükleniyor...</span><br><span class="line">paket bağımlılıkları çözümleniyor...</span><br><span class="line">varsa paketler arası çakışmalara bakılıyor...</span><br><span class="line"></span><br><span class="line">Paketler (1) php-box-2.7.2-1</span><br><span class="line"></span><br><span class="line">Toplam Kurulum Boyutu: 0,96 MiB</span><br><span class="line"></span><br><span class="line">:: Kuruluma onay veriyor musunuz? [E/h] E</span><br><span class="line">(1/1) anahtarlıktaki anahtarlar kontrol ediliyor [<span class="comment">######################] 100%</span></span><br><span class="line">(1/1) paket bütü<span class="built_in">nl</span>üğü kontrol ediliyor [<span class="comment">######################] 100%</span></span><br><span class="line">(1/1) paket dosyaları yükleniyor [<span class="comment">######################] 100%</span></span><br><span class="line">(1/1) dosya çakışmaları kontrol ediliyor [<span class="comment">######################] 100%</span></span><br><span class="line">(1/1) disk alanı kontrol ediliyor [<span class="comment">######################] 100%</span></span><br><span class="line">:: Paket değişiklikleri işleniyor...</span><br><span class="line">(1/1) yükleniyor php-box [<span class="comment">######################] 100%</span></span><br><span class="line"></span><br><span class="line">php-box is installed as executable <span class="string">&#x27;php-box&#x27;</span>.</span><br><span class="line"></span><br><span class="line">[WARNING] the phar.readonly option of php must be <span class="built_in">set</span> to <span class="string">&#x27;Off&#x27;</span>.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>php-box</tag>
        <tag>makepkg</tag>
        <tag>gpg</tag>
      </tags>
  </entry>
  <entry>
    <title>Touchpad Kurulumu ve Yapılandırması Nasıl Yapılır?</title>
    <url>/post/611388161.html</url>
    <content><![CDATA[<p>Extra deposundaki xf86-input-synaptics paketini yüklemeliyiz. Aşağıdaki komutlarla kurulumu tamamlayalım.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S xf86-input-synaptics</span><br></pre></td></tr></table></figure>

<p>Şimdi Touchpad’imizi yapılandıralım. Kurulumu tamamladıktan sonra öntanımlı yapılandırma dosyası aşağıdaki yere gidecektir.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/X11/xorg.conf.d/70-synaptics.conf</span><br></pre></td></tr></table></figure>

<p>70-synaptics.conf dosyasını &#x2F;etc&#x2F;X11&#x2F;xorg.conf.d ‘ ye kopyalayalım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">cp</span> /usr/share/X11/xorg.conf.d/70-synaptics.conf /etc/X11/xorg.conf.d</span><br></pre></td></tr></table></figure>

<p>Bilgisayarımızı yeniden başlatalım.</p>
<p>Bu yazıda touchpad yapılandırması ve kurulumundan bahsettik. Daha fazla bilgi için <span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1RvdWNocGFkX1N5bmFwdGljcyNDb25maWd1cmF0aW9u">https://wiki.archlinux.org/index.php/Touchpad_Synaptics#Configuration<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>touchpad</tag>
      </tags>
  </entry>
  <entry>
    <title>Kernel Driver Yüklenmedi Problemi Nasıl Çözülür?</title>
    <url>/post/1582768901.html</url>
    <content><![CDATA[<p>Kernel driver yüklenmedi problemini çözmek için aşağıdaki adımları takip edelim.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1582768901001.png"></p>
<p>Terminali açalım ve root olalım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ramazan@ramazan ~]$ su</span><br><span class="line">Parola:</span><br><span class="line">[root@ramazan ramazan]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>Virtualbox kurulumunu gerçekleştirelim.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pacman -S virtualbox</span></span><br></pre></td></tr></table></figure>

<p>Host modüllerini kuralım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pacman -S virtualbox-host-modules</span></span><br></pre></td></tr></table></figure>

<p>Ardından;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dkms autoinstall</span></span><br></pre></td></tr></table></figure>

<p>Aktifleştirme işlemini gerçekleştirelim</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modprobe vboxdrv</span></span><br></pre></td></tr></table></figure>

<p>modprobe komutları daima root olarak çalıştırılır.</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>kernel</tag>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title>Spice Grafikleri Desteklenmedi Problemi Nasıl Çözülür?</title>
    <url>/post/331929281.html</url>
    <content><![CDATA[<p>Virt-manager programını açtım. Sanal makineyi oluşturma esnasında hata aldım.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_331929281001.png"></p>
<p>unsupported configuration: spice graphics are not supported with this QEMU.</p>
<p>Bunun çözümü için;</p>
<p>qemu-git paketini bağımlılıklarıyla beraber sildim. Sonra qemu-spice paketinin kurulumunu yaptım.</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy9xZW11LXNwaWNlLw==">qemu-spice-AUR<i class="fa fa-external-link-alt"></i></span></p>
<p>Bu problemi bu paketin kurulumuyla çözdüm.</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>virt manager</tag>
        <tag>qemu</tag>
        <tag>spice</tag>
      </tags>
  </entry>
  <entry>
    <title>Bundler Bulunamadı Problemi Nasıl Çözülür?</title>
    <url>/post/747398286.html</url>
    <content><![CDATA[<p>Bundler bulunamadı problemini çözmek için aşağıdaki adımları takip etmeniz yeterlidir.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramarcher /opt/development/metasploit-framework $ bundle install</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/lib/ruby/2.3.0/rubygems/dependency.rb:319:<span class="keyword">in</span> `to_specs<span class="string">&#x27;: Could not find &#x27;</span>bundler<span class="string">&#x27; (&gt;= 0.a) among 16 total gem(s) (Gem::LoadError)</span></span><br><span class="line"><span class="string">Checked in &#x27;</span>GEM_PATH=/home/ramarcher/.rvm/gems/ruby-2.3.1@metasploit-framework:/home/ramarcher/.rvm/gems/ruby-2.3.1@global<span class="string">&#x27;, execute `gem env` for more information</span></span><br><span class="line"><span class="string"> from /usr/lib/ruby/2.3.0/rubygems/dependency.rb:328:in `to_spec&#x27;</span></span><br><span class="line"> from /usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_gem.rb:65:<span class="keyword">in</span> `gem<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> from /usr/bin/bundle:22:in `&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramarcher /opt/development/metasploit-framework $ bundle update</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramarcher /opt/development/metasploit-framework $ gem install bundler</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Fetching: bundler-1.12.5.gem (100%)</span><br><span class="line">Successfully installed bundler-1.12.5</span><br><span class="line">Parsing documentation <span class="keyword">for</span> bundler-1.12.5</span><br><span class="line">Installing ri documentation <span class="keyword">for</span> bundler-1.12.5</span><br><span class="line">Done installing documentation <span class="keyword">for</span> bundler after 5 seconds</span><br><span class="line">1 gem installed</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ramarcher /opt/development/metasploit-framework $ bundle install</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Fetching gem metadata from https://rubygems.org/</span><br><span class="line">Fetching version metadata from https://rubygems.org/</span><br><span class="line">Fetching dependency metadata from https://rubygems.org/</span><br><span class="line">Resolving dependencies....</span><br><span class="line">Installing rake 11.2.2</span><br><span class="line">Installing i18n 0.7.0</span><br><span class="line">Using json 1.8.3</span><br><span class="line">Installing minitest 5.9.0</span><br><span class="line">Installing thread_safe 0.3.5</span><br><span class="line">Installing builder 3.2.2</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>bundler</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam Kurulum Problemi Nasıl Çözülür?</title>
    <url>/post/1616795057.html</url>
    <content><![CDATA[<p>Birkaç gün önce steam yükledim. Fakat Steam’i açmaya çalıştığımda açılmadı. Bu yüzden uçbirim üzerinde Steam’i açıp çıktılarına baktım ve aşağıdaki çıktıları elde ettim.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/ramazan/.local/share/Steam/steam.sh: line 154: VERSION_ID: unbound variable</span><br><span class="line">/home/ramazan/.local/share/Steam/steam.sh: line 154: VERSION_ID: unbound variable</span><br><span class="line">Running Steam on <span class="built_in">arch</span>  64-bit</span><br><span class="line">/home/ramazan/.local/share/Steam/steam.sh: line 154: VERSION_ID: unbound variable</span><br><span class="line">STEAM_RUNTIME is enabled automatically</span><br><span class="line">Installing breakpad exception handler <span class="keyword">for</span> appid(steam)/version(1468023329)</span><br><span class="line">libGL error: unable to load driver: i965_dri.so</span><br><span class="line">libGL error: driver pointer missing</span><br><span class="line">libGL error: failed to load driver: i965</span><br><span class="line">libGL error: unable to load driver: i965_dri.so</span><br><span class="line">libGL error: driver pointer missing</span><br><span class="line">libGL error: failed to load driver: i965</span><br><span class="line">libGL error: unable to load driver: swrast_dri.so</span><br><span class="line">libGL error: failed to load driver: swrast</span><br></pre></td></tr></table></figure>

<p>Bunun çözümü için Aşağıdaki komutları sırasıyla girdim.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find ~/.steam/root/ \( -name <span class="string">&quot;libgcc_s.so*&quot;</span> -o -name <span class="string">&quot;libstdc++.so*&quot;</span> -o -name <span class="string">&quot;libxcb.so*&quot;</span> -o -name <span class="string">&quot;libgpg-error.so*&quot;</span> \) -<span class="built_in">print</span> -delete</span><br><span class="line">find ~/.local/share/Steam/ \( -name <span class="string">&quot;libgcc_s.so*&quot;</span> -o -name <span class="string">&quot;libstdc++.so*&quot;</span> -o -name <span class="string">&quot;libxcb.so*&quot;</span> -o -name <span class="string">&quot;libgpg-error.so*&quot;</span> \) -<span class="built_in">print</span> -delete</span><br><span class="line"><span class="built_in">rm</span> -f ~/.local/share/Steam/ubuntu12_32/steam-runtime/i386/usr/lib/i386-linux-gnu/libstdc++.so.6</span><br><span class="line"><span class="built_in">rm</span> -f ~/.local/share/Steam/ubuntu12_32/steam-runtime/i386/usr/lib/i386-linux-gnu/libgcc_s.so.1</span><br><span class="line">LC_ALL=C steam</span><br></pre></td></tr></table></figure>

<p>Kurulumdan sonra menümde steam’i açabilirim.</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>steam</tag>
      </tags>
  </entry>
  <entry>
    <title>Aptana Studio Kurulumu Nasıl Yapılır?</title>
    <url>/post/1338733124.html</url>
    <content><![CDATA[<p>Bugün Arch Linux’ta Aptana Studio 3 kurulumunda karşılaştığımız hatayı nasıl çözebileceğimizi ve aptana studio’yu nasıl kurabileceğimizden bahsedeceğim.</p>
<span id="more"></span>

<p>Karşılaşılan Hata:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span>: <span class="string">&#x27;Aptana_Studio_3&#x27;</span> durumlanamadı: Böyle bir dosya ya da dizin yok</span><br><span class="line">==&gt; HATA: package() içinde bir hata oluştu.</span><br><span class="line">    Çıkılıyor...</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://aur.archlinux.org/aptana-studio.git</span><br><span class="line">$ <span class="built_in">cd</span> aptana-studio</span><br><span class="line">$ makepkg -g &gt;&gt; PKGBUILD</span><br><span class="line">$ makepkg -sri</span><br></pre></td></tr></table></figure>

<p>Ardından aşağıdaki komutla PKGBUILD dosyasını düzenleyin.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo gedit PKGBUILD</span><br></pre></td></tr></table></figure>

<p>build kısmını aşağıdaki şekilde değiştiriniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">build</span></span>() &#123;</span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$srcdir</span></span><br><span class="line">  <span class="built_in">mkdir</span> -p Aptana_Studio_3</span><br><span class="line">  bsdtar -xf *.zip -C Aptana_Studio_3</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$srcdir</span>/usr/bin/</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;exec /usr/lib/aptana/AptanaStudio3&#x27;</span> &gt; <span class="variable">$srcdir</span>/usr/bin/aptana-studio</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Kaydedip çıkınız ve kurulumu şu şekilde tamamlayınız.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ makepkg -sri</span><br></pre></td></tr></table></figure>

<p>Aptana-studio’yu dmenu üzerinden açmaya çalıştığımda program çalışmadı. Bunun sebebini öğrenmek için terminal üzerinde aşağıdaki komutla programı açmaya çalıştım ve şu çıktılarla karşılaştım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ aptana-studio</span><br><span class="line">/usr/bin/aptana-studio: satır 1: /usr/lib/aptana/AptanaStudio3: Erişim engellendi</span><br><span class="line">/usr/bin/aptana-studio: satır 1: <span class="built_in">exec</span>: /usr/lib/aptana/AptanaStudio3: çalıştırılamıyor: Erişim engellendi</span><br></pre></td></tr></table></figure>

<p>Bunun çözümü için şu komutla çalıştırma yetkisi verdim.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">chmod</span> +x /usr/lib/AptanaStudio3</span><br></pre></td></tr></table></figure>

<p>Ardından program açıldı.Ancak yine bir hatayla karşılaştık :)</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1338733124001.png"></p>
<p>Bu hatanın çözümü için Java Sürümünde bir değişiklik yapmamız gerekiyor.</p>
<p>jdk8 kurulumu için aşağıdaki adımları takip ediniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /tmp</span><br><span class="line">$ git <span class="built_in">clone</span> https://aur.archlinux.org/jdk8.git</span><br><span class="line">$ <span class="built_in">cd</span> jdk8/</span><br><span class="line">$ makepkg -g &gt;&gt; PKGBUILD</span><br><span class="line">$ makepkg -sri</span><br></pre></td></tr></table></figure>

<p>Bu şekilde kurulumumuzu tamamladık. İlk önce hangi java sürümümüzün aktif olduğuna bakalım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo archlinux-java status</span><br><span class="line">Available Java environments:</span><br><span class="line">  java-11-openjdk (default)</span><br><span class="line">  java-8-jdk</span><br></pre></td></tr></table></figure>

<p>Şimdi Java-8-jdk paketimizi default hale getirelim.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo archlinux-java <span class="built_in">set</span> java-8-jdk</span><br></pre></td></tr></table></figure>

<p>Ardından tekrar durumumuzu bir kontrol edelim.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo archlinux-java status</span><br><span class="line">Available Java environments:</span><br><span class="line">  java-11-openjdk</span><br><span class="line">  java-8-jdk (default)</span><br></pre></td></tr></table></figure>

<p>Güncellemelerimizi yapalım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -Syyu</span><br></pre></td></tr></table></figure>

<p>Son olarak bilgisayarımızı yeniden başlatalım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo reboot -h now</span><br></pre></td></tr></table></figure>

<p>Uyarı: Java kullanan programları root olarak çalıştırırsanız javayıda root olarak çalıştırmanız gerekir. Komutlarla javayı root olarak kullanmak sisteminize zarar verebilir.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ aptana-studio</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1338733124002.png"></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>aptana studio</tag>
      </tags>
  </entry>
  <entry>
    <title>conky-lua-archers-git Derleme Hatası Nasıl Çözülür?</title>
    <url>/post/524097281.html</url>
    <content><![CDATA[<p>conky-lua-archers-git paketini derlerken karşılaşmış olduğum hatayı nasıl düzelteceğimizden bahsedeceğim.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_524097281001.png"></p>
<p>paket:<span class="exturl" data-url="aHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy9jb25reS1sdWEtYXJjaGVycy1naXQ=">https://aur.archlinux.org/packages/conky-lua-archers-git<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span>: cannot create directory <span class="string">&#x27;build/&#x27;</span>: File exists.</span><br></pre></td></tr></table></figure>

<p>Bu problemi şu şekilde çözeceğiz.</p>
<p>PKGBUILD dosyasını şu şekilde düzenleyiniz..</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">prepare</span></span>() &#123;</span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;srcdir&#125;</span>/<span class="variable">$&#123;_pkgname&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> -p build/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Şimdi tekrar derlemenizi yapabilirsiniz.</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>conky</tag>
        <tag>compiling</tag>
      </tags>
  </entry>
  <entry>
    <title>İzin verilmedi, KVM başlatılamadı Problemi Nasıl Çözülür?</title>
    <url>/post/2231193092.html</url>
    <content><![CDATA[<p>Böyle bir hata ile karşılaşırsanız şu adımları izlemelisiniz.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2231193092001.png"></p>
<p>Aşağıdaki adımları yaptığınızdan emin olunuz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo modprobe kvm-intel</span><br><span class="line">$ sudo groupadd kvm</span><br><span class="line">$ sudo gpasswd -a USERNAME kvm</span><br><span class="line"><span class="built_in">chown</span> root:kvm /dev/kvm</span><br></pre></td></tr></table></figure>

<p>Bu komut gerçekleşmezse aşağıdaki komutu deneyiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setfacl -m g::rw /dev/kvm</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>kvm</tag>
        <tag>arch linux</tag>
        <tag>qemu</tag>
      </tags>
  </entry>
  <entry>
    <title>Requested operation is not valid network &#39;default&#39; is not active Problemi Nasıl Çözülür?</title>
    <url>/post/2393086311.html</url>
    <content><![CDATA[<p>Bu problemin çözümü için aşağıdaki komutu yazmanız yeterli olacaktır.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2393086311001.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo virsh net-start default</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>virt manager</tag>
        <tag>virsh</tag>
      </tags>
  </entry>
  <entry>
    <title>İşlem gerçekleştirilemedi (Çakışan dosyalar) Hatası Nasıl Çözülür?</title>
    <url>/post/1871179136.html</url>
    <content><![CDATA[<p>Aşağıdaki komut ile kurulum yapmaya çalıştığımda hata ile karşılaştım.</p>
<span id="more"></span>

<p>Bu hatayı aşağıdaki çıktıdan görüntüleyebilirsiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S retext</span><br><span class="line">[sudo] password <span class="keyword">for</span> ramarcher:</span><br><span class="line">paket bağımlılıkları çözümleniyor...</span><br><span class="line">varsa paketler arası çakışmalara bakılıyor...</span><br><span class="line"></span><br><span class="line">Paketler (4) python-markdown-2.6.11-2  python-markdown-math-0.6-2  python-markups-3.0.0-5  retext-7.0.4-3</span><br><span class="line"></span><br><span class="line">Toplam Kurulum Boyutu:  1,60 MiB</span><br><span class="line"></span><br><span class="line">:: Kuruluma onay veriyor musunuz? [E/h] e</span><br><span class="line">(4/4) anahtarlıktaki anahtarlar kontrol ediliyor                                           [<span class="comment">#####################################################] 100%</span></span><br><span class="line">(4/4) paket bütü<span class="built_in">nl</span>üğü kontrol ediliyor                                                     [<span class="comment">#####################################################] 100%</span></span><br><span class="line">(4/4) paket dosyaları yükleniyor                                                           [<span class="comment">#####################################################] 100%</span></span><br><span class="line">(4/4) dosya çakışmaları kontrol ediliyor                                                   [<span class="comment">#####################################################] 100%</span></span><br><span class="line">hata: işlem gerçekleştirilemedi (çakışan dosyalar)</span><br><span class="line">python-markdown: /usr/bin/markdown_py dosya sisteminde mevcut</span><br><span class="line">python-markdown: /usr/lib/python3.7/site-packages/markdown/__init__.py dosya sisteminde mevcut</span><br><span class="line">python-markdown: /usr/lib/python3.7/site-packages/markdown/__main__.py dosya sisteminde mevcut</span><br><span class="line">..</span><br><span class="line">..</span><br><span class="line">..</span><br><span class="line">python-markdown: /usr/lib/python3.7/site-packages/markdown/util.py dosya sisteminde mevcut</span><br><span class="line">Hata oluştu, hiçbir paket güncellenmedi.</span><br></pre></td></tr></table></figure>

<p>Böyle bir hata ile karşılaştığımız için aşağıdaki komutla bu paketi yükleyebilirsiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pip install retext</span><br><span class="line">Collecting retext</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/31/91/6eff0afd947ca945dd63bb4f7fd0ea1872f80acef338eec4076642a824a8/ReText-7.0.4.tar.gz (402kB)</span><br><span class="line">    100% |████████████████████████████████| 409kB 2.1MB/s</span><br><span class="line">Collecting docutils (from retext)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/36/fa/08e9e6e0e3cbd1d362c3bbee8d01d0aedb2155c4ac112b19ef3cae8eed8d/docutils-0.14-py3-none-any.whl (543kB)</span><br><span class="line">    100% |████████████████████████████████| 552kB 7.3MB/s</span><br><span class="line">Requirement already satisfied: Markdown <span class="keyword">in</span> /usr/lib/python3.7/site-packages (from retext) (3.0.1)</span><br><span class="line">Collecting Markups&gt;=2.0 (from retext)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/56/c0/d77c6af4f43c00268372fcbaee715dc798ce70c6c6a93ae30bec32af94ed/Markups-3.0.0-py2.py3-none-any.whl</span><br><span class="line">Requirement already satisfied: Pygments <span class="keyword">in</span> /usr/lib/python3.7/site-packages (from retext) (2.3.1)</span><br><span class="line">Requirement already satisfied: chardet&gt;=2.3 <span class="keyword">in</span> /usr/lib/python3.7/site-packages (from retext) (3.0.4)</span><br><span class="line">Collecting python-markdown-math (from Markups&gt;=2.0-&gt;retext)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/7c/81/2c86570437821d77b90a6d939d54e11b507b71785850840a5e56d8febeca/python_markdown_math-0.6-py2.py3-none-any.whl</span><br><span class="line">Installing collected packages: docutils, python-markdown-math, Markups, retext</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> retext ... <span class="keyword">done</span></span><br><span class="line">Successfully installed Markups-3.0.0 docutils-0.14 python-markdown-math-0.6 retext-7.0.4</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>retext</tag>
      </tags>
  </entry>
  <entry>
    <title>glxinfo Komut Yok Hatası Nasıl Çözülür?</title>
    <url>/post/950666780.html</url>
    <content><![CDATA[<p>Komutu girdiğimde şu şekilde bir hata alıyorum.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ glxinfo | grep direct</span><br><span class="line">bash: glxinfo: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>

<p>Bu problemin kalkması için aşağıdaki paketi kurunuz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S mesa-demos</span><br><span class="line">paket bağımlılıkları çözümleniyor...</span><br><span class="line">varsa paketler arası çakışmalara bakılıyor...</span><br><span class="line"></span><br><span class="line">Paketler (3) freeglut-3.0.0-2  glew-2.1.0-1  mesa-demos-8.4.0-1</span><br><span class="line"></span><br><span class="line">Toplam İndirme Boyutu:  1,84 MiB</span><br><span class="line">Toplam Kurulum Boyutu:  9,82 MiB</span><br><span class="line"></span><br><span class="line">:: Kuruluma onay veriyor musunuz? [E/h] E</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">:: Bağlantılı işlemler listesi çalışıyor...</span><br><span class="line">(1/1) Arming ConditionNeedsUpdate...</span><br></pre></td></tr></table></figure>

<p>Ardından komutumuzu tekrar girelim.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ glxinfo | grep direct</span><br><span class="line">direct rendering: Yes</span><br><span class="line">    GL_ARB_depth_clamp, GL_ARB_derivative_control, GL_ARB_direct_state_access,</span><br><span class="line">    GL_ARB_draw_elements_base_vertex, GL_ARB_draw_indirect,</span><br><span class="line">    GL_ARB_indirect_parameters, GL_ARB_instanced_arrays,</span><br><span class="line">    GL_ARB_map_buffer_range, GL_ARB_multi_bind, GL_ARB_multi_draw_indirect,</span><br><span class="line">    GL_ARB_draw_elements_base_vertex, GL_ARB_draw_indirect,</span><br><span class="line">    GL_ARB_indirect_parameters, GL_ARB_instanced_arrays,</span><br><span class="line">    GL_ARB_map_buffer_range, GL_ARB_multi_bind, GL_ARB_multi_draw_indirect,</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>glxinfo</tag>
        <tag>mesa demos</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Anaconda Kurulumu Nasıl Yapılır?</title>
    <url>/post/1631539360.html</url>
    <content><![CDATA[<p>Wget ile .sh uzantılı kurulum dosyasını indirmemiz için aşağıdaki paketlerin sisteminizde kurulu olduğundan emin olunuz.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S wget bzip2</span><br></pre></td></tr></table></figure>

<p>Bu <span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2Rvd25sb2FkLyNsaW51eA==">Link’e<i class="fa fa-external-link-alt"></i></span> tıklayınız.</p>
<p>Download butonunun üzerinde sağ tıklayıp linki kopyalayınız.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1631539360001.png"></p>
<p>Ardından terminali açınız.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>

<p>Ardından kurulum dosyasını açınız.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo sh Anaconda3-2018.12-Linux-x86_64.sh</span><br><span class="line">Please answer <span class="string">&#x27;yes&#x27;</span> or <span class="string">&#x27;no&#x27;</span>:<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> &gt;&gt;&gt; yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Anaconda3 will now be installed into this location:</span></span><br><span class="line"><span class="string"> /home/ramarcher/anaconda3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Press ENTER to confirm the location</span></span><br><span class="line"><span class="string"> - Press CTRL-C to abort the installation</span></span><br><span class="line"><span class="string"> - Or specify a different location below</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[/home/ramarcher/anaconda3] &gt;&gt;&gt; /usr/local/anaconda/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>En alta aşağıdaki değişkeni ekleyiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># added by Anaconda3 installer</span></span><br><span class="line"> <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/anaconda/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>Ardından bilgisayarınızı yeniden başlatınız. Jupyter Notebook ve Spyder’ı açmaya çalışalım. Uçbirim üzerinde spyder yazalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1631539360002.png"></p>
<p>Terminal üzerinde jupyter notebook yazıp enter’a basalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1631539360003.png"></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>python</tag>
        <tag>anaconda</tag>
        <tag>spyder</tag>
        <tag>jupyter notebook</tag>
      </tags>
  </entry>
  <entry>
    <title>Unrecognized Archive Format Hatası Nasıl Çözülür?</title>
    <url>/post/3747547321.html</url>
    <content><![CDATA[<p>Arch Linux sistemimi güncellemek istediğimde bir hata ile karşılaştım.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3747547321001.png"></p>
<p>Hatanın çıktısını aşağıdan inceleyebilirsiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -Syu</span><br><span class="line">[sudo] password <span class="keyword">for</span> ramazan:</span><br><span class="line">:: Synchronizing package databases...</span><br><span class="line"> core is up to <span class="built_in">date</span>         0,0   B  0,00B/s 00:00 [co  o  o  o  o  o  o  ]   0%</span><br><span class="line"> extra is up to <span class="built_in">date</span>        0,0   B  0,00B/s 00:00 [co  o  o  o  o  o  o  ]   0%</span><br><span class="line"> community is up to <span class="built_in">date</span>    0,0   B  0,00B/s 00:00 [co  o  o  o  o  o  o  ]   0%</span><br><span class="line"> multilib is up to <span class="built_in">date</span>     0,0   B  0,00B/s 00:00 [co  o  o  o  o  o  o  ]   0%</span><br><span class="line"> archmanrepo is up to <span class="built_in">date</span></span><br><span class="line">:: Starting full system upgrade...</span><br><span class="line">error: could not open file /var/lib/pacman/sync/archmanrepo.db: Unrecognized archive format</span><br><span class="line">error: failed to prepare transaction (invalid or corrupted database)</span><br></pre></td></tr></table></figure>

<p>Bu hatanın çözümü için yukarıdaki çıktıyı okumamız bize çok yardımcı olacaktır.</p>
<p>İlk önce hataya sebebiyet veren dosyayı siliniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">rm</span> -R /var/lib/pacman/sync/</span><br></pre></td></tr></table></figure>

<p>Ardından sistemi ve paketleri güncelleme işlemlerini başarıyla gerçekleştirebilirsiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -Syu</span><br><span class="line">:: Synchronizing package databases...</span><br><span class="line"> core                             134,2 KiB   610K/s 00:00 [-------------------------------] 100%</span><br><span class="line"> extra                           1692,7 KiB  1141K/s 00:01 [-------------------------------] 100%</span><br><span class="line"> community                          4,8 MiB  3,03M/s 00:02 [-------------------------------] 100%</span><br><span class="line"> multilib                         174,6 KiB  10,7M/s 00:00 [-------------------------------] 100%</span><br><span class="line"> archmanrepo                       11,6 KiB  3,78M/s 00:00 [-------------------------------] 100%</span><br><span class="line">:: Starting full system upgrade...</span><br><span class="line">resolving dependencies...</span><br><span class="line">looking <span class="keyword">for</span> conflicting packages...</span><br><span class="line"></span><br><span class="line">Packages (17) bind-tools-9.13.5-4  curl-7.63.0-4  dnsmasq-2.80-2  gnutls-3.6.5-4</span><br><span class="line">              iputils-20180629.f6aac8d-3  kauth-5.54.0-2  lftp-4.8.4-4  libidn2-2.1.0-1</span><br><span class="line">              libpsl-0.20.2-3  libsystemd-240.34-3  s-nail-14.9.11-2  systemd-240.34-3</span><br><span class="line">              systemd-sysvcompat-240.34-3  tar-1.31-2  vim-8.1.0751-1  vim-runtime-8.1.0751-1</span><br><span class="line">              wget-1.20.1-2</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">( 5/12) Updating udev hardware database...</span><br><span class="line">( 6/12) Applying kernel sysctl settings...</span><br><span class="line">( 7/12) Creating system user accounts...</span><br><span class="line">( 8/12) Creating temporary files...</span><br><span class="line">( 9/12) Reloading device manager configuration...</span><br><span class="line">(10/12) Arming ConditionNeedsUpdate...</span><br><span class="line">(11/12) Updating the info directory file...</span><br><span class="line">(12/12) Updating the desktop file MIME <span class="built_in">type</span> cache...</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Device /dev/loop/ not initialized in udev database even after waiting 100000000 microseconds.</title>
    <url>/post/2777482735.html</url>
    <content><![CDATA[<p>Arch Linux kurulumu grup yapılandırması esnasında böyle bir uyarıyla karşılaşıyor ve kurulumunuzu tamamlıyamıyor iseniz şu adımları izleyebilirsiniz.</p>
<span id="more"></span>

<p>Karşılaşılan uyarı:</p>
<p>Device &#x2F;dev&#x2F;loop&#x2F; not initialized in udev database even after waiting 100000000 microseconds.<br>şeklinde başlayıp döngüden çıkmayan bir uyarı ile karşılaşırsınız.</p>
<p>Öncelikle kurulumda bu işlemi sonlandırmak için Ctrl+C tuşlarına basınız.</p>
<p>Chroot iseniz</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exit</span></span><br></pre></td></tr></table></figure>

<p>komutu ile çıkış yapınız ve sırasıyla aşağıdaki dört komutu giriniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mkdir /mnt/hostlvm</span></span><br><span class="line"><span class="comment"># mount --bind /run/lvm /mnt/hostlvm</span></span><br><span class="line"><span class="comment"># arch-chroot /mnt</span></span><br><span class="line"><span class="comment"># ln -s /hostlvm /run/lvm</span></span><br></pre></td></tr></table></figure>

<p>Ardından girmeniz gereken gerekli komutu başarıyla çalıştırabilirsiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grub-mkconfig -o /boot/grub/grub.cfg</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>grub</tag>
      </tags>
  </entry>
  <entry>
    <title>Çiftli Bağlı Listeler</title>
    <url>/post/3237563777.html</url>
    <content><![CDATA[<p>Çiftli bağlı liste oluşturma ve bunun bir döngü ile gerçekleştirilmesi, listenen başına ve sonuna eleman ekleme, ilgili listeden eleman silme örneklerini inceleyebilirsiniz.</p>
<span id="more"></span>

<ul>
<li><a href="#1">Çiftli Bağlı Liste Oluşturma</a></li>
<li><a href="#2">For döngüsüyle Çiftli Bağlı Liste Oluşturma</a></li>
<li><a href="#3">Listenin Başına Eleman Ekleme</a></li>
<li><a href="#4">Listenin Sonuna Eleman Ekleme</a></li>
<li><a href="#5">Listeden Eleman Silme</a></li>
</ul>
<p><a name="1"></a> <strong>Örnek-1:</strong> 3 elemanlı çiftli bağlı bir liste oluşturunuz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3237563777001.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ciftliBagliListe</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Ciftli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Ciftli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Ciftli next;</span><br><span class="line">            <span class="keyword">public</span> Ciftli prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ciftli a = <span class="keyword">new</span> Ciftli();</span><br><span class="line">            a.data = <span class="number">0</span>;</span><br><span class="line">            a.next = <span class="literal">null</span>;</span><br><span class="line">            a.prev = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Ciftli b = <span class="keyword">new</span> Ciftli();</span><br><span class="line">            b.data = <span class="number">1</span>;</span><br><span class="line">            a.next = b;</span><br><span class="line">            b.prev = a;</span><br><span class="line">            b.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Ciftli c = <span class="keyword">new</span> Ciftli();</span><br><span class="line">            c.data = <span class="number">2</span>;</span><br><span class="line">            b.next = c;</span><br><span class="line">            c.prev = b;</span><br><span class="line">            c.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Head = a;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (a != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(a.data);</span><br><span class="line">                a = a.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a name="2"></a> <strong>Örnek-2:</strong> Head, çiftli bağlı listenin ilk elemanına bakmaktadır. 10 elemanlı, veri değeri indis değerine eşit olan çiftli bağlı liste oluşturunuz. Bu listeyi baştan sona ve sondan başa yazdırarak kontrol ediniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3237563777002.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ciftliBagliListe_2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Ciftli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Ciftli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Ciftli next;</span><br><span class="line">            <span class="keyword">public</span> Ciftli prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ciftli a = <span class="literal">null</span>;</span><br><span class="line">            Ciftli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Ciftli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    a.prev = <span class="literal">null</span>;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a.prev = x;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line"></span><br><span class="line">            x = a;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.prev;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a name="3"></a> <strong>Örnek-3:</strong> Head, çiftli bağlı listenin ilk elemanına bakmaktadır. Listenin başına eleman ekleyiniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3237563777003.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ciftliBagliListe_3</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Ciftli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Ciftli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Ciftli next;</span><br><span class="line">            <span class="keyword">public</span> Ciftli prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ciftli a = <span class="literal">null</span>;</span><br><span class="line">            Ciftli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Ciftli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    a.prev = <span class="literal">null</span>;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a.prev = x;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Ciftli b = <span class="keyword">new</span> Ciftli();</span><br><span class="line">            b.data = <span class="number">1234</span>;</span><br><span class="line">            b.next = Head;</span><br><span class="line">            b.prev = <span class="literal">null</span>;</span><br><span class="line">            Head.prev = b;</span><br><span class="line">            Head = b;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;----&quot;</span>);</span><br><span class="line"></span><br><span class="line">            x = a;</span><br><span class="line">            <span class="keyword">while</span>(x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.prev;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a name="4"></a> <strong>Örnek-4:</strong> Head, çiftli bağlı listenin ilk elamanına bakmaktadır. Listenin sonuna 1 eleman ekleyiniz.<br>Listeyi baştan sona ve sondan başa yazdırarak elemanın eklenip eklenmediğini ve çiftli bağlı liste yapısının oluşup oluşmadığını gözlemleyiniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3237563777004.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ciftliBagliListe_4</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Ciftli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Ciftli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Ciftli next;</span><br><span class="line">            <span class="keyword">public</span> Ciftli prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ciftli a = <span class="literal">null</span>;</span><br><span class="line">            Ciftli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Ciftli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    a.prev = <span class="literal">null</span>;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a.prev = x;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Ciftli b = <span class="keyword">new</span> Ciftli();</span><br><span class="line">            b.data = <span class="number">1234</span>;</span><br><span class="line">            x.next = b;</span><br><span class="line">            b.prev = x;</span><br><span class="line">            b.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a name="5"></a> <strong>Örnek-5:</strong> Head, çiftli bağlı listenin başına bakmaktadır. Çiftli bağlı listeden 5 olan elemanı siliniz.<br>Ardından listenin elemanlarını yazdırarak elemanın silinip silinmediğini kontrol ediniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_3237563777005.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ciftliBagliListe_5</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Ciftli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Ciftli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Ciftli next;</span><br><span class="line">            <span class="keyword">public</span> Ciftli prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ciftli a = <span class="literal">null</span>;</span><br><span class="line">            Ciftli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Ciftli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    a.prev = <span class="literal">null</span>;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a.prev = x;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x.data == <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    x.next.prev = x.next.prev.prev;</span><br><span class="line">                    x.prev.next = x.prev.next.next;</span><br><span class="line">                &#125;</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Veri Yapıları</category>
      </categories>
      <tags>
        <tag>çiftli bağlı listeler</tag>
        <tag>dotnet core</tag>
        <tag>linked list</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux üzerinde Adobe Digital Editions Kurulumu Nasıl Yapılır?</title>
    <url>/post/4088382439.html</url>
    <content><![CDATA[<p>Aşağıdaki komutlarla kurulumu yapmaya çalışalım.</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://aur-dev.archlinux.org/adobe-digital-editions.git</span><br><span class="line">$ <span class="built_in">cd</span> adobe-digital-editions/</span><br><span class="line">$ makepkg -g &gt;&gt; PKGBUILD</span><br><span class="line">$ makepkg -sri</span><br></pre></td></tr></table></figure>

<p>Ardından gerekli bağımlılıklar yüklendikten sonra kurulum döngüye girip çalışmayacaktır.</p>
<p>Ctrl+C tuş kombinasyonuyla döngüden çıkınız.</p>
<p>Ardından uçbirim üzerinde aşağıdaki komutla açmaya programı açmaya çalışınız.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">env</span> WINEPREFIX=<span class="string">&quot;/home/ramazan/.wine&quot;</span> wine C:\\windows\\<span class="built_in">command</span>\\start.exe /Unix /home/ramazan/.wine/dosdevices/c:/users/Public/Desktop/Adobe\ Digital\ Editions\ 4.0.lnk</span><br></pre></td></tr></table></figure>

<p>Hata ile karşılaşacaksınız. İndirmiş olduğunuz dizine gidiniz.</p>
<p>ADE_4.0_Installer.exe uzantılı dosya üzerinde sağ tık yapınız.</p>
<p>Open with wine windows program loader’a tıklayıp kurulumu yapınız.</p>
<p>Program yine açılmayacaktır.</p>
<p>Bunun için eksik olan bir bağımlılığı yüklemelisiniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S lib32-mpg123</span><br></pre></td></tr></table></figure>

<p>.NET ile ilgili bir problemle karşılaşacaksınız ve program açılmayacaktır.</p>
<p>Bu problem için;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ winetricks dotnet46</span><br></pre></td></tr></table></figure>

<p>Komutu girip kurulumları tamamlayınız. Kurulum işlemleri uzun sürecektir.</p>
<p>Artık programı başarılı bir şekilde açabilirsiniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_4088382439001.png"></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>adobe digital editions</tag>
      </tags>
  </entry>
  <entry>
    <title>Tekli Bağlı Listeler</title>
    <url>/post/2980211421.html</url>
    <content><![CDATA[<p>Tekli bağlı liste oluşturma ve bunun bir döngü ile gerçekleştirilmesi, listenin başına ve sonuna eleman ekleme, listenin elemanlarını yeni tekli bağlı listeye tersten ekleme gibi bir çok örneği inceleyebilirsiniz.</p>
<span id="more"></span>

<ul>
<li><a href="#1">Tekli Bağlı Liste Oluşturma</a></li>
<li><a href="#2">For döngüsüyle Tekli Bağlı Liste Oluşturma</a></li>
<li><a href="#3">Listenin Başına Eleman Ekleme</a></li>
<li><a href="#4">Listenin Sonuna Eleman Ekleme</a></li>
<li><a href="#5">Listenin elemanlarını Yeni Tekli Bağlı Listeye Tersten Ekleme</a></li>
<li><a href="#6">Belli bir değeri olan elemanın silinmesi</a></li>
<li><a href="#7">İlk Elemanın Silinmesi</a></li>
<li><a href="#8">Son Elemanın Silinmesi</a></li>
<li><a href="#9">Toplam Eleman Sayısını Bulma</a></li>
<li><a href="#10">Veri Değeri 66 Olan Blok Sayısını Bulma</a></li>
<li><a href="#11">Veri Değeri 7 Olan Bloktan Sonra Blok Ekleme</a></li>
<li><a href="#12">Veri Değeri 7 Olan Bloktan Önceki Bloğun Silinmesi</a></li>
</ul>
<p><a name="1"></a></p>
<h2 id="Ornek-1"><a href="#Ornek-1" class="headerlink" title="Örnek 1"></a>Örnek 1</h2><p>4 elemanlı bir tekli bağlı liste oluşturunuz.</p>
<h3 id="Cozum-1"><a href="#Cozum-1" class="headerlink" title="Çözüm 1"></a>Çözüm 1</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421001.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="keyword">new</span> Tekli();</span><br><span class="line">            a.data = <span class="number">5</span>;</span><br><span class="line">            a.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Tekli b = <span class="keyword">new</span> Tekli();</span><br><span class="line">            b.data = <span class="number">1</span>;</span><br><span class="line">            a.next = b;</span><br><span class="line">            b.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Tekli c = <span class="keyword">new</span> Tekli();</span><br><span class="line">            c.data = <span class="number">2</span>;</span><br><span class="line">            b.next = c;</span><br><span class="line">            c.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Tekli d = <span class="keyword">new</span> Tekli();</span><br><span class="line">            d.data = <span class="number">8</span>;</span><br><span class="line">            c.next = d;</span><br><span class="line">            d.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Head = a;</span><br><span class="line">            <span class="keyword">while</span> (a != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(a.data);</span><br><span class="line">                a = a.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="2"></a></p>
<h2 id="Ornek-2"><a href="#Ornek-2" class="headerlink" title="Örnek 2"></a>Örnek 2</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır.<br>Bu listeye 10 adet blok ekleyiniz ve veri değerleri indis değerlerine eşit olsun.<br>Ardından listenin tüm elemanları yazdırınız.</p>
<h3 id="Cozum-2"><a href="#Cozum-2" class="headerlink" title="Çözüm 2"></a>Çözüm 2</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421002.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="3"></a></p>
<h2 id="Ornek-3"><a href="#Ornek-3" class="headerlink" title="Örnek 3:"></a>Örnek 3:</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır. Listenin başına 1 eleman ekleyiniz.<br>Ardından listenin tüm elemanlarını yazdırarak kontrol ediniz.</p>
<h3 id="Cozum-3"><a href="#Cozum-3" class="headerlink" title="Çözüm 3"></a>Çözüm 3</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421003.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_3</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line"></span><br><span class="line">            Tekli yeni = <span class="keyword">new</span> Tekli();</span><br><span class="line">            yeni.data = <span class="number">1234</span>;</span><br><span class="line">            yeni.next = x;</span><br><span class="line"></span><br><span class="line">            Head = yeni;</span><br><span class="line">            <span class="keyword">while</span> (yeni != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(yeni.data);</span><br><span class="line">                yeni = yeni.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="4"></a></p>
<h2 id="Ornek-4"><a href="#Ornek-4" class="headerlink" title="Örnek 4:"></a>Örnek 4:</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır. Listenin sonuna 1 eleman ekleyiniz.<br>Ardından listenin elemanlarını yazdırarak kontrol ediniz.</p>
<h3 id="Cozum-4"><a href="#Cozum-4" class="headerlink" title="Çözüm 4"></a>Çözüm 4</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421004.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_4</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Tekli yeni = <span class="keyword">new</span> Tekli();</span><br><span class="line">            yeni.data = <span class="number">1234</span>;</span><br><span class="line">            yeni.next = <span class="literal">null</span>;</span><br><span class="line">            x.next = yeni;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="5"></a></p>
<h2 id="Ornek-5"><a href="#Ornek-5" class="headerlink" title="Örnek 5:"></a>Örnek 5:</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır. Tüm elemanlarını yeni listeye tersten ekleyiniz.<br>Ardından listeyi yazdırarak tersten ekleme işleminin başarılı bir şekilde sonuçlandığını gözlemleyiniz.</p>
<h3 id="Cozum-5"><a href="#Cozum-5" class="headerlink" title="Çözüm 5"></a>Çözüm 5</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421005.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_5</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="keyword">new</span> Tekli();</span><br><span class="line">            a.data = <span class="number">1</span>;</span><br><span class="line">            a.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Tekli b = <span class="keyword">new</span> Tekli();</span><br><span class="line">            b.data = <span class="number">2</span>;</span><br><span class="line">            a.next = b;</span><br><span class="line">            b.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Tekli c = <span class="keyword">new</span> Tekli();</span><br><span class="line">            c.data = <span class="number">3</span>;</span><br><span class="line">            b.next = c;</span><br><span class="line">            c.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Tekli d = <span class="keyword">new</span> Tekli();</span><br><span class="line">            d.data = <span class="number">4</span>;</span><br><span class="line">            c.next = d;</span><br><span class="line">            d.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            Head = a;</span><br><span class="line">            Tekli last = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">while</span> (a != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Tekli x = <span class="keyword">new</span> Tekli();</span><br><span class="line">                x.data = a.data;</span><br><span class="line">                x.next = last;</span><br><span class="line">                last = x;</span><br><span class="line">                a = a.next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (last != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(last.data);</span><br><span class="line">                last = last.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="6"></a></p>
<h2 id="Ornek-6"><a href="#Ornek-6" class="headerlink" title="Örnek 6:"></a>Örnek 6:</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır. Veri değeri 5 olan bloğu siliniz.<br>Ardından listenin tüm elemanlarını yazdırarak verinin silinmiş olduğunu gözlemleyiniz.</p>
<h3 id="Cozum-6"><a href="#Cozum-6" class="headerlink" title="Çözüm 6"></a>Çözüm 6</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421006.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_6</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x.next == <span class="literal">null</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span> (x.next.data == <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = x.next.next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    x = x.next;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="7"></a></p>
<h2 id="Ornek-7"><a href="#Ornek-7" class="headerlink" title="Örnek 7"></a>Örnek 7</h2><p>Head, tekli bağlı listenin ilk bloğuna bakmaktadır. İlk elemanını siliniz.<br>Listenin tüm elemanlarını yazdırarak elemanın silindiğini gözlemleyiniz.</p>
<h3 id="Cozum-7"><a href="#Cozum-7" class="headerlink" title="Çözüm 7"></a>Çözüm 7</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421007.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_7</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// İlk elemanın silinmesi</span></span><br><span class="line">            Head = Head.next;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="8"></a></p>
<h2 id="Ornek-8"><a href="#Ornek-8" class="headerlink" title="Örnek 8"></a>Örnek 8</h2><p>Head, tekli bağlı listenin ilk bloğuna bakmaktadır. Son elemanını siliniz.<br>Listenin tüm elemanlarını yazdırarak son elemanın silindiğini gözlemleyiniz.</p>
<h3 id="Cozum-8"><a href="#Cozum-8" class="headerlink" title="Çözüm 8"></a>Çözüm 8</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421008.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_8</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x.next.next != <span class="literal">null</span>)</span><br><span class="line">                x = x.next;</span><br><span class="line">            x.next = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="9"></a></p>
<h2 id="Ornek-9"><a href="#Ornek-9" class="headerlink" title="Örnek 9"></a>Örnek 9</h2><p>Head, tekli bağlı listenin ilk bloğuna bakmaktadır. Listede kaç eleman vardır?</p>
<h3 id="Cozum-9"><a href="#Cozum-9" class="headerlink" title="Çözüm 9"></a>Çözüm 9</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_9</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="built_in">int</span> adet = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                adet++;</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(adet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="10"></a></p>
<h2 id="Ornek-10"><a href="#Ornek-10" class="headerlink" title="Örnek 10"></a>Örnek 10</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır. Listede veri değeri 66 olan kaç blok vardır?</p>
<h3 id="Cozum-10"><a href="#Cozum-10" class="headerlink" title="Çözüm 10"></a>Çözüm 10</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_10</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="built_in">int</span> adet = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x.data == <span class="number">66</span>) adet++;</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(adet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="11"></a></p>
<h2 id="Ornek-11"><a href="#Ornek-11" class="headerlink" title="Örnek 11"></a>Örnek 11</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır.<br>Listenin içerisinde veri değeri 7 olan bloktan sonra yeni bir blok ekleyiniz.<br>Ardından listenin tüm elemanlarını yazdırarak bloğun eklenip eklenmediğini kontrol ediniz.</p>
<h3 id="Cozum-11"><a href="#Cozum-11" class="headerlink" title="Çözüm 11"></a>Çözüm 11</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421009.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_11</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x.data == <span class="number">7</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Tekli yeni = <span class="keyword">new</span> Tekli();</span><br><span class="line">                    yeni.data = <span class="number">123</span>;</span><br><span class="line">                    yeni.next = x.next;</span><br><span class="line">                    x.next = yeni;</span><br><span class="line">                &#125;</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="12"></a></p>
<h2 id="Ornek-12"><a href="#Ornek-12" class="headerlink" title="Örnek 12"></a>Örnek 12</h2><p>Head, tekli bağlı listenin ilk elemanına bakmaktadır. Veri değeri 7 olan bloktan önceki bloğu siliniz.<br>Ardından listenin elemanlarını yazdırarak bloğun silinip silinmediğini kontrol ediniz.</p>
<h3 id="Cozum-12"><a href="#Cozum-12" class="headerlink" title="Çözüm 12"></a>Çözüm 12</h3><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421010.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2980211421011.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">tekliBagliListe_12</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Tekli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Tekli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Tekli next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Tekli a = <span class="literal">null</span>;</span><br><span class="line">            Tekli x = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="keyword">new</span> Tekli();</span><br><span class="line">                a.data = i;</span><br><span class="line">                a.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (Head == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    x.next = a;</span><br><span class="line">                    x = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x.next == <span class="literal">null</span> || x.next.next == <span class="literal">null</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span> (x.next.next.data == <span class="number">7</span>)</span><br><span class="line">                    x.next = x.next.next;</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">            x = Head;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(x.data);</span><br><span class="line">                x = x.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Veri Yapıları</category>
      </categories>
      <tags>
        <tag>linked list</tag>
        <tag>tekli bağlı listeler</tag>
      </tags>
  </entry>
  <entry>
    <title>Failed to open disk image file Hatası Nasıl Çözülür?</title>
    <url>/post/2158402559.html</url>
    <content><![CDATA[<p>Archman Linux dağıtımı üzerinde Oracle VirtualBox kullanımı esnasında bir hata ile karşılaştım.</p>
<span id="more"></span>

<p>Daha öncesinde osboxes.org adresi üzerinden indirmiş olduğum .vdi uzantılı hazır arch linux’un CLI versiyonunu kurmuştum.</p>
<p>Ardından bir vdi dosyası ile ikinci bir sanal makine oluşturmaya çalıştığımda ise şöyle bir hata ile karşılaştım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2158402559001.png"></p>
<p>Bu hatanın çözümünü yeni bir UUID ayarlaması yapmak olacaktır.</p>
<p>Bunun için uçbirimi açınız ve aşağıdaki komutu giriniz.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">VBoxManage internalcommands sethduuid <span class="string">&#x27;vdi/uzantılı/dosyanin/dizini/dosya.vdi&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Ardından başarılı bir şekilde .vdi uzantılı dosyanızı ekleyip sanal makinenizi oluşturabilirsiniz.</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>arch linux</tag>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title>Çiftli Bağlı Liste Yapısını Kullanarak Yığın Nasıl Oluşturulur?</title>
    <url>/post/1183902384.html</url>
    <content><![CDATA[<p>Örnek: Çiftli Bağlı Liste yapısını kullanarak Yığın oluşturunuz.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1183902384001.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ciftli_Stack</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Ciftli sp;</span><br><span class="line">        <span class="keyword">static</span> Ciftli Head;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Ciftli</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> data;</span><br><span class="line">            <span class="keyword">public</span> Ciftli next;</span><br><span class="line">            <span class="keyword">public</span> Ciftli prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span>(<span class="params"><span class="built_in">int</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ciftli q = <span class="keyword">new</span> Ciftli();</span><br><span class="line">            q.data = data;</span><br><span class="line">            q.next = <span class="literal">null</span>;</span><br><span class="line">            q.prev = sp;</span><br><span class="line">            <span class="keyword">if</span> (sp == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Head = q;</span><br><span class="line">                sp = q;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                sp.next = q;</span><br><span class="line">                sp = q;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">int</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> data = sp.data;</span><br><span class="line">            sp = sp.prev;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            push(<span class="number">10</span>);</span><br><span class="line">            push(<span class="number">20</span>);</span><br><span class="line">            push(<span class="number">30</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(pop());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Veri Yapıları</category>
      </categories>
      <tags>
        <tag>çiftli bağlı listeler</tag>
        <tag>dotnet core</tag>
        <tag>linked list</tag>
        <tag>stack</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox Secure Boot Problemi Nasıl Çözülür?</title>
    <url>/post/25933388.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Geçersiz bir parola girdiniz. Lütfen kontrol edip tekrar deneyin." data-whm="Şifresi çözülen bu içerik doğrulanamıyor. Ancak yine de göz atabilirsiniz.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ffde7cfdc3ce23bb6fcf58a911eae162630e775af30915cafd1e47ffe787d31c">e38c519f27c752bb12217325efcdb83e9d173f0cebdf30151c6a86876115c908c2799672f5af98ce10360dfca820d1f633367339a3004c8f0ce0e8a8205ab23570852e24205860f4acd9be531eeea4b6c9f310c21556be687bbc8b498248cebbb294600ee16b50f5fec601023c43d3b9f1588713975cb4608112c6e034b26812e9b8692ab8b451f530f35fc5b281a0bc5e79e167e3982350ff57a6cd1a56ce018ad7df6e32d418aeac110f8dac5c17905e09dbe9000c3a0d65c721169b65f708d72e7027107258e1dcf8bf78dd92879b710b7e052b35840828fe823e38bb4d0a407051c6c51b04a674392a5161a59b664a4ef28addafe87c9aa2435b0c2595a9ae020e3a8c0ad481428930f9ff49012df1c05412ef0bbd402939c8d9a7006a5323d350537de46e276c55e0215f4ff409</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">VirtualBox Secure Boot Problemi Nasıl Çözülür</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Debian</tag>
        <tag>Secure Boot</tag>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>Yığınlar</title>
    <url>/post/1582621396.html</url>
    <content><![CDATA[<p>Veri Yapıları dersinde işlenen Stack konusunu bu gönderi altında inceleyebilirsiniz.</p>
<span id="more"></span>

<ul>
<li><a href="#1">Örnek-1</a></li>
<li><a href="#2">Örnek-2</a></li>
</ul>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1582621396001.png"></p>
<p><a name="1"></a> <strong>Örnek-1:</strong></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">stack</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> sp = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span>[] stack = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span>(<span class="params"><span class="built_in">int</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            sp++;</span><br><span class="line">            stack[sp] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">int</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> data = stack[sp];</span><br><span class="line">            sp--;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            push(<span class="number">10</span>);</span><br><span class="line">            push(<span class="number">20</span>);</span><br><span class="line">            push(<span class="number">30</span>);</span><br><span class="line">            push(<span class="number">40</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(pop());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a name="2"></a> <strong>Örnek-2:</strong></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">stack_2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> sp = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> max = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span>[] stack = <span class="keyword">new</span> <span class="built_in">int</span>[max];</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">push</span>(<span class="params"><span class="built_in">int</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sp &gt;= max)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Stack Overflow&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                sp++;</span><br><span class="line">                stack[sp] = data;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">int</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sp &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Stack Underflow&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">int</span> data = stack[sp];</span><br><span class="line">                sp--;</span><br><span class="line">                <span class="keyword">return</span> data;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printStack</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sp &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Stack Underflow&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Yığın İçeriği&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = sp; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(stack[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Peek</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sp &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Stack Underflow&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Yığının en üstündeki eleman: &#123;0&#125;&quot;</span>, stack[sp]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Şu an sp=-1</span></span><br><span class="line">            push(<span class="number">10</span>); <span class="comment">// sp&#x27;yi 1 arttır. 10&#x27;u ekle              sp = 0  stack[0] = 10;</span></span><br><span class="line">            push(<span class="number">20</span>); <span class="comment">// sp&#x27;yi 1 arttır 20&#x27;yi ekle              sp = 1  stack[1] = 20;</span></span><br><span class="line">            push(<span class="number">30</span>); <span class="comment">// sp&#x27;yi 1 arttır 30&#x27;u ekle               sp = 2  stack[2] = 30;</span></span><br><span class="line">            push(<span class="number">40</span>); <span class="comment">// sp&#x27;yi 1 arttır 40&#x27;ı ekle               sp = 3  stack[3] = 40;</span></span><br><span class="line">            printStack();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Stack&#x27;tan silindi: &#123;0&#125;&quot;</span>, pop()); <span class="comment">// 40&#x27;ı döndür sp&#x27;yi 1 azalt.            sp = 2</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Stack&#x27;tan silindi: &#123;0&#125;&quot;</span>, pop()); <span class="comment">// 30&#x27;u döndür sp&#x27;yi 1 azalt.            sp = 1</span></span><br><span class="line">            printStack();</span><br><span class="line">            Peek();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Veri Yapıları</category>
      </categories>
      <tags>
        <tag>dotnet core</tag>
        <tag>stack</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino ile Mantıksal Devre Tasarımı Uygulamaları</title>
    <url>/post/363226186.html</url>
    <content><![CDATA[<p>Arduino kullanarak Mantıksal Devre Tasarımı Uygulamaları dersinde yapmış olduğumuz uygulamalardır.</p>
<span id="more"></span>

<h2 id="Uygulama-1"><a href="#Uygulama-1" class="headerlink" title="Uygulama-1"></a>Uygulama-1</h2><figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> led = <span class="number">13</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(led, <span class="literal">OUTPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(led, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(led, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-2"><a href="#Uygulama-2" class="headerlink" title="Uygulama-2"></a>Uygulama-2</h2><figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">6</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">7</span>, <span class="literal">INPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(<span class="number">7</span>))</span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">LOW</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-3"><a href="#Uygulama-3" class="headerlink" title="Uygulama-3"></a>Uygulama-3</h2><figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>,<span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">3</span>,<span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">4</span>,<span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">5</span>,<span class="literal">INPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(<span class="number">3</span>) &amp;&amp; <span class="built_in">digitalRead</span>(<span class="number">4</span>) &amp;&amp; <span class="built_in">digitalRead</span>(<span class="number">5</span>))</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-4"><a href="#Uygulama-4" class="headerlink" title="Uygulama-4"></a>Uygulama-4</h2><figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>,<span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">3</span>,<span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">4</span>,<span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">5</span>,<span class="literal">INPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(<span class="number">3</span>) || <span class="built_in">digitalRead</span>(<span class="number">4</span>) || <span class="built_in">digitalRead</span>(<span class="number">5</span>))</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-5"><a href="#Uygulama-5" class="headerlink" title="Uygulama-5"></a>Uygulama-5</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186001.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">3</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0-0 Sonucu 0&quot;</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0-1 Sonucu 0&quot;</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1-0 Sonucu 0&quot;</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1-1 Sonucu 1&quot;</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-6"><a href="#Uygulama-6" class="headerlink" title="Uygulama-6"></a>Uygulama-6</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186002.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186003.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>,<span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">3</span>,<span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">4</span>,<span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">5</span>,<span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">6</span>,<span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pin</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c, <span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>,a);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>,b);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>,c);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">5</span>,d);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">digitalRead</span>(<span class="number">6</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,0,0,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,0,0,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,0,1,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,0,1,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,1,0,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,1,0,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,1,1,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0,1,1,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,0,0,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,0,0,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,0,1,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,0,1,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,0,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,0,1 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,0 --&gt; Sonuc 0&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">pin</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1,1,1,1 --&gt; Sonuc 1&quot;</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-7"><a href="#Uygulama-7" class="headerlink" title="Uygulama-7"></a>Uygulama-7</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186004.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">6</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">7</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">12</span>, <span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">13</span>, <span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">7</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;D = 0 ve CLK = 0&quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">12</span>)));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q&#x27;nun degili = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">13</span>)));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;----------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;D = 0 ve CLK = 1&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">7</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">12</span>)));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q&#x27;nun degili = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">13</span>)));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;----------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;D = 0 ve CLK = 0&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">7</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">12</span>)));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q&#x27;nun degili = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">13</span>)));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;----------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;D = 1 ve CLK = 0&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">7</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">12</span>)));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q&#x27;nun degili = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">13</span>)));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;----------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;D = 1 ve CLK = 1&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">7</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">12</span>)));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q&#x27;nun degili = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">13</span>)));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;----------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;D = 1 ve CLK = 0&quot;</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">6</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">7</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">12</span>)));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Q&#x27;nun degili = &quot;</span> + <span class="built_in">String</span>(<span class="built_in">digitalRead</span>(<span class="number">13</span>)));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;----------------------&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-8"><a href="#Uygulama-8" class="headerlink" title="Uygulama-8"></a>Uygulama-8</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186005.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">11</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">12</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">13</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">5</span>, <span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;0 0 0 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;0 0 1 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;0 1 0 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;0 1 1 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;1 0 0 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;1 0 1 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;1 1 0 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">11</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">12</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">13</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">&quot;1 1 1 = &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-9"><a href="#Uygulama-9" class="headerlink" title="Uygulama-9"></a>Uygulama-9</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186006.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> E = <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> D = <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> C = <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> P = <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> B = <span class="number">6</span>;</span><br><span class="line"><span class="type">int</span> A = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> F = <span class="number">8</span>;</span><br><span class="line"><span class="type">int</span> G = <span class="number">9</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(E, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(D, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(C, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(P, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(B, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(A, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(F, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(G, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;2&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;3&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;4&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;5&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;6&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;7&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;8&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(E, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(D, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(C, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(P, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(B, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(A, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(F, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(G, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;9&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-10"><a href="#Uygulama-10" class="headerlink" title="Uygulama-10"></a>Uygulama-10</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186007.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> d1 = <span class="number">2</span>; <span class="comment">// D1 --&gt; 12</span></span><br><span class="line"><span class="type">int</span> d2 = <span class="number">3</span>; <span class="comment">// D2 --&gt; 9</span></span><br><span class="line"><span class="type">int</span> d3 = <span class="number">4</span>; <span class="comment">// D3 --&gt; 8</span></span><br><span class="line"><span class="type">int</span> d4 = <span class="number">5</span>; <span class="comment">// D4 --&gt; 6</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">6</span>;  <span class="comment">// A  --&gt; 11</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">7</span>;  <span class="comment">// B  --&gt; 7</span></span><br><span class="line"><span class="type">int</span> c = <span class="number">8</span>;  <span class="comment">// C  --&gt; 4</span></span><br><span class="line"><span class="type">int</span> d = <span class="number">9</span>;  <span class="comment">// D  --&gt; 2</span></span><br><span class="line"><span class="type">int</span> e = <span class="number">10</span>; <span class="comment">// E  --&gt; 1</span></span><br><span class="line"><span class="type">int</span> f = <span class="number">11</span>; <span class="comment">// F  --&gt; 10</span></span><br><span class="line"><span class="type">int</span> g = <span class="number">12</span>; <span class="comment">// G  --&gt; 5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(d1, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(d2, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(d3, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(d4, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(a, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(b, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(c, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(d, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(e, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(f, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(g, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d1, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d2, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d3, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d4, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(a, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(b, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(c, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(e, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(f, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(g, <span class="literal">HIGH</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(d1, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d2, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d3, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d4, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(a, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(b, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(c, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(e, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(f, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(g, <span class="literal">HIGH</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(d1, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d2, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d3, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d4, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(a, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(b, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(c, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(e, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(f, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(g, <span class="literal">LOW</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(d1, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d2, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d3, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d4, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(a, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(b, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(c, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(d, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(e, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(f, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(g, <span class="literal">LOW</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Uygulama-11"><a href="#Uygulama-11" class="headerlink" title="Uygulama-11"></a>Uygulama-11</h2><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186008.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_363226186009.png"></p>
<figure class="highlight ino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">3</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">4</span>, <span class="literal">OUTPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">5</span>, <span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">6</span>, <span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 0 0 0 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 0 0 1 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 0 1 0 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 0 1 1 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 1 0 0 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 1 0 1 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 1 1 0 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">3</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">4</span>, <span class="literal">LOW</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot; 1 1 1 &quot;</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">5</span>));</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mantıksal Devre Tasarımı</category>
      </categories>
      <tags>
        <tag>arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Merhaba Dünya</title>
    <url>/post/1658322667.html</url>
    <content><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>‘ya hoşgeldin! Bu senin ilk gönderin. Daha fazla bilgi için <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">dökümantasyonu<i class="fa fa-external-link-alt"></i></span> inceleyebilirsin. Hexo kullanırken herhangi bir problemle karşılaşırsan, probleminin cevabını <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">burada<i class="fa fa-external-link-alt"></i></span> bulabilirsin yada <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span> üzerinde bize sorabilirsin.</p>
<span id="more"></span>

<h2 id="Hizli-Baslangic"><a href="#Hizli-Baslangic" class="headerlink" title="Hızlı Başlangıç"></a>Hızlı Başlangıç</h2><h3 id="Yeni-bir-gonderi-olusturun"><a href="#Yeni-bir-gonderi-olusturun" class="headerlink" title="Yeni bir gönderi oluşturun"></a>Yeni bir gönderi oluşturun</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new &lt;post-title&gt;         <span class="comment"># create new post</span></span><br><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Yeni-bir-sayfa-olusturun"><a href="#Yeni-bir-sayfa-olusturun" class="headerlink" title="Yeni bir sayfa oluşturun"></a>Yeni bir sayfa oluşturun</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page &lt;page-title&gt;    <span class="comment"># create new page</span></span><br></pre></td></tr></table></figure>

<p>Daha fazla bilgi için: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Sunucuyu-calistir"><a href="#Sunucuyu-calistir" class="headerlink" title="Sunucuyu çalıştır"></a>Sunucuyu çalıştır</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s                        <span class="comment"># [server] starts a local server</span></span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>Daha fazla bilgi için: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Statik-dosyalari-olustur"><a href="#Statik-dosyalari-olustur" class="headerlink" title="Statik dosyaları oluştur"></a>Statik dosyaları oluştur</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g                        <span class="comment"># [generate] generate static files</span></span><br><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>Daha fazla bilgi için: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Uzak-sitelere-dagitin"><a href="#Uzak-sitelere-dagitin" class="headerlink" title="Uzak sitelere dağıtın"></a>Uzak sitelere dağıtın</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d                        <span class="comment"># [deploy] deploy to github</span></span><br><span class="line">$ hexo g -d                     <span class="comment"># deploy after generation finishes</span></span><br><span class="line">$ hexo g -d -m <span class="string">&quot;message&quot;</span></span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>Daha fazla bilgi için: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Onbellek-dosyasini-ve-olusturulmus-dosyalari-temizleyin"><a href="#Onbellek-dosyasini-ve-olusturulmus-dosyalari-temizleyin" class="headerlink" title="Önbellek dosyasını ve oluşturulmuş dosyaları temizleyin"></a>Önbellek dosyasını ve oluşturulmuş dosyaları temizleyin</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean                    <span class="comment"># cleans the cache file (db.json) and generated files (public)</span></span><br></pre></td></tr></table></figure>

<h3 id="Blogunuzu-Github-uzerinde-dagitin"><a href="#Blogunuzu-Github-uzerinde-dagitin" class="headerlink" title="Blogunuzu Github üzerinde dağıtın"></a>Blogunuzu Github üzerinde dağıtın</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d <span class="comment"># deploy</span></span><br></pre></td></tr></table></figure>

<h3 id="Commit-gecmisini-silme-ve-sadece-en-son-surumu-nasil-gosterilir"><a href="#Commit-gecmisini-silme-ve-sadece-en-son-surumu-nasil-gosterilir" class="headerlink" title="Commit geçmişini silme ve sadece en son sürümü nasıl gösterilir"></a>Commit geçmişini silme ve sadece en son sürümü nasıl gösterilir</h3><ol>
<li>“<strong>.deploy_git</strong>“ dizinini silin.</li>
<li>Gitbash’i açın ve aşağıdaki komutları sırasıyla girin.</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo Butterfly</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Kuyruklar</title>
    <url>/post/1062291645.html</url>
    <content><![CDATA[<p>Kuyruğa 10 adet eleman ekledik. Ardından kuyruktaki eleman sayısını yazdırdık.<br>Kuyruktan 10 tane eleman aldık. Ardından tekrar kuyruktaki eleman sayısını yazdırdık.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1062291645001.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">kuyruk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span>[] kuyruk = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> front = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> rear = <span class="number">-1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">elemanEkle</span>(<span class="params"><span class="built_in">int</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            rear++;</span><br><span class="line">            kuyruk[rear] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">elemanAl</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> data = kuyruk[front];</span><br><span class="line">            front++;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">kuyrukCount</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> rear - front + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                elemanEkle(i);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;10 adet eleman eklendi!&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Kuyruktaki eleman sayısı: &quot;</span>);</span><br><span class="line">            Console.WriteLine(kuyrukCount());</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(elemanAl());</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Elemanlar alındı!&quot;</span>);</span><br><span class="line">            Console.WriteLine(kuyrukCount());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Veri Yapıları</category>
      </categories>
      <tags>
        <tag>dotnet core</tag>
        <tag>kuyruklar</tag>
      </tags>
  </entry>
  <entry>
    <title>Unable to locate theme engine in module path murrine</title>
    <url>/post/2544525991.html</url>
    <content><![CDATA[<p>.xsession-errors çıktısını incelediğimizde bazı uyarılarla karşılaşıyoruz.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2544525991001.png"></p>
<p>Problemin kaynağı bir paketin sistemimizde yüklü olmamasından kaynaklanıyor.</p>
<p>Aşağıdaki komutu kullanarak gtk2-engines-murrine paketini sistemimize kuralım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install gtk2-engines-murrine</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2544525991002.png"></p>
<p>Ardından sistemimizi yeniden başlatalım.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2544525991003.png"></p>
<p>Şimdi .xsession-errors çıktısını tekrar kontrol edelim. Daha önceden karşılaştığımız uyarının kaybolduğunu göreceğiz.</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>murrine</tag>
        <tag>gtk</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino Cloud ile Bulut Uygulaması Nasıl Yapılır?</title>
    <url>/post/145531956.html</url>
    <content><![CDATA[<p>Nesnelerin İnternetinde Arduino Cloud üzerinden nasıl bir bulut uygulamasının yapılabileceğini adım adım anlatacağım. Arduino Agent’ın bilgisayarımıza nasıl kurulacağı, devamında ilgili WeMos cihazının nasıl ekleneceği, oluşturmuş olduğumuz nesneyle nasıl ilişkilendirileceği, nesnemizi yöneteceğimiz bir Dashboard’un nasıl oluşturulacağı anlatılmıştır. Nesnemizi internete bağlayıp gömülü olan Led üzerinden basit bir led açıp kapatma uygulaması yapılmıştır.</p>
<span id="more"></span>

<h2 id="Arduino-Cloud-Kayit-Olun"><a href="#Arduino-Cloud-Kayit-Olun" class="headerlink" title="Arduino Cloud Kayıt Olun"></a>Arduino Cloud Kayıt Olun</h2><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5hcmR1aW5vLmNjLw==">Arduino<i class="fa fa-external-link-alt"></i></span> butonuna tıklayarak ilgili kayıt işlemlerini gerçekleştirdikten sonra sisteme giriş yapalım.

<h2 id="Arduino-Cloud-Agent-Kurulumu-Nasil-Yapilir"><a href="#Arduino-Cloud-Agent-Kurulumu-Nasil-Yapilir" class="headerlink" title="Arduino Cloud Agent Kurulumu Nasıl Yapılır?"></a>Arduino Cloud Agent Kurulumu Nasıl Yapılır?</h2><p>Üst menü üzerinden <mark class="label primary">Arduino Cloud</mark>a tıklayarak da ilgili sayfaya ulaşabilirsiniz. Başlamak için iyi seçeneklerden birisi olan <mark class="label primary">Discover Arduino Cloud</mark> bağlantısına tıklayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956001.png"></p>
<p>Arduino Cloud’da birşey yapmaya başlayın. Arduino Cloud, çeşitli cihazlarda Arduino projeleri geliştirmek için uygulamalar, web hizmetleri ve kaynaklar sağlar. Bu başlangıç rehberi sayesinde Arduino kartını yada bir cep telefonunu kullanarak Cloud’un neler sunabileceğini keşfedeceğiz.</p>
<mark class="label primary">LET'S MAKE</mark> butonuna tıklayarak devam edelim.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956002.png"></p>
<p>Cihazımızın keşfedilebilir hale gelmesi ve yazmış olduğumuz kodların Arduino Cloud platformundan cihazımıza yükleyebilmemiz için <mark class="label primary">Arduino Cloud Agent</mark>’ın son sürümünü yükleyelim. Bunun için <mark class="label primary">DOWNLOAD</mark> butonuna tıklayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956003.png"></p>
<div class="note danger"><h3 id="Uyari"><a href="#Uyari" class="headerlink" title="Uyarı"></a>Uyarı</h3><p>Eğer <mark class="label primary">File not found</mark> hatası alırsanız <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGUuYXJkdWluby5jYy9nZXR0aW5nLXN0YXJ0ZWQvcGx1Z2luL3dlbGNvbWU=">buradaki<i class="fa fa-external-link-alt"></i></span> bağlantıya gidiniz.</p>
</div>

<mark class="label primary">START</mark> butonuna tıklayalım ve devam edelim.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956004.png"></p>
<mark class="label primary">DOWNLOAD FOR WIN64</mark> diyerek devam edelim(sisteminize göre seçim yapınız!) ve ilgili kurulum dosyasını bilgisayarımıza kaydedelim. İlgili kurulumu tamamlayalım.

<div class="note warning"><h3 id="Uyari"><a href="#Uyari" class="headerlink" title="Uyarı"></a>Uyarı</h3><p>Kurulum esnasında karşılaştığınız izinleri vermeyi unutmayınız!…</p>
</div>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956005.png"></p>
<p>Antivirüs tarafından karantinaya alınma gibi birşey ile karşılaşırsanız aşağıdaki gibi bir durum ile karşılaşabilirsiniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956006.png"></p>
<p>Eksik driver’lar var ise kurulumlarını tamamlayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956007.png"></p>
<p>Başarılı bir şekilde Agent’ımızı kurduk.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956008.png"></p>
<h2 id="Nesne-Nasil-Eklenir"><a href="#Nesne-Nasil-Eklenir" class="headerlink" title="Nesne Nasıl Eklenir?"></a>Nesne Nasıl Eklenir?</h2><p>Daha önceden eklediğimiz nesnelerin interneti cihazlarımızı görmek yada nesnelerin interneti cihazlarımızı yeniden eklemek için <mark class="label primary">IoT Cloud</mark> seçeneğine tıklayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956009.png"></p>
<p>Henüz hiç nesnemiz bulunmamaktadır. <mark class="label primary">CREATE THING</mark> butonuna tıklayarak yeni bir nesne ekleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956010.png"></p>
<p>Bir tane IoT cihazına ihtiyacımız vardır. Biz burada WeMos D1 R1 kullanacağız. Bu kartın görselini aşağıda görebilirsiniz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956011.png"></p>
<p>Oluşturduğumuz nesnenin adını koyalım.</p>
<h2 id="Nesneye-Bagli-Cihaz-Nasil-Eklenir"><a href="#Nesneye-Bagli-Cihaz-Nasil-Eklenir" class="headerlink" title="Nesneye Bağlı Cihaz Nasıl Eklenir?"></a>Nesneye Bağlı Cihaz Nasıl Eklenir?</h2><p>İlgili kartımızı bilgisayarımıza bağlayalım. <mark class="label primary">Associated Device</mark> başlığı altında yer alan <mark class="label primary">Select Device</mark> butonuna tıklayarak yeni bir cihaz ile ilişkilendirelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956012.png"></p>
<mark class="label primary">Thing 1</mark> ile ilişkinlendirmek istediğiniz cihazı seçmemizi istiyor. Bunun için <mark class="label primary">SET UP NEW DEVICE</mark> butonuna tıklayalım.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956013.png"></p>
<p>Arduino değil de Wemos kartı kullandığım için <mark class="label primary">Third party device</mark> seçeneğiyle devam ediyorum.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956014.png"></p>
<p>Yapılandırmak istediğimiz cihazın modelini seçelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956015.png"></p>
<p>Cihazımıza bir isim verelim ve <mark class="label primary">NEXT</mark> seçeneğiyle ilerleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956016.png"></p>
<p>Burada <mark class="label primary">Cihaz ID</mark>’mizi ve <mark class="label primary">Gizli Anahtar</mark>ımızı bir yere kaydedelim. Herhangi bir gizli anahtarın kaybolması durumunda cihazı silip yeniden kurmamız gerekecektir.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956017.png"></p>
<mark class="label primary">Download the PDF</mark> bağlantısına tıklayarak önem arz eden bilgilerimizi bilgisayarımıza kaydedebiliriz.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956018.png"></p>
<p>Önemli olan bilgilerimizi bir yere kaydettikten sonra <mark class="label primary">I saved my device ID and Secret Key</mark> seçeneğini işaretli hale getirelim ve <mark class="label primary">Continue</mark> seçeneğiyle devam edelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956019.png"></p>
<mark class="label primary">Done</mark> seçeneğine tıklayarak işlemimizi tamamladık.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956020.png"></p>
<h2 id="Cihazin-Baglanacagi-Ag-Nasil-Tanimlanir"><a href="#Cihazin-Baglanacagi-Ag-Nasil-Tanimlanir" class="headerlink" title="Cihazın Bağlanacağı Ağ Nasıl Tanımlanır?"></a>Cihazın Bağlanacağı Ağ Nasıl Tanımlanır?</h2><p>Cihazımızı bağlayacağımız ağı burada tanıtmamız gerekiyor. Bunun için <mark class="label primary">Network</mark> başlığı altında <mark class="label primary">Configure</mark> seçeneği ile devam edelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956021.png"></p>
<p>Kullanacağımız <mark class="label primary">ağın adı</mark>nı, <mark class="label primary">parola</mark>sını ve biraz önce önemli olarak atıfta bulunduğumuz <mark class="label primary">Gizli Anahtar</mark>ı girip <mark class="label primary">Save</mark> seçeneğiyle kaydediyoruz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956022.png"></p>
<h2 id="Kod-Nasil-Dogrulanir-ve-Cihaza-Yuklenir"><a href="#Kod-Nasil-Dogrulanir-ve-Cihaza-Yuklenir" class="headerlink" title="Kod Nasıl Doğrulanır ve Cihaza Yüklenir?"></a>Kod Nasıl Doğrulanır ve Cihaza Yüklenir?</h2><mark class="label primary">Setup</mark> sekmesinde yapmış olduğumuz işlemler bitti. Burada yapmış olduğumuz ayarlamalar ile arkaplanda bir kod yazıldı. Şimdi bu kodu <mark class="label primary">Verify and Upload</mark> diyip kartımıza yüklememiz gerekiyor. Bunun için <mark class="label primary">Sketch</mark> sekmesine geçelim ve ilgili kodu kartımıza yükleyelim.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956023.png"></p>
<p>Başarılı bir upload işleminin olduğuna dair çıktıyı elde ettik.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956024.png"></p>
<h2 id="Cihazin-Online-Olup-Olmadigini-Nasil-Anlariz"><a href="#Cihazin-Online-Olup-Olmadigini-Nasil-Anlariz" class="headerlink" title="Cihazın Online Olup Olmadığını Nasıl Anlarız?"></a>Cihazın Online Olup Olmadığını Nasıl Anlarız?</h2><mark class="label primary">Setup</mark> sekmesine geri dönüp sayfamızı yenileyelim. Artık cihazımızın <mark class="label primary">Online</mark> durumda olduğunu görebiliyoruz. Yani tanımlamış olduğumuz Wemos D1 R1 kartımız yine bizim tanımlamış olduğumuz ağa bağlıdır.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956025.png"></p>
<h2 id="Kodun-Gozden-Gecirilmesi-Islemleri"><a href="#Kodun-Gozden-Gecirilmesi-Islemleri" class="headerlink" title="Kodun Gözden Geçirilmesi İşlemleri"></a>Kodun Gözden Geçirilmesi İşlemleri</h2><p>Kodu net bir şekilde görüp değiştirebilmemiz için <mark class="label primary">Sketch</mark> sekmesine geri dönüp buradan <mark class="label primary">Open full editor</mark> seçeneğine tıklayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956026.png"></p>
<mark class="label primary">thingProperties</mark> adında bir header dosyamız mevcuttur. Bu, kodumuza dahil edilmiştir. Şimdi <mark class="label primary">thingProperties.h</mark> dosyamızı açalım.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956027.png"></p>
<p>Kablosuz ağımızın adı ve parolası, ilgili cihazımızın gizli anahtarı gibi bilgiler buraya gelecektir. Ancak bu bilgiler buradan doğrudan verilmek yerine <mark class="label primary">Secret</mark>‘tan alınmıştır.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956028.png"></p>
<mark class="label primary">Secret</mark> dosyamızda aşağıdaki gibi bilgiler vardır.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956029.png"></p>
<h2 id="Nesneler"><a href="#Nesneler" class="headerlink" title="Nesneler"></a>Nesneler</h2><p>Şu anda toplam 1 tane cihazımızı kurduk. Wemos D1 R1 kartımızı kurduk. Ücretsiz bir versiyon kullandığımız için <em>maksimum 2 tane cihaz</em> tanımlayabiliyoruz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956030.png"></p>
<mark class="label primary">Templates</mark> sayfası altında yer alan hazır şablonları kullanabilmemiz için destekli olan kartları kullanıyor olmamız gereklidir.

<h2 id="Cihazlar"><a href="#Cihazlar" class="headerlink" title="Cihazlar"></a>Cihazlar</h2><p>Wemos D1 R1 kartımızı yani ilgili cihazımızı internete bağladık. Sonrasında bununla bir IoT nesnesi oluşturduk. <mark class="label primary">Devices</mark> kısmına gelecek olursak zaten ilgili cihazımızı tanımladığımızı göreceğiz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956031.png"></p>
<h2 id="Simdiye-Kadar-Hangi-Islemler-Yapildi"><a href="#Simdiye-Kadar-Hangi-Islemler-Yapildi" class="headerlink" title="Şimdiye Kadar Hangi İşlemler Yapıldı?"></a>Şimdiye Kadar Hangi İşlemler Yapıldı?</h2><p>Sonuç olarak bir cihaz oluşturduk. Sonrasında bir nesne oluşturduk (Thing1) ve ilgili nesnemize kullanacağımız cihaz olan Wemos kartımızı ilişkilendirdik. Ardından nesnemizi internete bağladık. Thing1 nesnemizi Wemos D1 R1 kartı ile yapıyorum. Birisi karttır. Birisi de bu kart ile kontrol edeceğimiz nesneyi ifade ediyor.</p>
<p>Things: İçerisinde nesnelerim yer alır.<br>Devices: Nesnelerin içerisinde kullanacağımız kartlar yer alır.</p>
<h2 id="Basit-Bir-Led-Acip-Kapatma-Uygulamasi-Nasil-Yapilir"><a href="#Basit-Bir-Led-Acip-Kapatma-Uygulamasi-Nasil-Yapilir" class="headerlink" title="Basit Bir Led Açıp Kapatma Uygulaması Nasıl Yapılır?"></a>Basit Bir Led Açıp Kapatma Uygulaması Nasıl Yapılır?</h2><p>Ben, Things1 ile Wemos D1 R1 kartım üzerinde bulunan gömülü olan Led’imi açıp kapatacağım.</p>
<p>Öncelikle <mark class="label primary">Arduino Cloud</mark>umuza gidelim ve <mark class="label primary">Get started with IoT projects</mark>‘e tıklayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956032.png"></p>
<p>Menü üzerinden <mark class="label primary">ESP32 / ESP8266</mark>‘ya tıklayalım. Devamında <mark class="label primary">Connecting ESP32 & ESP8266 to Arduino Cloud IoT</mark>‘ye tıklayalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956033.png"></p>
<mark class="label primary">Device</mark> ve <mark class="label primary">Thing</mark> ekleme aşamalarını yapmıştık. Bu yüzden o kısımları atlayalım.

<h2 id="Degiskenler-Nasil-Eklenir"><a href="#Degiskenler-Nasil-Eklenir" class="headerlink" title="Değişkenler Nasıl Eklenir?"></a>Değişkenler Nasıl Eklenir?</h2><p>Bu sistemde uzaktan kontrol sağlayabilmemiz için 2 tane değişkene ihtiyacımız vardır. Şu anda ledin yanıp yanmadığını hafızada tutabilmemiz için bir değişken ve led’i açma – kapama sinyalini göndereceğimiz değişkendir.</p>
<ul>
<li>random_value</li>
<li>led_switch</li>
</ul>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956034.png"></p>
<p>Öncelikle <mark class="label primary">IoT Cloud</mark>umuza dönelim ve oluşturduğumuz <mark class="label primary">Thing1</mark> adlı nesneyi açalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956035.png"></p>
<mark class="label primary">Add Variable</mark> seçeneğine tıklayalım.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956036.png"></p>
<p>İlk değişkenimizi ekleyelim.</p>
<ul>
<li>random_value</li>
<li>int</li>
<li>read only</li>
</ul>
<p>İlgili özelliklerimizi seçtikten sonra <mark class="label primary">Add Variable</mark> ile ilk değişkenimizi ekleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956037.png"></p>
<p>İkinci değişkenimizi ekleyelim.</p>
<ul>
<li>led_switch</li>
<li>boolean</li>
<li>read &amp; write</li>
</ul>
<p>İlgili özelliklerimizi seçtikten sonra <mark class="label primary">Add Variable</mark> ile ikinci değişkenimizi ekleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956038.png"></p>
<p>Değişkenlerimizi ekledik.</p>
<p>Bu şekilde arayüz üzerinden aslında arkaplanda otomatik olarak Arduino kodunun oluşturulmasını sağlıyoruz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956039.png"></p>
<h2 id="Dashboard-Nasil-Olusturulur"><a href="#Dashboard-Nasil-Olusturulur" class="headerlink" title="Dashboard Nasıl Oluşturulur?"></a>Dashboard Nasıl Oluşturulur?</h2><mark class="label primary">Thing1</mark> nesnemin durumunu görüp komut gönderebilmek amacıyla bir <mark class="label primary">Dashboard</mark> oluşturmamız gerekir. Menü üzerinden <mark class="label primary">Dashboards</mark>'a tıklayalım. <mark class="label primary">Build Dashboard</mark> diyelim.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956040.png"></p>
<p><strong>“Add” &gt; “Things” &gt; “Thing1”</strong> diyerek ilgili nesnemizi seçelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956041.png"></p>
<p>İlgili değişkenler seçili halde geliyor. <mark class="label primary">Create Widgets</mark> diyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956042.png"></p>
<h2 id="Kodun-Revize-Edilmesi"><a href="#Kodun-Revize-Edilmesi" class="headerlink" title="Kodun Revize Edilmesi"></a>Kodun Revize Edilmesi</h2><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmFyZHVpbm8uY2MvYXJkdWluby1jbG91ZC9nZXR0aW5nLXN0YXJ0ZWQvZXNwLTMyLWNsb3VkI2NvbXBsZXRlLXNrZXRjaA==">Buradaki<i class="fa fa-external-link-alt"></i></span> adrese dönecek olursak kodumuzu şu şekilde revize edelim.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956043.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956044.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956045.png"></p>
<h2 id="Kodun-Tekrardan-Cihaza-Yuklenmesi"><a href="#Kodun-Tekrardan-Cihaza-Yuklenmesi" class="headerlink" title="Kodun Tekrardan Cihaza Yüklenmesi"></a>Kodun Tekrardan Cihaza Yüklenmesi</h2><p>Kodumuzu düzenledikten sonra <mark class="label primary">ESP8266 WeMos D1 R1</mark>e tıklayalım. COM4 portunu seçelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956046.png"></p>
<mark class="label primary">ESP8266 WeMos D1 R1</mark>i seçelim ve <mark class="label primary">OK</mark> seçeneğine tıklayalım.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956047.png"></p>
<mark class="label primary">Upload and Save</mark> seçeneğiyle devam edelim.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956048.png"></p>
<p>Başarılı bir şekilde kodumuz yüklendi.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_145531956049.png"></p>
<h2 id="Sonuc"><a href="#Sonuc" class="headerlink" title="Sonuç"></a>Sonuç</h2><p>Şimdi Dashboard’umuza gelelim. Random sayıların 500 ms’de bir değiştiğini görebiliriz. Led’i de switch aracılığıyla başarılı bir şekilde açıp kapatabiliyoruz.</p>
<p>Basit bir led açıp kapatma uygulamasını bu şekilde yapmış olduk.</p>
]]></content>
      <categories>
        <category>Nesnelerin Interneti</category>
      </categories>
      <tags>
        <tag>Arduino Cloud Agent</tag>
        <tag>Arduino</tag>
        <tag>WeMos D1 R1</tag>
        <tag>Cloud Application</tag>
        <tag>Led Blink Application</tag>
        <tag>Internet of Things</tag>
        <tag>ESP8266</tag>
        <tag>CH340</tag>
      </tags>
  </entry>
  <entry>
    <title>Yığınlarla Infix Postfix İşlemleri Nasıl Yapılır?</title>
    <url>/post/2431698849.html</url>
    <content><![CDATA[<p>Yığın yapısı kullanarak Infix’ten Postfix’e dönüşüm işlemlerini şu şekillerle daha iyi anlayabiliriz.</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849001.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849002.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849003.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849004.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849005.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849006.png"></p>
<p><strong>Örnek</strong></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">postfix</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">char</span>[] stack = <span class="keyword">new</span> <span class="built_in">char</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> sp = <span class="number">-1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">push</span>(<span class="params"><span class="built_in">char</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            sp++;</span><br><span class="line">            stack[sp] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">char</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">char</span> data = stack[sp];</span><br><span class="line">            sp--;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">char</span> <span class="title">peek</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> stack[sp];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> infix = <span class="string">&quot;a+b-c+d*e*f/g-h&quot;</span>;</span><br><span class="line">            push(<span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">            <span class="built_in">string</span> vars = <span class="string">&quot;abcdefgh&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> ops = <span class="string">&quot;$+-*/&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span>[] onc = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">            onc[<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// $</span></span><br><span class="line">            onc[<span class="number">1</span>] = <span class="number">1</span>; <span class="comment">// +</span></span><br><span class="line">            onc[<span class="number">2</span>] = <span class="number">1</span>; <span class="comment">// -</span></span><br><span class="line">            onc[<span class="number">3</span>] = <span class="number">2</span>; <span class="comment">// *</span></span><br><span class="line">            onc[<span class="number">4</span>] = <span class="number">2</span>; <span class="comment">// /</span></span><br><span class="line">            <span class="built_in">string</span> postfix = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; infix.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(vars.IndexOf(infix[i]) &gt;= <span class="number">0</span>)</span><br><span class="line">                    postfix += infix[i];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(onc[ops.IndexOf(infix[i])] &gt; onc[ops.IndexOf(peek())])</span><br><span class="line">                        push(infix[i]);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        postfix += pop();</span><br><span class="line">                        push(infix[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(peek() != <span class="string">&#x27;$&#x27;</span>) postfix += pop();</span><br><span class="line">            Console.WriteLine(postfix);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Eğer parantez içeren bir infix işlemini postfix işlemine dönüştürme isteseydik kod aşağıdaki hali alacaktı.</strong></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">postfix_parantezli</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">char</span>[] stack = <span class="keyword">new</span> <span class="built_in">char</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> sp = <span class="number">-1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">push</span>(<span class="params"><span class="built_in">char</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            sp++;</span><br><span class="line">            stack[sp] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">char</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">char</span> data = stack[sp];</span><br><span class="line">            sp--;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">char</span> <span class="title">peek</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> stack[sp];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> infix = <span class="string">&quot;a+b+c/d*(a-b-c*d)&quot;</span>;</span><br><span class="line">            push(<span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">            <span class="built_in">string</span> vars = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> ops = <span class="string">&quot;$(+-*/&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span>[] onc = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">6</span>];</span><br><span class="line">            onc[<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// $</span></span><br><span class="line">            onc[<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">// (</span></span><br><span class="line">            onc[<span class="number">2</span>] = <span class="number">1</span>; <span class="comment">// +</span></span><br><span class="line">            onc[<span class="number">3</span>] = <span class="number">1</span>; <span class="comment">// -</span></span><br><span class="line">            onc[<span class="number">4</span>] = <span class="number">2</span>; <span class="comment">// *</span></span><br><span class="line">            onc[<span class="number">5</span>] = <span class="number">2</span>; <span class="comment">// /</span></span><br><span class="line">            <span class="built_in">string</span> postfix = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; infix.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(infix[i] == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    push(infix[i]);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(infix[i] == <span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">while</span>(peek() != <span class="string">&#x27;(&#x27;</span>) postfix += pop();</span><br><span class="line">                    pop();</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(vars.IndexOf(infix[i]) &gt;= <span class="number">0</span>)</span><br><span class="line">                    postfix += infix[i];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(onc[ops.IndexOf(infix[i])] &gt; onc[ops.IndexOf(peek())])</span><br><span class="line">                        push(infix[i]);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        postfix += pop();</span><br><span class="line">                        push(infix[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (peek() != <span class="string">&#x27;$&#x27;</span>) postfix += pop();</span><br><span class="line">            Console.WriteLine(postfix);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Şimdi herhangi bir üslü sayı içerecek olan infix ifadenin postfix ifadeye nasıl dönüştürüleceğini ele alalım.</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849007.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">postfix_uslu</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">char</span>[] stack = <span class="keyword">new</span> <span class="built_in">char</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> sp = <span class="number">-1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">push</span>(<span class="params"><span class="built_in">char</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            sp++;</span><br><span class="line">            stack[sp] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">char</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">char</span> data = stack[sp];</span><br><span class="line">            sp--;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">char</span> <span class="title">peek</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> stack[sp];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> infix = <span class="string">&quot;a*b^c-d&quot;</span>;</span><br><span class="line">            push(<span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">            <span class="built_in">string</span> vars = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> ops = <span class="string">&quot;$(+-*/^&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span>[] onc = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">7</span>];</span><br><span class="line">            onc[<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// $</span></span><br><span class="line">            onc[<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">// (</span></span><br><span class="line">            onc[<span class="number">2</span>] = <span class="number">1</span>; <span class="comment">// +</span></span><br><span class="line">            onc[<span class="number">3</span>] = <span class="number">1</span>; <span class="comment">// -</span></span><br><span class="line">            onc[<span class="number">4</span>] = <span class="number">2</span>; <span class="comment">// *</span></span><br><span class="line">            onc[<span class="number">5</span>] = <span class="number">2</span>; <span class="comment">// /</span></span><br><span class="line">            onc[<span class="number">6</span>] = <span class="number">3</span>; <span class="comment">// ^</span></span><br><span class="line">            <span class="built_in">string</span> postfix = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; infix.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (infix[i] == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    push(infix[i]);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (infix[i] == <span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">while</span>(peek() != <span class="string">&#x27;(&#x27;</span>) postfix += pop();</span><br><span class="line">                    pop();</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (vars.IndexOf(infix[i]) &gt;= <span class="number">0</span>)</span><br><span class="line">                    postfix += infix[i];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (onc[ops.IndexOf(infix[i])] &gt; onc[ops.IndexOf(peek())])</span><br><span class="line">                        push(infix[i]);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        postfix += pop();</span><br><span class="line">                        push(infix[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (peek() != <span class="string">&#x27;$&#x27;</span>) postfix += pop();</span><br><span class="line">            Console.WriteLine(postfix);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Şimdi postfix bir ifadeyi yığın yapısı kullanarak sayısal karşılığını bulalım.</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849008.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849009.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_2431698849010.png"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">postfix_sayisal_karsilik</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span>[] stack = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> sp = <span class="number">-1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">push</span>(<span class="params"><span class="built_in">int</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            sp++;</span><br><span class="line">            stack[sp] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">pop</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> data = stack[sp];</span><br><span class="line">            sp--;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">peek</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> stack[sp];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">topla</span>(<span class="params"><span class="built_in">int</span> p1, <span class="built_in">int</span> p2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> p1 + p2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">cikar</span>(<span class="params"><span class="built_in">int</span> p1, <span class="built_in">int</span> p2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> p1 - p2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">carp</span>(<span class="params"><span class="built_in">int</span> p1, <span class="built_in">int</span> p2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> p1 * p2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">bol</span>(<span class="params"><span class="built_in">int</span> p1, <span class="built_in">int</span> p2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> p1 / p2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> postfix = <span class="string">&quot;abc*+&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> ops = <span class="string">&quot;+-*/&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> vars = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span>[] vals = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>];</span><br><span class="line">            vals[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            vals[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">            vals[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; postfix.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (ops.IndexOf(postfix[i]) == <span class="number">-1</span>)</span><br><span class="line">                    push(vals[vars.IndexOf(postfix[i])]);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">int</span> p1 = pop();</span><br><span class="line">                    <span class="built_in">int</span> p2 = pop();</span><br><span class="line">                    <span class="keyword">if</span> (postfix[i] == <span class="string">&#x27;+&#x27;</span>) push(topla(p2,p1));</span><br><span class="line">                    <span class="keyword">if</span> (postfix[i] == <span class="string">&#x27;-&#x27;</span>) push(cikar(p2,p1));</span><br><span class="line">                    <span class="keyword">if</span> (postfix[i] == <span class="string">&#x27;*&#x27;</span>) push(carp(p2,p1));</span><br><span class="line">                    <span class="keyword">if</span> (postfix[i] == <span class="string">&#x27;/&#x27;</span>) push(bol(p2,p1));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(pop());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Veri Yapıları</category>
      </categories>
      <tags>
        <tag>dotnet core</tag>
        <tag>stack</tag>
        <tag>infix</tag>
        <tag>postfix</tag>
      </tags>
  </entry>
  <entry>
    <title>Wemos D1 R1 Yapılandırması Nasıl Yapılır?</title>
    <url>/post/1729220706.html</url>
    <content><![CDATA[<p>IoT dersi için satın aldığım Wemos D1 R1 kartının kullanabilmemiz için yapılması gereken yapılandırma ayarlarından bahsedeceğim. </p>
<span id="more"></span>

<p>Arduino programını bilgisayarımıza kurduktan sonra CH340 Driver kurulumunun nasıl yapılacağını ve son olarak Wemos kütüphanelerinin arduino’ya nasıl eklenebileceğini anlatacağım.</p>
<h2 id="Arduino-Yazilimi-Nasil-Kurulur"><a href="#Arduino-Yazilimi-Nasil-Kurulur" class="headerlink" title="Arduino Yazılımı Nasıl Kurulur?"></a>Arduino Yazılımı Nasıl Kurulur?</h2><div class="note warning"><h4 id="Uyari"><a href="#Uyari" class="headerlink" title="Uyarı"></a>Uyarı</h4><p>Kurulum sırasında karşınıza çıkacak olan gerekli izinleri vermeyi unutmayınız!</p>
</div>

<h2 id="CH340-Driver-Kurulumu-Nasil-Yapilir"><a href="#CH340-Driver-Kurulumu-Nasil-Yapilir" class="headerlink" title="CH340 Driver Kurulumu Nasıl Yapılır?"></a>CH340 Driver Kurulumu Nasıl Yapılır?</h2><p>CH340 Driver kurulumunu yapmak üzere <span class="exturl" data-url="aHR0cHM6Ly93d3cud2Vtb3MuY2MvZW4vbGF0ZXN0L2NoMzQwX2RyaXZlci5odG1s">https://www.wemos.cc/en/latest/ch340_driver.html<i class="fa fa-external-link-alt"></i></span> adresine gidelim. Windows işletim sistemi üzerinde çalıştığım için Windows V3.5 bağlantısına tıklıyorum.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706001.png"></p>
<p>İlgili arşiv dosyasını bilgisayarımızda kaydedelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706002.png"></p>
<p>Arşiv dosyasının içerisindeki .EXE uzantılı dosyayı çalıştıralım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706003.png"></p>
<p>Son olarak INSTALL seçeneğine tıklayarak kurulumu başlatalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706004.png"></p>
<p>Kurulum tamamlandı.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706005.png"></p>
<h2 id="Arduino-Yazilimina-Wemos-Kutuphaneleri-Nasil-Eklenir"><a href="#Arduino-Yazilimina-Wemos-Kutuphaneleri-Nasil-Eklenir" class="headerlink" title="Arduino Yazılımına Wemos Kütüphaneleri Nasıl Eklenir?"></a>Arduino Yazılımına Wemos Kütüphaneleri Nasıl Eklenir?</h2><p>Arduino programımızı açtıktan sonra File &gt; Preferences yolunu izleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706006.png"></p>
<p>İlgili json dosyamızı ekleyelim.</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9hcmR1aW5vLmVzcDgyNjYuY29tL3N0YWJsZS9wYWNrYWdlX2VzcDgyNjZjb21faW5kZXguanNvbg==">https://arduino.esp8266.com/stable/package_esp8266com_index.json<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706007.png"></p>
<p>Üst menü üzerinden Tools &gt; Board &gt; Boards Manager… yolunu izleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706008.png"></p>
<p>esp8266 olarak aramamızı gerçekleştirelim. Install diyerek 3.1.2 sürümünün kurulumunu başlatalım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706009.png"></p>
<p>Wemos D1 R1 kartımızı kullanabilmek için önce kartımızı seçelim.</p>
<p>Bunun için Tools &gt; Board &gt; esp8266 &gt; LOLIN(WeMos) D1 R1 seçeneğini işaretleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706010.png"></p>
<p>Son olarak kartımızın takılı olduğu Port’u seçip kullanmaya başlayabiliriz.</p>
<p>Bunun için Tools &gt; Port &gt; COMx işaretleyelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706011.png"></p>
<h2 id="Buzzer’dan-Gelen-Gurultulu-Ses-Problemi-Nasil-Cozulur"><a href="#Buzzer’dan-Gelen-Gurultulu-Ses-Problemi-Nasil-Cozulur" class="headerlink" title="Buzzer’dan Gelen Gürültülü Ses Problemi Nasıl Çözülür?"></a>Buzzer’dan Gelen Gürültülü Ses Problemi Nasıl Çözülür?</h2><p>Aşağıdaki bağlantı üzerinden buzzer’ın gürültülü ses’ine ulaşabilirsiniz.</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xNlh1Y3diWEE5RFNYemFzVzc1cUgwcTdic0VOUi15R1Qvdmlldz91c3A9c2hhcmluZw==">https://drive.google.com/file/d/16XucwbXA9DSXzasW75qH0q7bsENR-yGT/view?usp=sharing<i class="fa fa-external-link-alt"></i></span></p>
<p>WeMos D1 R1 kartı kullanıyorken basit bir led yakıp söndürme kodunu çalıştırdığımda Buzzer’dan arkaplanda gürültü olacak şekilde ilgili sesi duyabiliyordum.</p>
<p>Hem WiFi modülümüze ulaşıp çalışmalarımızı yapabilmek hem de buzzer’dan sıkıntısız bir çıktı elde edebilmemiz için öncelikle Boards Manager’ı açalım ve esp8266 olarak aramamızı gerçekleştirelim. Yüklü olan 3.1.2 sürümünü REMOVE butonuna tıklayarak kaldıralım.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706012.png"></p>
<p>ESP8266 modülünün 2.5.0 sürümünü seçip INSTALL butonuna tıklayarak kurulumumuzu gerçekleştirelim.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706013.png"></p>
<p>Artık başarılı bir şekilde kodumuzu derleyip kartımıza yükleyebiliriz. Bu sayede buzzer’dan gelen rahatsız edici ses de kaybolmuş oldu.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1729220706014.png"></p>
<div class="note default"><p>Kaynaklar:</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS9CRjc0OVg0dW0tST9saXN0PVBMLXYtWkRZb1dXaFNKY29DcGxGRUdKV0w2WFVOWTB5aGk=">CH340 Driver Kurulumu Nasıl Yapılır?<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS9Gc3UtSjJLUUtxRT9saXN0PVBMLXYtWkRZb1dXaFNKY29DcGxGRUdKV0w2WFVOWTB5aGk=">WeMos Kütüphaneleri Arduino’ya Nasıl Eklenir?<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</div>]]></content>
      <categories>
        <category>Nesnelerin Interneti</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>WeMos D1 R1</tag>
        <tag>Internet of Things</tag>
        <tag>ESP8266</tag>
        <tag>CH340</tag>
      </tags>
  </entry>
  <entry>
    <title>Algoritmalar Ders Notları</title>
    <url>/post/2905381219.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Geçersiz bir parola girdiniz. Lütfen kontrol edip tekrar deneyin." data-whm="Şifresi çözülen bu içerik doğrulanamıyor. Ancak yine de göz atabilirsiniz.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1c4b11d2ca5ce40bd0db1ebda993a0cbc3a37116a6dcd4c27dc3d0df7c4b2320">e38c519f27c752bb12217325efcdb83eb33c448249f5e77f67a2fa98efbc57ce649503baf343807dd2494636b40118a344f15cd1e4df15f552b87e40b1cbeca891bac19b53816268cf8ceb4cbc903e15c94f3431176587f1f4a07f17b44714634ba2292bfe65e3f2ee9b46485d6d277449c4caef138673f633678e4f06303a3cc9265d9cc4b35c903192c6f8f3ab5ad5f3db7241a75b5014f6a137d3fb79ea81bafc5cdac1c313253570cf9d1ce32ca74a0126df4dcbb2f85e08403968e5a8aa44defe4ddaba843275c86b969f27435e9f602333872d96512b0ecdcf61a7d7818744457577db70b094e72632a61bba0aa3798f73c3b538bc088ce448713f8e1d55a0460d0c93eb7d5ee6fd1e6d8717a81cc19ec2b104cd1294193e9aa09d66d27551c293b42ecb6889349afcdf4f11b1a850879cdf31395a057f9cdcd441ff2e63cedb70ce3f5fc4cbfd835390eb607581f1a15296442baa66fddfcae2f1c9ee89170a9c6e9ebda905fa68504255521073ac809177fcac1c001268acbae57061387ca3c676de8da4ebbcee2a42e6ff280f6d0e6178ae86f01ee18e315a3fc6f370eb3b539af6aa4170e17d6f10535513333e31e10c0290156fabbb3d59be7e51299d5bedfe99205c47177ae608c00a4ea6c96194a36ebe4059399d0dd5cb6e7efe7cd4ef30dcd0d194a85df6c59ff975390d85ed6798337fd7aad805ee8ad4741e039b57c13058913ad5ec2ff4d37de8062f68799134269912d5451b3387b38e74e852b1003001a932107a55f1ef31cdc5c1f481e2d9bbe9cb461001c5c1dbc781e0464d031f2a5ada36d4c793cfb770b1e6a7043702452ec210a10a4577445b9398d33cebcfdc92a03dc63a51a94933f4d044f5b4e6419432f3bdd7e5daf22f1630bb97a869c818cf13f3bc04840ce958120e0058bdc361813e9750f9820f35d7a93e72594e29bf643a3d5df8ac8568be48f5d217d51f4f3a497892c9a049f824fc5076db83ae375292eb82a15d0ea242acfa29839ee4c9a83154744d13c6f2a7bb52c87ed3b86dd410bea5fe4027059fae0042750f8ce10e7707c41e15381788d50a670bc9e4982c29c9238f570e1ffdb81fe275268d2f15900be0d29cdc757d2e74976855f7ce32f7d170f99a21be9d72c74a1e89dbf56ee1ea41b899b20f603f6a873a3120ce484d2facf4874053884aa9132aede5f2be521a52edc73005b76cf63505068587900e8104197ae641d24d97ebbef3c2432848ea73ed19bf93297a97e9e56b65d299e7e58965fae32a4ce4546cbba3ab7afe2abd90421c7aa2ef92eb96c686f00dd9b1334e1e8e701fbbdbfbd12d94ed22cc15ea66fe3a688e1d77be3ec2876d5e6d71eb90cdece5ab37ade75017a83555db3c3dcdec0e55726f266a5653f8de653e341778967351a043707308cd2adfa980ebb7932cf80047fef2781eb617e40552fbe4b7537b9c1bdbb2d51d07facc3fb4026b62ae590752c4c5b9f34e8266ed7fa3f94a3119601db0bdaff09378f6efd4bcf4ad2446645eef319f9af7a77ca2ac49288efcbbe8b57c5d220e855ee5ee0cd75f4362ee5f530f887ad2bd30854c269c19c2eb8c187eb7078c23b20a938c04c5214a11cc24c86ed41f344c0bee54b0b9dae721f944082b79290608bf0fe2c63cc3f21a0d1d8e82d8c8c635ff74746d007858805666f11f635493f4e2b958c047b31adb8514d78e8fde6e0c5099b161153d43fb63cf91ab94d6fe439b9b64fbf9aa51439afbc6b5063ec6f0f36d4653a1a5ec6be19648371f788b61fa8b0ccefb1a9d1a39e65f144455942cf8f3550f8aef6451f7e4e8a5d3fde3d1a9fd3f2aef0dd75cfc58717fc6408c965cbfd8f81103a74cd395c11ec4e44c8b5fb8bd86a778012d736be0beae53c663d43f5db6eeb7f2da89051f3e66f072737ccabb6b08c5913c4112afc7f03997cb02a02bf84dcf0e8a68f1550d5e8511fdfb7a30b0bfdcd98f597a96b0a7d3acf51056419f159bb63b84952169200dbf45849f4e230051fee01ab517e7fa8e1d2738cc7a7b7d8a52f9ee19bfdc7952b86d2a0fbabd136d0cf7b0beaaaf252a2e68aa654627bf794263d69823a726efb2be5909854e3c11d32fe396063342879d86557ca267e6bb50008368a32fb5d00a06f95a6e04f0d167151b7e21f48faedd837f39eec4c22ce61b2788fca21acbdb0748650edb7ad4fab394d3a9e614b17daef9f07b9dd21fa9578aeebefc6f737aa4e92e4d3456f6fe1e39956b71e1f5bd9094b4e88f9616c23fe3a913531ee7ea44e82111f38dd8e9c6ed8545e79d279ee855d9139833ee1f600d75e1522d3243fcd430e61416e05ebc92c655936e59037b1afb23c856a33284845cadc8a74b85113c29c43c7933ca58f1f0bdc9512135991287094b7613e596eeb433e6607fd537d6adc27b7ac527859ae3b33875339c8003f2a33ccdd42e77eb6a874acc141cc637f267227aac1984bf22d392384599d20ee05226416512e8e354b60f3e19e483a3a81f9e6c9bdacf6817ab0ea5064fb2a67540f6387377acaf11a8c46a0de769e5915e803a3632376bc50174f3ed29ba18abb503939317eddfcf08ae07a2e70e4e3f42f70bc09b17927b652ea22c33f682c60ac65d455ea25ae4ee78081b78811f953279d52e266109f7e696e9ad1bf6d5968726208ade201413179641ff1707a7839865baf4b427a73217d9c71872490655deb9af18b1eade5d35d7ac9e506b0ebe7a81ae0f1a20532a40e74f0f56582678b07cfb6cca24320ce35dcca63c02def8e5c0afdd2a73ad181da8ef16b9e1d7c500ac98fee664a02cf12a207d89fd2ae7d89a837128cc29529c441ab0064e14d0166e97c5bc5cd9c2c8b248774da40feccf2b790fed8af75435d9e9ed856b925ca59a122f7b4ad2e879f781bfb57809c63b16c5c3a2a550a95ecd8cfb0b83c1cedeca35ea2949d1845601452d94388b1b50b353c581706167df5fdf9c85cd80e9229bd796b6ca189afdfe097b19287a909252f4a76457186daba7abfa945031b7903e1b10892dae24d44323a61abfb893b6d5073bd3162d4ed7a42af6204dc92495b57da8b98fdcfa47438cdbf1f56f817268d72bac424adb35d1992635e3154152f0ebbd7d293a19682a9d569d4a349d9dca4eedd4962a7fbaef369e05b71a86d04af6666d8003f0d5bc8297dc70c1ed06ccf9a7d6a23f87a14ed22c34faf6714036cb1cca156e28f303ccbf8250b32752c69503dc122b38104ab14565da39d3caad2c9f197926b956c7e59d7316d9b2e6b30de3208cb4cb793a2ad96158944058e68ca94260d172627c6b8be40fc2c124326bbbd26e0a9b43293647daf34629b31c0f9364d8b97f8eb3cc448858e20bb38b94ef97ca4d32b112c5298cfc4599ae7f65bc15a1ff1846e3b68c8beeb9a9f42db2744fb7681ba4b763e6a6f827dff095d50783f0e4ea490f20e91f74f190deb90cc0f21e0faf7315e30e9bd2625fd46f1e31eb17b46c3e6537c51b9d04011d240f58cb32c96e6c302ffe34da0986252cb2750cf85fe355fd8337dd9831afe6e7efdb231746f6526c516686f7b697106aacd6e3437a66c575e53ef50b9f3ea6148048193bd3805432571eeeffd45690ea2ccac043120b37af5b6082027351d26ce2cd25deb612dffc23dc2d98ef55f0b708776e5f6390ce8ff6b60f105144e01127f20c18525aa1e5bf6b8fdc4b5f6e35045a2529b66fd732482dfc006219ff55a847a6eda37138daf8e0a81e5526a2f83c16f64779bdc423ba7630fa1a82100ac68882cfa780bf1859c84ed68e96d44a727251348ae303f256939e10d1c18eed10a70ecf975ebdec8e35fc5cb129c29a103b47237916d5d9a4e5161bcc5c76d552cfade898bc787d2ac974dac9750578616de9d425ed1beca76299f1df1b7982fdb0a9c75e46419aaf3b9709e3d965ab28590ec16146f92d9a8d4c6a864a5088ecd289ffabbd59b7cf84512c1064d65f86a4326034c129adac32814391566a434831e4eb34e7830d64dc0e96401287395d69f4c60f8daf9db27e8cca005f917ba00607b2bd66603ea0b07e1d0fc377c6a2882d71cf6613861f67d082292b77b2e4d0cc365289783fb46bc555d81c372e9b258d521f8cbd0278b02098fc8cdfe87257b6265d0292081167613871e68982b76d80a5a9cc02078a7fa978d3861fd8975d583dd4ffd503526151b42b04473d3e077348908ec522a62275d013d5e9a2c7d4bfcae472afe1a275afc95bcb8e7e8cd8854b3738d7dbd2f9ffee9aa52431ec7821dea53201d3a0b36af3d7e117a34a10e344ed00446e701e61f77500546c467ddf2c383dce4d728f2c4c5ab716fbb0f2eb9cbe54afbe334b141643e042e9b35c4bc15e93515a016261650f3720ae0729016b1b6352c0c72908d7d77495b550226905818748c75bc6db92b5b73f638ef5a076e2e0b45d4d02973e89cf1fbd6508f5316d6d6485cde3186a62a9afc8105c51cca0e47fe108cbd8ce6d2ec1e0e1ce75a39349be69fe1b39795a100f5e37c416dc9cbb0604109874f9b5aa170fb629764bf52dd1e44293c88009c2ad62b3a17abe6361522c3975843421f04b788e53f88a8e132cd273768c8553e91270899167dfd68a9d83806b01f21dc9eb368da35c56f7d01de985282213d1434a1578e91f5215222d8ffceb54c621e2f11d875c19d354bcc9a74ab28e8124541e63a520b7b6a5a1b837557dcbb126e5a65631a73eee4b594b071f29c5335dc529a5795c443b140a019c279db506774b0642554c75b775f5c63179b80b47d73efcfde7a2dc754da9e79c76c7e22dbbefa8ba17150c22623a47a55b20ca6293c5d7cb0f37442b98be00eb273d91446ac2984281e4ba36e5576b92dbfe4d9a196768c9f978b44944b226d4848b9e97bbe9e4c8b496b9caea301a0543d739453a860f493d64f861da2a27e7a395ea01222e1afc71d1ac2704cf3517d04f13c349fed4e6cbc06aa0c6180d52f353becc2d55ea183ac5abb75f0105f69e5d1d551b0f32df2fd28bcc9c128389d39fa1c34176a2e04216cfe21bf66e2107012175738626d418839e9d92f899720dcf94ec5f3c9dc2dca41d2baa7c80833ef2423856179547d698593a4005c6002fc6ccfabf86c7a810a53da7b75e0713ef9fc36d389139e0f423346390b7501d98e15f6d0d5a299e5287c2d30f030fb509fb96209a3593036cd83fe74707dfb65e5e9aa21b9bba037a02889fdf761c94b97e79971983a7158ad095e667584359acbefc48ff7c85f79c5b0af659758ecf8a269570628813a1896cc36f7ef1d668fa90a07ed7afe41e5c44787e022c2829e4589ca330665e4d62f69f2c7e713edcb07dbf8026ad8e044c3fadd64ac844d6b8ee7820c30f4d742ced61a99d5faf40cbd9fab64c305dda694f5f9a034ddca135e5329cc6678ef840032b140f2dabbc7dddf0159a219500fb699208063102fe2f8cc2177ab573620ab1a532e9aab0bbac07651f176745269eb7b7118c3b091401e773f0b583f03eacc528de781b0ebece883b62390aecbef5f275ef61a7a5d62a079ff8acc8f8942758d21f3e13afb33b4d734536786dc547f937e61ea89570965fcb3ae9724da79fc4a247fb710b9e08b8e671fc77c7a7f636a988411041c427777dfecdb9f667bf8b6f063551a20d0bee428c77ae318c06a8f9b9ca3fb5ce2fd1b1f0b4eee19c4bd2bdeec27d0cc63390911bf28e6aef60b4ec2e2397c71937a0a7ba60e96b632c102fe6b65be92147d9b610ae5cd0a4edbad96682f12e130707f55392450b2a317be820ed1dc8e3d1afd82681b8ddeba647e63da3cfd3c590f34013881ed37bf345064d361ee17a1ddeacea9d738996aed10f75aa66b699596327a5b99a1995e0023a8cd5fadb5f4d9fd02b77d553cda86356a5dc1b273a0470bfcfbdf7d2db8166b0198d4373159ea646f428b51392562c8feb9b4dca0c80e9b3b5d250ecba7249783c710675d7ed8388ee1bf67d670811ff84a423d08a3cfbaebae555ed5287b69e74cfa96a039b7119a53a1b6af2478eeea3c6f34323b5fc38d7ad2cc3d9864809776b38a4f6b66983d2d6e0866f79a94ede36acd2c28d21a2320ef364b565fcbe572866bea706f4f00d15aa8e4e36c2c6da91cfe7f5a6952bc9cee437981272a726c579077586fdac6fc8566c1bbdef959f9f4236b535b46049d9bce7143b55dc582946e15dd933766b7b93c965a9e51e65ec59afd2093d8885311bc79e5b052ff89719049ed727afe410d36254961232256608b488d1477d73ed48263a4d92091edb7886f754cc063112448e86d7e142fa4774c99e4a79d4c57ea82ab45e3f80eb74f4f8f472fd6fc8e387af658e49dac14448d6cffa9bc99930dc4e1c20423ab5be2af1da295d577fecd2ef88c182a417f93c0ffb33546c893ec40353ff11797d40566c45b9cf612e674819bf9ee2d44e674d7612440074ea4f6acd203dd4741c01b4021eca0863b697449d06be102a9d5deb0c0cb2901ae1650c665aab85e9c8f958da34ed4a86655a99e2b3efb30e6a0391aaf924f60864ed4de8efc44980e90eaaadf5b9ffd7c871c9a803b75604d40300a0c85486740942b66cf14b26f3b6d058cf9f046a38e4f2faccafcf605ce40231e826c8c348a51247654b5052c50956424f424c0cedf6c401f2552dbd0630b587b553d8414aafdd9b0db4f0a338ad52e172712c794b71492280ec8e38a4078fea577549112fbe55774ef3b90d2bd4bd560f8d60518f6cefbe4a49de25f8655b836b7eae4a2de35361304440fa1f80f40cd37821b7ac6a1fff58271579ae19644f665896d5e7e952d6ee2744c277c49a6dc3872e631b62b22d40828b4f0c8632783e9fd5a5c44fbfdbda21ca034183cabb76b8e84f2997e28e330c0f2996bb54289d5ce726105481871552dd280fcaf0ed4f65e2c5d2967777056737fce0fd768b475c477439b8cf48c716ced4d4feec9db5a310ba3b6ee9ffdce4c7a7c57d911d68ff56172b6e6e3fab9890a835667613a4c3005d0d0fd650c0ce4dd4883e875fd081bf76036cbde0b0945513ecc08b36c97fd9e336ad0d19e39c519c9968d3e57abf459c2696b378a9f3ca496e25154b6ff1d4c1e27be508f34e8a6ac1e0cb19caff368b5be5921f4566c29fae3b0ecbadfb12ef3820fd19583c655d24febebb728007bbd7322cb26a7c60ce8f1a1e719263814fce0d4fc7a4d41467c1d3d534e45192c47bb5cb6fd797d270e04713516022033af29056aeb14eb08900e455e38952bfce53159af8031d00f0035eacc13f094a21b120875c73dfa47c91ef66e7399d1be6c1f53f67c22942c9d598287b585a84b9827ef04a7bcaf13b97628fb1379481cd331419ac079cb410d9145f839690f528a9717fb6ca7df7575d462b5e1c1c1b5444ebae69c3a5a5a5f7bd1a9bd0aecd7e45e981a509708f4766f1b7c13c00aa44edd4a23d50d4f16d8aa9f950f8adeac16819efcc8d41ff82386d6686d6896e60b039f1972b8a04425397f383bcc234fff7f5fdad79b4ebd8c0e7d1ae9ee2d56376a863076f08e1c57664b5eec08059fa2fb1a6dbc980ad6f26fefd88c5310626aaf722513a46d296eb0bd6692dbf7a109f5758581a44c610791d9f66c6afee0bfee5027463264b81bd2f8f900f42950ac1124474ae3a3fd1188a13aed78ff83210057fe32d1b21515f5a997bcb6ca19807269b6c2000ea578a7d9194a4e3e0c03c15f5d8f6bfbfe2c1947e2cb1fa9a9826957bab8727fdf651174ec20bc7f6136f5542077e13e3dc83c20f1a726557301f8214900431d283077315f1eeb538fec125cb382291e13858362e98d73d7c45f3d31a05d83389b8e5218964f5b39d9d7246a8542ae90733a8b3e2e6013b673f90727e2e50c7cff5598edc605398e5ad453d97f36950c35d955837bc7022392afbf8e51ea791e126ab07be44a3f50da40d654c18228ac0d6b5edea8492582fa357aa268aeb907e48ad4d5bb07d9edbf580f35113ce4d0b1f0768e43d60d56c336a32508c0dd1f6acb7535b0d882784dd35a56bd6177b1154750ab6600a0104ca80dee69edba99b78ffcd0876d1175a44fa247f44c0236b915700d43385d0e724a14423f9858cd78ddc78c7f5e542eae8e9ae12d1e0ffd02703aac185c1de1efacd2c532d23be41727ee599b69fcb13749cf65c34a5ff4b8e5d69f56f9610162bbef75ea41497a830e32b82cdeca58fe6097c81d5ea5cab85959e0750f4b9d1fad8dc918317c638bb70ddf5d05185efde9c7d6dad257cdd54d9a3cb63388a482500b33858a0ed67c0261e5eed8b37e2c1d30754ea69b888a8c3df37267adbc053e8892acc814270b3bc02cc0f242f4a480bbd6159ed7fbde105ce18c339cce9470849af523bb14e281da28ed7198feb444bd64cc311da7198b2b1c07a401e5d0d0b61bf4e29d8e0b2f84569754df5bec8904f2aa54e13c43b6021767fc258006f7df6a62e5a4d2d77f207efdca7d0bf52818a3dfb1f8666d250039ca3df1e2d2db77cc2ba52fd0991f7f8b71e1456e55103c7055858f8b73c45d077da8d81297af0235476557b0d573ef29fb63834e1dfa1ac912f5cc01369978c7d85e8b6fb4ba3bd87bb740a6caaf0c9f0498e4f5dc068a2e76787aacd371d5c0a18fe6cb44bc28954b6099ac054ec15c47773f8a2ceaed71140d57ef872f5cfb38def2da39842a58d0834a2d7273e4fa0f65b0560e4881eba856319ac9ab3b66412c58df88816439d37c0058b32b17a68d02d07cd8174c91e0d16b6b5b62ac96df609364c55b4fcbfe18c0dff9e26b79eb749c15a5142a60dbbb6396d5599354ee2a89e9eb29e31ad054e07473c29277be4ea249125b9ea80a97f3378e38831c15d1ea33eb580376e77b8437379bf3cdcb176c0e628110251037406c8a859066da7f2fbe91f95bd1dff9f627d0ac3140a54ccb57ed4099d4b259ea67f187307b82d2f7144c9b9855fdb4324b48e43f160a67dedf08ff3ebac043a09df0d468280931ddcf3c667a92fb8b75d83cde6f1da8645d53bcd5b58f09e83f9d28f08143610103ee4be59aa4f77fd10f814bc80f56fafc6bad6706532ee53d84c0f30329ed16cdfd2ec2e738a20b861c06b227eab9bda495bcce9a2dd4ed6847013325e41f3254aecb519cbb95717dcb36dc2e1ea00590504ef196be60183ac4cdef12cf23c38ffa30c37b49cbfa8d01ad8a003099cb34ad63b067e968787717a00f8cf15a26c263dd1532bf6e2607aef775af645ddf1db80e4cd1ac7781b9039ac7526ca742ccc218607625d1c96f29de75804ae081c37e7d897c5486603c6ce38f341a1acd73fbedd435e92a641cb8905d539dfbed8a7e2948f78a898f238047abfd21fbf0430876a761bdc27f5292f683e6168e20cb06fc28bea76cda2d5bd6c95ae3a98f1131e4b107df89585412f985ce0aa1768e538aad1af0f7ce7242f067c8686deeea4ed74dbcaabd3767b6c23ec7a30d6e2e7cb4c82731752ab225ee0f147f1c05503a91d294213cc05435a5a8c231b240206ef122050bdedca23ff7c827afe95e963c8debf0f34f8f123f8182faf4883933244c6b7b4f859ad2553c8ab18eca73a9d683de15fd38805603ee5ccfc7a20cea9a28fdf5cfdd59b8c9084da57f830d1b8e7a847934dfba4bb7179dafc201d155b5960a5dd794089b3be08e73c6c4b3d0f19d585ed0be2e25f7d25f2ddbcdda6c10f49f97cfaf9b073c75298dabc6e14e82adc31aaad62c6791e5e3a0e69c629999347f6643d8356c3ee8adcab401aa508dacb2ef7878a68c61dc52cc80e31c22d0bfb029ed02fc6ef64452ccb372fde1a71db7458a1c59ebe72e2f6123d7a2e7502591e17ff7e779833a500fd94f84394c9943484bf35e346f04dc3fc150e291d03b1a59e464c6693cb337eb1ee8c0030c1aa50c471e3afb2dbbe007050f12f880a12af100b54a8aa5c95a30cd0cd0ef1fc2c9928fe0a935158c2e15b4455cf39b7eb10674789d874d8940461e6b0ba1ac908100c1f7a181efb5da3157020cb0f3bf5bf425dbafbfa3246f8b63fdb2972e88faa6431cd6b7278732d8ff8a7d74a502f5fb729fd6dfe4d5877f789a7ebf97da8186626b5cb4f7b34b88d72c9026518b1b7cc12e705ce560225124ab85dd2defd9f8d852df869cc2aecc5bd420a12d1531c4571974ded923b59c749a362db8ea07c793d30e9e84722924cf7338bf38e6920bb0f4f3dc3efa347f766a3cb7f418c17a856e7d9cb479ce4b0dc03b0cd7eb49fbaa2194aaccab8cab542deb54908c0056325761718d4952c4e3762daee92ec291e4673d4ec69be7793b66e710e451e27b44428471d3abf7e78301dff179528d789f425e871fd63363a34dcf7099ca90910914c39c894596c2f5a4fff113876da28ca394a6d2b0a15b6436a19b9ac0fc72b7c0392f5e2bc16b6fcde6ba2f6d265bc342c89726f043d45a220422b485f078bc3cba8f7d64ffb5c094ebdbeec42e279d1e60026105a4793b5b0da7fa155e4e8414db9458d1a9f862508ce3069a9bc5fbfeac0d46a5a84a21818ac63e8273e94575cf458140b4ef6e3fd24041918dbbc34e505e06ae27eb1d2e74ea050340673510bdca2c6fc1b6a5cf506b5d7afa448979f60272f9872762fa7e72fdd43cd2b23628e33f2f69011bf22caea382a38bf6b245447d99def1e5e3090fc9e9a628411ecd6d49bea1b5fd5957eaf4ff9c42baa45b48fc847692457b98a4973fac4d01128afd459af51ac1771cf1117f19793f61ce5469e07d5512fbd550a464b5561273aa4c1d94ee0d6ba031812b98620ff0e2865818c8f314cf6e8caf0f4e8f96e5dde9972461115c9b6bc32a8ac28a99f687c06259bee07193480fad6e3fab60235db304968025bffede9f6b24a1f7a73ae03e833a6db816cc9e2d8cdf3db0ea749e9aa3c35cfc3383995ca51ffe941b0dbfeec4c844bb08d37b0ad87bb263aef60fdc4ca247619217f3eefb9c2253f28b1ec3e657174de29d667417d1c38db6d661fab54662c3716df88cb9e7e1081eeee996e0da324064c9e52fea803d693d51685be2cfbf9696fcacb7fe3eeb65b0074865e80896f7b5ebfbc1ecf5b2e1c928db64c19415fd6de9f3fb880467bf2d1f88e99c86d1cf4cf568cec580f9be349a489621ac2b05e4b10509427d08a20a3d3b184fa421d89b6f0e8f174ecd19857dd594ea83039b64e1dc251431b16c3c7e53ed1515ff8eb7073bbc49afe231235c9c254885e88f6a789b9bbfaa7c8f34090b8383c56d0ce4af9e22aeeae934562e6710845a107465a5011bd6c2671c161dee5b2dba05da8de54f8df983ab612f9ee30cdc09327a415a6d059ed5f19475a64aeb1a722152c9c507d4eba89e9be657092d709a9217af482dbbf953fae060b8488de9bf99ad87ded5d1922bafb8e4bb74e0cce0d1f23d69d8b8af69ba0da2ed61301e4ff4829a58fda44051b2138c542e8f0a008392b90bd5dd4192fc4157bf9e707055692750befb2d36e91a5e498de51896370fe7fc3dd6a6353c1b3eaa5a1d25c99342d7dd52e1ee08c919a891b18ff612aac8ce2fff120c349f7e773ab9b0fc8352bb1e7935ae9e89be0d071f0779b21283a0d2e6a1bb447c6fd38872a215e7868afadceb804cec8e5fc5c3a5097fe969923dfde0711e57c7b2df0ce66c3a2ae598a281e67f7d626a38f6c00cdaea4ed5036688527157659490eb6f0b186a1855f21b2060e9266b70730b4c0bb06bd3c5214c30b85382da536e15d2bf23202cd937bcf2496871cc59b04e26baa43457ff75db1a68be1902e77a29ea4f0d6728300d306e010a7466493ebbb3796165786a797937698e2d0af8e7b18e74f1d31845c5258193e4b743ad4a5bc0b9e62f90c4b311fc7a0414b5acaf5c27cdf3f12b48e0871c274c6f46bedfe8431c6c5929d24a8a6eb0733ebfe10903e690a84dd12f1f697374285d11fa544590fb499d1fa0de176c1ea7af32d0480b5db08d2185a8cb8b305c5ecfd73b5c8f5d7694fb84db6b8acecd3ec31f82c3d2405411fc2d0589222bf1bcc98a4bc528c792918441d68ea0ae958749b9779b1eb1111d5e0861beab62edab84e56f1463a33ab44a15aeac22d2538b3779ace6f65f4403c321c7d64a228a6059fcb7bc6d0fb13471c967eb5815a3862404de042f41671f9de322ec8cdd060b260396be1767b8a043b1cf0518baced51837b78fc1f034b3a108f694a81bc57e0c6b72f11af9edc4ac80cedea80031a31de52d1905993f5c75ae5c2c7f3c6c3ab41f8c497a50bcbb6f3e75dd773ec8294d644737343efeeb07c22a7ef67c760c05864411acb5c23066c34e4588dc2a5b0b92866cca2550069b6a9281f9af58767115505720073188defcf185c6780c5de50d1b91f773ea2a93b7704ab3f9d93d561872efa436a83f8c75485226a2705774d1c366ddae961f766b921bf495b781fb500aab6adb55b85b4848f743209cea958b9e075918b398f9570000e798c5e91373613e1c36aa521bc7728fb267d124533f7f8aa15d66763482d8c24fecdf3adeec0623f07c51befffc1bd133a4a3dd840d38f47d5846374fde4d15f3e153487e35d73d53e4087576a8bc52d9eccdd1108ef31af03b1a85e996c8e0aa1f0dd52b4644ae67669ae90f56041d553a5e7139fdf661810eedbc4a0ab215a6f9ba16168e429d780b674ee1dedc2c4d1cc75facd0d42911bed3e800b2ebdf96f934d60978a3ae41b4a079e0b0b14904b99cae1e29ba43d19cc9d85526b03e0edc0be99c69714e77285da0ee5165229686a2927269846bd4c2fbcb004c292e2a936d8daebe1ba2233e79f488841883c1014ca5987944df7b6a1c0b29ac27af9e818376375adf175cda719895981f0b316333a0b37dd63a29e12535f1bcb2686520511a9bd85e4e20796b24d4a2763b98e92776af5d0076939a9ec7f8ba2b5e3754fa88e4a0639609913abc9268666cf0912bdbc9f0012c403fece2f361a23a7707725d15b3463965f4f776d14603303cf5855cec892d743ebabd02701942275e5f7d82ad9ac18e6f4a4745935f5d143beb2ff33cb0d2f00d0ff254afbb29e0f7fce060b222989ce6d5f0a911bc375c427572cc910212bca47f764c6361583f303b76d73dff15350dba5ac2cc48936f77793f6403ee89da9296f173bd03b6c78d73ba0273073a481adf415695ba5c1b453bec73f8fef9a766fd344c1422236b3bfa3053b3e995bc84e964d7260f3de9cc1f442f1a6ed9e0fbfd5e71c26a93b6c22a5996928920f9e5725162c85adacf7cf5258a95472a74e9db425088c5ad3ae0175a1f8db36d2a82a759de04b3ce73ec986faecf67c283b059f818ecfcc117becdfed38d0fe87e2068a9a99d2091801864faa0e9440013b603bfaac4a6c4d169bc9bb184701c18a4f38f600ce864f92bb3bdd55932c59146785ba11f1ef59ce4af1ccbe456b65b6cfbd515998763e42a4fac36a455a5d50ec16b6fb96308a4a5879cd323fed0208c43f74624cc108123c553d100d53a30b77cc34ad63e176d6fde67a4fbc9d0238cfe322129dbadccb27e87f7b8afb0bb7fa07971b598b1d8b0c96d3eee4c59193cf33b9d64975dd77b2a92781d561f22334947301765a0eae31cbc6f504ce450867a93cce541dbc2a8102dc5303abfdb3c6ec2b9cd0e8567910b71e38c3c9bcb790487449ed634b282b4fcc025e6b6a4e2ee0f7afa2387c4664a8ae1d36e40cd66fd4ba0c47a5a194ea99a26d525828f1e35f54c41c63416d8767e3c8d09f3c0c1ded4112fdf63f63c6860861bea43b4086a14352609139318e6ffdd86564f92ed36278135c132c9812ddfbad28f7ee158815e1540ab4255c8228ef8a5387dbf66f7ff3ec2e315073dc434b0184291592b432c25ebe15ad7c3ec77020a9af277ae624d98cebb05072409bd6034cb0f2b2d9bc7e795d33715350ac71549f12a06a11cf4d007880c55a276d8c626812ad18ba3e7cd6c7d6256f2a3df42e2a70cbd5b2fef6942d70072d4dff290cfa6d087ddaa587f5ea1b199e45978598e4a02039e81cf5a0a702b9b456f631c03f44cb329483d51cb0d42999a39ab76aae7de5257f176d3faf8d85b20366b027894ad4c66e069f2c7818168ddf1191785e9fd9117c00c3cacb8566f2794d8e4b9993aabd6c059caff26fc10e7d811348d2535c93fa1eb54cb01ca755ed52984f5f600cde02b732fef9c96102e89fa3d34f81961ce39f3efcf3bfb5b817200525cb314a94bbb8759980a8c2c75ecdfa225fce39101d9c6e6eee6a11ad58d066d88f7aa4eb43b655596da8c9166c027876e8f15468555651c6b1ab062b95c0dd2922806859544096f4a2487cf3c75c84a2370c9b8ae81410294dca57fa14e3b181b04f78f7729e653f30834195c16bb99a9d18c2aa41b3690e8fa02515690ce72bb81b53cb4cf1812baf594fa28ad521d1dc304ba77fb33571e1a97a4f98a740bab62016a88e68793f4d9812b795ee7b569359b26ebc24ebf04aab7e80a86f2a0fb7444ff983cb15cf848c7529e156bef06c204494d0b7a0f55b2492ebe1826ffc4d08c8ab92cd33f25300fec7f56cb81a2d0be0f4f448d0a5233b33a0c4926c092e5ae1b52538394f2f4bcab18772157bdc52de2e8fc61614365850239e49bf33297b2145590ebdb935a8f1de15ece1f514b817587d8f68c4cfec7049c99548496de138874431848a455eb52c49af27e2ad7bf889265a05056479c1915d716041cad95f0e309b662dfb51b44188757978769fbb2f44fd588a4aea7b20caa465d89e9d6cc84aecc1828431c43fd64cbd529024db398ebaf5dd1184b2123ac190a66f5913be2b1c36de930af6743acf10408fa134100ef1eb3cc4fff51e9bc5c1403e0fd3a0658584cb5b67dbe496417705b6b94a19f62c1873f1322792493b55e1e286dd4d3f5b84e69ffd25714884407850789754d9df6831f42a6bfd5ca1261f182dd8c855f6a4019414ac09d315423c1a82c6988d428865b99371759dbc524ce4c0383939a9f39d97763ded41b51d6d45a573efcf5ec9f9931203700116e30f9f48cbb951ac0fa58ecf91666a69743b68ba923ce9bd089d5d991dc0383e43ba5f1a0b5054da03ba22f3395758e887c9cdcbf848df245f05d31061c88f370a944cfb4244cd72927a7403112ac3c084017df1b0fb4f27c10066b83001fbbdf84b6aad7667bfa51a2cedfc75559f8363d0b73b960ade43c30c49f37097088e5b7ed89823a13cfa91206617c1c9989a087eeba2ba84722f23846d2aa61175e8e7b00991e17f1ce60fbe38b5df1544034b07b99497d7db592bf51de78b240908e665a593f24012f4c0e51c8568d9c03327704a2480dbe08e773c24fbc579a5df9a58c44cd20eaa4d72bf7535d53b2e7a0136bd68182b62f92e602f1319f0ce6246549a413192e5eeb7a69c88448dd63ae9df5399509ce307074192b9682c7b45dfd58946ee3b4ee29371239e108222074001b2b4810961d787910073ab212fde6963541d1e2d9e6b6a64b46403ad3689999ca5609682413648ab6dfd12723f41a0c263d5d438f646699f64ce8484829d47159c127596171803e2e608e2298e45ecb0243d58af1b930120a53f11b62c13c7f494fe0b604536ba506483ef8b5260cedcae3afcbb3f1d1106f2ba94c04dd2eec57f573a81a6fd625bf35a936d447a1e23b64f87e91457ac1356be6e3fdd90d9cca0da2ced287a4edd19e96270b83e7c318f7c4fd5688cc7b4eb7f8689f65dcbb8cde7f3d1fe805991690eec66b2ebd184786f42343735d87c5924552ddbc1aa6a9c609f0e700756d1dc9b31c87c1f28aaae5219367fdd067cda94816ce3bdb3212257103121b98058875f0133633cde82b7015a6642cde1a25625b877f8fe9a175d5a3279fb06815b1df0ea3e3e9860140c4e238e1a19a0f879e5eccbbf861a359cbd0a10853784ac241aa0b2fca6e11b7e521a7f27c2551c6d380db6aded105fe9abbbd2c5ad6b10741ecfab671ae71b113fcca8738673dab0546c71d073482969c2b04bb9f9374ed292a77e0409505e2003dfac731ea4e77f933bcd63eee16dfd499a28c3040a6120c6de1ae03a1e721e1aa9e2ce2682e8762f98d98dd01241885bdcd38a1f2cbd6f86964e5c0f22c8d5278df49dc22323ec0de1a2b0992e7ecacd05233344d1e8ddc930c28b1c37a617871510e33617cb2cfc4c0860a1014fbe720baadd9762d51d3144de81e06f582cb33d62d45775c4c33b2dd4733c0a93a1efae7a08e05f93369c70f73d6801972e97b9a84cea4969bfab7a1cf0d86da33b375d59a393147d5f4e306607b62c3246ec1d49da1d8af98f3b3a3a4b2dd938bc82f4c7115de4e1ae873098301a83e156d3ed2c0588238aba02832cc6910bae834d320b85524197fd8ac77576f2cc14c956abce2dc7fa13ea2fafebb53d47931be989dd0733652b3f238603ff02164c1ed3170763185b6d8105cf4350b02c91201738ff47ed36f24451cd85d87792a11bce7a60912cf788a433856f988ad3abd0ddf07921c70d7d8841d74b1e458acfef2d31cd1c2b01b1acdf090a75c4e00b9d82da8d9237c9558bccfee334bd475bec77c7de22fa03711f1195476ad11795fce70cee5d9b3b0f3266729319c5d3b9eacd2def92f72d2ba908957aceeee6886a4671db5c78f41d3e16601ad804c739c6c01539c8862a63d71d5e570167925df88c9c18a6f341b9dba74818e96ac37027d842a5155c6e9681d62be4051d91d9989acba543c009a4f784e6699df25fd15433a51b5ec31a8f1a116372350a0ec57827b15a13242b0084c81704de50cbc16633b275051da774c222a736dc358785ec032a831d9689c20a5154d8bdae23e5b231a8d3670544436b05d85e448699c44c64f6d6b26df9d906024df4c2b0d1e3948885d8bd480ba521634f22aa35c0bdadc446943d2eed7661636ddeff658b45317e5832f6867a7efdfa9f3fdf5241aac46a45d18f9fc53525e4d3edf080c07260cb84c5cccce7aeaf3b7312ef1aa732dd266ad9d702b7c15a38510862c530b2c15f159a3ffebab02562148c96f7cd6c0e985c891980cac5921cdb82728551808b4eb6d04c8e23f136dd91c6f138985e28039da005d5ff1b3c21052aa43237d0ee8d72e7265be08898d99e0d4b6fffe4e946f1ff880d6dc40f94dbe96d55d105c15ce498565e24ee7fd8f7e1d3100a77f9d5a2e448e21dad7b05cc3ca1bb043c01cc14a0aa445062dd9e17e3ee6a7ffb10251d9774e3a2fcb4860c9cc5651298819434df39dac54380123068d4d385dd87b03362670b7ff162f3e5fa57fd8bb251deccf6f962a1695cf7727e9a251948e5c23e27168c70a0ba870ce68e56a0c7e3f9be2f363beda304d8784afb710a24087fd32ab053fd3dc7aade895276dda688628f7265b3d591246a0a1537f97f48bb93615bf2c3b619aae3f2a7c11b50c3c981a94046b63b58ad0e600e246969a91d9d4cd5023ad7d13c86fce087a623166766607e1e037c2da5dbc13d7d8f594653fac88b22cc73355693ef1a419a9d09a208a514f82388326b5f1565394622a38e5af6366248285ba78f69f31b2cdaaf20722d2becc3be6c7d02521771873a491b01aabe25c805bff9ac11523d90b1d8a9bcc00e442bee8cd6bc042cf1d17442305d6e0e1000b6bbdc1b8d0d92bce74e8dfc00e090d10ecac9dc93da3fbe91abeb1bd01ca35304a480f1378c4a65043ab2feeaf9e95f4142a7e347115b1debcfb23a5633cb6fae96cc1b15b955347422369ae9e55bde7d6f298b65865bcf4233ab5dbd0459599585edc32d1d147645835ec08ca8b4978e518c72721dea08b3bf1974e0d8dd559978a12ce7adf65e3d54c80a654ec963608d33a3ed9572d3e09aa87df6613fdb6fcd78387a9b4f53109c984167e21fa696ab9095ae7d6a6d7d6f63aaba874007e08313501d2c234c3675a02143a0f350dafda1b6773437f5ca20ab811d04930e6219231d46485b38fd46927476fa029411fdd984d9f5dc3e59c383d97de7aae213347bf332b3f74eff23a66cb3f12afa457d21c4d7525d72be0ef4e4e5abcd26551f3a7916266cb1890c5602a52f1c59bbd78a9b338016e38f27286787cce081e717be44338c259f53c18e87eb5e4b0bf9179d2dfdfccd239330836f61f36725d6c1968fff22e0fbca16beb1425659e50e87d83e58fc227f06a6dca9a8d8e6a4acd81eeab5ccb6cb076c4aaaca87011f5682c5db56ea724ae70fc1ad783333c5ba636078cc064ed676125fba93d763b88184ccb20ba72d3d57322f88166b32d596033594b5c7da692ed1c22ad270046cd766750bc73c97f6c4384e1e4fedbb1bdfa051d6e99bf2a2e24390203c7d63f7f1dfaf16e8743e4c40a2a8b897fffaccdd638361ca327042f4d2aff874808664e1cec72282eb8571233d0ca87ff90a5fb98f76737e92c82c714e83018fa17566d487d28704fd884d8986cc29897fac6ccf796f9814135fd1af62238648bf59d066d88e64938a39285331abd815b54fa02dbdaa99ef2415cf1e7f2e0ecea22e33b022bae1746edf54a3e8f52406813cdaee8bedac03f38853abe4c1087f38dc4339b71ce9edfe074d3d763340d8203a5474d54da4936386c418dc4586ab3f91dd76dbcd5fcdd431e72e0cc12272e2fbd09bfeb963f89ed3d1b4874e9ea20888fa190c8e41a736188f8f96df57e69e0fd25d854cc34c277b64ec88cce65fe220d14ea447e44e75f830ecf5e96c00525f65946b0be65d897d45139bde1bed092bdc2b36f248f9a8a9f62abbdd2beb47c901b2f58a13e43667c5fceca3995eddd50bb992884c961ad7b4f9f6b28327fd4bca4df9375bded3fb527dfbab57f0e168cd79286f31e1cc0e99ab75e266fad67fede40ead71ef2c4752395dfd491224e4f58dcd30e869b7a832d9fdfbefc989675f1f8012216824a245ecbb4626d6ee177227c9bd92e6567a9e131cfb86877d5920cc33de852f03930afdc89ece87933a679c544271ded6b47b338cd32e6d55ac18f54a906ed3105f7656610e6a52f3e0cd953cdb3c88efe78984ad12265cd89acac9b4023623b7ee900e6039a49e883435384d8daa8ba3670ce2c8ea35d2a9e13c4dfc687b5bc7184d77ce6b02d165850b912aac280ef41770c54fce3ad4c5d748dc8a27a1f853465de18bfeac4344fc790d9906bc3302f4b354e4e57664e37c592be23205b077ab23685f2b7817057ba5a48cb2d9a86d56a2c86ea687fd2d0006f2459efeab0c282a67f49937a5ddf0ae4adc3cf1c59c4bbd79beb891e348be9b18a01b65ade1b0352889015fba82e507454caba5e20bffeecb1db1ef5a39f95d420f18885fa3638ecbfd903fd2e48df6a75a044f09ea2ae5940d1c745fe232688cd707efdc594e9909104fa963665dd3a62d4a88eea32d0dfe9ab50131a474bb869ae72e880f3c215d43479fbd555f57400d911b860f55fe2f58a60770d2f9a67185c10164e0f6d3ceaba2ee99fdffbfaf00168b07a4b27ab01df831f9d41d35d6d037a4293f58883329627d5dc049bb11f909b2ab00bea3b003e6008d5084dff7bb1ff9085fb57e4486b7b6a3aab916d61fddb35a19ce1390cb21dea780a91739116edabcf50ff089a52d5771c9b307a5fe94b35db7300e279610baf8c8251c987e959a6eab6bfef570cc93eb17ac38b657d2add6739f45854ed3b980b84f7925c33075e241a646a168e9b5d3b7a26f99f8d91cce0dbe6d596e9f592428c533e640371082d0d92ef1fbaf6fbb53323c6e625c76b59a1d02a1b272e13bb54624139c3c8a0bd7b4d7554cbc7eead2b449d5231a580c6e0f497c1681e584a1e0238c767d2fe8277abfd34889be21195461a43d669959aa9b3bdadcb15ac6645b78f7695c6b65708c63de3bed98d7996f130b198d9f8eaa6ff1ba867a54efef50b5caf41ebbc00d03b5fd856483cd16885ce30ddfc092bb0c050ced089d8d1186ab405fd32af3b7410e96bfbc7dc1358862d6747789864d526820c299427bf322b472518cbaa37fd56a283f3ea2b1a105432ad95ecaed574caa4ddce9befbe05547d264b3ebee481afbbe6c08dc05989bb8ae8f196f4721dc50e66c81af9c6ff7a44c73076d0c89dd8bea53f01f3b6dade474396c739e2c984d8f29188699fd08ab7fc5572c5fe749d04a59e6486e9bfc10ee4f66f72ab801f685a59f94405cde83b191c27405a80619bd893a605471384bd884d1b888965c3b25a4152ca891e5832f308ac76b1b52ca0f2f42f9d8df3bb52a2d8a594d965bf1d0b78d5a3a0e704331f01ccf0e8e5b500c502c854905eb52c1ce9f0b4359717db010f98fdc8eef14b6ddd03f878b2b13e707192df2f17cfe9e751c69003bd83111d4fdf1525fecf020c1e89e14d1f3cd96758a78cb5d766242c5cfafad2494a31a153be7a582863560c4379e238f732743640b87f1cec22f0462c173a351ed0659ccf7399f262c2ab814f519f53f03de6e375228db3c72ca61bd026185dba0d208d2b3703d1c7c16ea75cf7ad9f56af7643bd1240dd4e9122be0f98bda1b61b5055d9e546ff94febe1d8edfe4fd2603c7390bd4325902c8a54de933e5d0e7ba815f48333d9ed29997069380ef48ae19df452234e13bad46f24e94281316944e15af2622870af1d657c5d9bc9ebb69788c6dd40fb1928e07326bdb0a2bd8a8ad411342acc9a03d7d89cb212105c7b535e7b1167b483bcb214c5675e9012f06e16be264cf8cb05c50c8c90466b4d04203594952241af9624d7e864a4a0702db12be4482e7454f5bbd440953286de48b043fa0bdca6e10451cb48e69be8da620c753b5be291f3459d81081a098418fa5e139578184df1c5fbac71d03d1b47e285877336f2135332357283c494da2021ecb35cebdc195afbb32ce05d36eff38a88d44b7577ba84bde17dbc3756e47632cf9f0f86eff4fc73b8ab059f6cb59157605ff75d9ca3213d6304652dbc40fcf0645df0e27409240c4c72c7aa00f3f5bc93377e1966e59c961697348430fa19ae1ee894cb8182124bdaa16f8d2c21d303f8ec6725b657938c52e00b8e1c47a952bc9faa7fefffd15f39f37ab80a8792a945c97e140185199e09e15424d7b055fe200816e22bdbbe4dbe8a4ea1c42a825bb28db835fe0d3480a170a19f51862c8f4a90af6efdf788314ad0514aad3da6bffc56b92b2d13b46c6724b061d3718368305817df246fe5f1c78a209a9cc9f8aa49013203e78e97c71ff2b2d5f9e3bd348944a2b4b5053285507c67c1ad46f991791c1c38e0496cf9fc18772090095718bb0c7e5d799034768b929c1dc4fe07d4519e2037dc23108e97729f31902c762e11fa4632ef3db376d87772186631693d9d184dd8d049bbdf4fb926f38ec8f3869eb82198078ce88938800a0287844e168b9dd2162271223ccbc17564ce7a24d7027c4ae861812438d00a1668a159009450525fd81a8a2f4d2b6680d196815e25e933cf0acdc0a8df60e7156b3408ad9240947d121312a55ee554741e6b3ebe5bfa3bdf51530859b47f1d28e8fd64ac99c368d15cadf5d88562353d12d8ed6c6a75c0523482727f97e2b2558916d73380aa9c900424fbc4c5012fe016b6e79f82bcdba03f0e5e82e34ced0564ce406b9ba6dca683a5587332250598d992e8cb35a350e75950b6007fe26f00afe536756bc01844d6964f91bbad83b4e0537036cc9601bc97f092255bc6b71830713e6af893f440f79f2e8e7c2e5d481bcd4276022d48cd838bd312d806abfe7cf6f628dfba61c713529c42edc37263aac662b3683b3de79c71452f26f534e673b93c33d6b052cbdafcc4f959a25644469f2329f943948f6f13cfbd3fac4e012b7134e490bf97e533ea61eac5210372d790e0d92d993bf6f229878b5a73ed08faddded2d2bede0cdd46e0ae5933d08e2eae51b6670b86df429c88e0d8d1c566908e098f1e95fba593a717d8b2a62613ee8838a9bee51f76b21a361ec19053ebe836192c83f713cd2575bf5798af62bab1ddfe01fed7527e3e391aee5c0eef159aff0c147adbebfcbb77d90465cfbadf007ce138f4b1b8a698deb290b70d6f1384ef612d22a099476641028420c54128a751636c13905f3e3d4a0110487247e725a3af351be60fd1992412a8d47bf2d61988a1e21bedaeda6492a966132628fe1fa992bddc676e6541e37fa82937f6b47f662199848a6922c88f091552ecfd9968e62767f63159655bb1b03c35b9c1803db773c2b92bc302c0ceb46a3bee55c7a5326976feb0a2f0593be784f06fa24b55d805de0d8e68d77ea5bea5413d03f8f757027a9727004b5c09556cf2cf0de796c718603e6a882310ac2dfc58acf9141b731ea7c5f982271803704ab62298be04a32c39140a0616bfd8588f432fa60ece425965d1b7034388bdae34133d7fed94544bfb56939547ff344406c21ec8a1885c6dbcdd395c1efc3c755a2ee61d97be4942b3de7675f0e92d77502d2b01eaa79faa41b3ccacc6228105b0927b58cbf9ce9de14149c4062433c0ae7c2126d6e1c53f92103d24d3cd0bc1f857e30fcaf5d4a2c59ff29063d20803154ee7fbc8190efaf0002cffc5955bc3bc0ae4278892fc98dc843ca8c4c3d00f3c71c792e62d2c9f2d1eaf0e7ef7a676851fc02c56d25772dc7804d99976430fffde8019422e37d160d2b1a1d6a7361aabcc42a41435fd25950bd23803c91aa04726abcfdd4c80a3beb283ea6e0331d4e0dbb8db920727cf4dd791c5a22aea87abc8551cfb70a01a50b1b7fcf406cd90e0a2cfdb7699dd8c639ac5f6530e022c562e3bb955dcf2884ee3ab961817754c404bd5f960ae414c74a87219a5c5e70f424199e942cc916ff959ad4a96f3f108a6ed71f3dafdbfcdd011b424e8328909cd8dadfa84ae2aaddb27c9cb81651668e6dbed9b6e39bac8784814c4e46ca761dc0e6d4d07bc4212451d20c0e562c66f87a2910f223f7ef82bca0df1bbc03b5e3f49bdc49396fa6c898f58bb019ed4f24dcc136f35a8e5098ffa27088bba1babc0771482249577fbc07626fdd1233d40f2823678d32cd06b11b9207317184b39ca2ff162a79cdb420737e56b602a68e5774c1c0b0be7c8c34d353c9e2ca5eac39a8c3f22af50c7030c1fe85d6f61672047441a2898dd37817ec22a5bcd63e7a7cef72e509b8cfa247a2d821c0f5841c5fb849c95bcb5b3226511f250c784c3d620c1ba9cb359c594a47ae31d468f2448df4adc9d74d3bb52057564de4f7852b679030a9921e44b92be8df74f0a94b27b800884f2c7e3bbeb6cfac523c70ba9b89a85bf7b424223ba85fe8b7947a5a2f681feecf669bea2e61e434d6837b487402ab32c4cf65653373181a6244f22aa5306cb2a41c0d9fad01ec1ac9d1bbb555b9624750a5e36e693bafde8f90b686a753816ec64370afe6046e594fa2e2601f2ea8ff79b359ccb72f86d70bf83a4b649c3456c190113d9c4a97e95fa48b33d7ce2be7e75301d9957b809463c9ca14ce0deee68ee01f8378333c066a4e80543ff14796c7428f94388e95f7817d2147663bbdf515eaeee0e4ed1f179b490280883b2322162d0b468f7d6478fc5ff2239e0a977c71b044692cf92c4456c0bb4a935aa7b190e8f7404711b5ba9ad0fad29899dd249f61264d713f152637d88a4fff153eb36118fc1486a31a27cb3fccfc9543694e5e5028ea23c36dc4f7975103d26714f6f061c00ec3dfdec5d305d9306b4c76b97669bdb5b3cacf25e83c42443f1826a7043147e2a9cb319aa521a70bb855c78a2b2d25a6fd9fa725fe3b92e24689e9866594184097ae9c1b495ee7d2a425c0b773b48511172945c46ae4fed3d2d87cd42abf321384c5e0907440cf270210df7c5b072ef7879897e9390f126469ef16529d2e5dcdf9a3f2967efb92e6cd48e1c5dfdb530554e75e46fbb07f30944495a9279ad942ad6361ff72cdec8f9e314f6f23f9026c0fefb572cf448ddd70419fd8eae2e95ceb2b889c382a3973cb4e65de4a14b35ef45372b520e374408351d6cfe2c749234722917ecf26d626522eafb5a142113b03849d407ed868ce73dba67d6bd03af1d0f564268bf5361e6d4276f59df5d78899aa87ca114bab011a21da234271941465ca3284f9f950cefd68c83520f31373d133f57c92e10ae4d75e38e5355478777df655c91e090722b0ac9706bd182dfafc8d7b5fa08ee306b69e2928e102a2eb96cb2d17f9eec3f4ee2378a40267c770dd25b96bef5f3ce459e516d2d05322836c30c5e146fa004870c4c23e21b8e96acfc0d90d761d409625df31a8114e2793502154e5da95f0f692a0d2dc36298b7a150b7937d3b89fef9432beb4f06afab55d6f3773fb4eb38ba1daa64de6d4396078f68eb23e246e7e59bc1381a0bd87b4a20f57cab2fa96800301f84f863a111d78509fa3b555def985cc056167964ebb4b3cee8b9aa13052a3e55686290a8776cdfdb3f45d09ca973aa51cd07d60c45d2d5d835ead4a6e5da29c9040d2a368c614456983c4e116e2e8504087e04b56fc30e6709160dfe2cd00c776f728d739ec15d148193dc26614e8a7e211dead7cc8f6d99149a0fad47e0ab66f2892357c36ffa933631c5b40388301fb36f7256a7920cca0eba195458a3a510db91d6b6637f479dcb33a197df69647f7fdb380c9468c5e2ee957c2741ddd071f4702ed44690ee1776e710b03f7d01f3add1921159c8124ce4c18eb45f9760bdb474c49daab1de068058419c2691183ec82a3d684b89466a34e90ebfe3155dba58f14a2fc76fd6bef24a3f14a511db2361ecba71b3ed4e74576ec37deb7eb095f743e8ca20454397b6b5f6b84e91327482249bbd6c76094675bb31ede8fa7b8d548755ff7dd6b8a6f04bdea3dba4350648f9736074a58523facb949e1e7c4fd5208e1d922dc3c95b112b3f3e4bc4eb7280a5c2e2116b50cd9c42ddd59e61f745f2f7564f14f308058b4a98d67e23ce98a1743dca7995581086ba8288d2d0970a424e96634f5856b322b2311dc71cd70a69ae3bd839f00d3f78e9dceef33dd9f9d3d55106d9afde48c11bcc711ef9a5fb73a80edea7ca3c2134a9143b92bfa966a4d0a5c83d71acfb04166af7e0a635a21bb2a36ad70fbc9f7fc50edaa3f2e4ffaec7a186f2976384b039b23cc0526ef1937bdc0c7d8b2be2de58802cff7dd8cf2638c15d4c39adf7a0286663c11d3742cbc69d98637581db0c5b706797ef3e9383874a4eb0f1d81d61392c59d7885f05a04cebca38a41a22083d57dcc4a410bf52432fbcb533b12afacb7f9ef6d96ff7d3e80aa348ab6ed9ee0ad39e8582c3d5bf66ec1f7c6e59f93b6505109770db4fa013b97fec08b24b65695dfc24e8d525d360bb636f644f92c7b19763caae15e57fbca0763debe77297f4df055c4306e160e541178f6d844b151a3059e6a89d82390e8640802ca8916c1cd908a36936ced3115ed2cfbb6ad46b8b116e1e400f3a9ebae7b2729d2d32f9a87008eaa644dd28a7ace84a1c145638b33b0ac889e6e40db5231657d9b876d3dd2f8f320da66b270cd71abb9d327cb6f48648e71e78611d0cb39407583599c4495e259c083f9bedfeaf40374b37e35016817425584b8b49df475e17104498bae47af538b65665123b725c2237db904338634c4442231eafe2d035fab7746b996ed1f033eccdc82780299ed521a972a4522ad4752b0c1ce359abbcde829ed9e560896ae853ea022f7ce94eba4848d75779b587ea0cd344cf1b98e64f32cb23fa9e8cc37b8b73ffbd3166c3ade316647824786deb56dde3e8d5878855e75dc125b233ab1ad6602eae87e3cff11ac57d13cd36ac777e0fbf6f997c6b16b04dd6a410a006a692ad87862ec6b0aa24d5dffacab009743f0774f12c5e848aadfd7f45d29dcb327f4eed3317c814c68a36ae70b4511fca4f8815ba6d751772a9e0c77f9e0d9104a4bf55e5eebba13439a6d2105df530cbf2a99c47c126fa2d3c542aa643ded85c25b74495b14f2cc796c039c22fd935c86ca6bbf4ef5804f89a72fa87777bd8d283ab53ec2c201b76b2ee1c974f64eaf5838e0660473e786d20ebd70c92ffb55d585f497bc4286afd9dcaad376339e32d27ea149c3481d7595bf4c4fcfeb92687562579517de6b484f5ed5569ef19e5ac56c990ebf8d56685c52e95ef206fa25ebde07fc20501ae9338e6843acf6598e174ba56660a5175cbba6fdf45ba4d47a6d958f5900e3b416b21a5746235430b1d0b68f04d88705f90ba875be70d54204220633819fbb01ff2e52da509fe2410f621e22d167a1a1f1ccf3ac56b946baf9600d6ef5e188574722f870e85c7780ad4058dbe57a79ed121d7dc2bb9a9c0f9450d0c7b20b0ff5d04416ae7e9f9770eef05c86e29c246f6db20a6ce4f95b156c8882b433913196fda8c8ea5ad77ea63801be27168a5235083c0ce382e4d9e361dbb4f4f8a88983c020e39701b48b4b4bdf0a508f16da522d64c6467f307594bc744fbf802c069af2902fa34c5d15ea090a00338e0719eb9bfccf084f288ac099e278cc4f34f45e902420bbf7389eeb4c5bf6e96206a381030d19e7ddc4ae68716c5dd34cf7c2637d1fbdaf9268abd7435270bb5aa2172dcb21f5d1324d7564c8a51d54e3c44f3d2ed4886a56b2aad8469afce463dea5aadaa6cf10116e4d7611771b7191f30a3170df61e7d626c10beff6797e3aed70bfe29a484faed0bc8ee7780e1c511efde3067834c8e5976d65376d5128e7fe4db63f8129a9f8576094866dea42817bcc18a6eb984a9cc0f434eb75164e333f16d646fdc64b37f2864646ca9323362fa009e0255b99c67f781c542e853d901cc131496efcb1a0b4d27423606c701a4c186323c7d943e16fe3321fa7a2abd279363f0cdd1e1fc372c9ce2985bf93013bdddae3643efcd0b9192c12d879ec202baf72661889189170ac9cc3c2cca4ac9169cad6578f096d13ac3bf5dc29d529fa72d2e0ba8158945e6fbf7d47ff0b5c2fcf7fe30c78846b5bdee190e4641d3fbe535efc092077c74c9b07cbae8442ef4f29e62c019e868c36090decfd6c909ede887f77e8ea396c6d54204d94edbc38e99c720a3e9b11b94385f1a6711d70388837f64a1aec55f90d8c4aaf6e179099f5084ff4627af1a625b6819ac75c5d341ad2619d1da7d7311b5220cede8a1801b110adefe36d7b63ed0428ce6a09979bb8ab31ea044c7cfeeb9317c8c6b064eaf4dd1cbfdddcf444f02b75b709bc44bd01b67f0b90878a5096ef86abbf5da2460a4154ba3a421ec1e9ccfc2df65ae5919f099b32372e142915165f16858fb9b62f0f237b82befe473c33d5d2c6f723ab772c13113a05b1e401727b7b92d4b6fc7397c5809cef7fe6a848741303ac1650c2157a1d2a9662952eb45d1cc7557a3039cca4e8174fe7cc6a0cae8f4bb6b6be4735ffa0ccb30a965aea9ae898cd96a4f07012ee81bef10658f8a76514f0d114f5fb15ee2e964fa7463ce9472e8e306751645eaaaa74954bd6b3d9c7c698f8f61e4285b23cbdbdc73a23922151aa518e842ed496753f8dfd087707f67bbd64bfd306cb128aeb811488816c6d3b8e5ab1e562003a53b1adb59762fe1687ece973540f9d04a44abeb74fb87a8add0dfb239ab66614338d7730cec55d7ae2f8848bebb279708b45358d17bdeb5cd081ace9c89bfe6815c57c5b4c7893c57d3180430ccef10299bf79707383c16a2f52fdb25f96670111b9215f83092a164179f0b72a4b73a4a23f6c606a24859bf67073123bf0e8d4fec202dd1a248e65abbafc3c8e9a85c60eca01bfe080678e797861fffe028b6565e85052f60cf6a022ccc7ffbcc2d32a27f0d7f323320049a4469d3d23463702ef11cc0ed1fa02c3a6af83030d3e2557e3588f0b8f5d99441addf5283fc59ecf19263852eed96bd6b35cfbcace00b5d429ad81ea681c35c18b699eb9372bc39c05503df15bcca78bdd38563d0e4e0e13e5b62f2d9dc28dd243c07e2bdb48b8b26836d0e129e69d3157bb66fa19e4ff651245316d80d8bb5356f68c9730da1c5e810098d95eaba3a9c6e6e235e238b2b489ada4af49c8cf1da5180e967a3cb4813b1bcc22c71bdac3342a980e79ed6fbd2f58364ed292390674ed36607b1e4ba8f74ba11905fff9862e8b5a8e67dc5092a5c36ac77c5bb9602a42fa3db2904edcd09175d6eb68864dbf720960ee6d8125c4ffbb844afb5d06a1d07eda7bd7b2a2226e09a61eca9014eda5e5f42a29407449a685b82df82e0ca6f1991fc9c82080cace73874a56bb0c70380927de51f1052ecd50df7ff4d8e2476c2dfd553f306aa24d4ffd8d47bf2fd8941165c36a2973ed7425123e4bd0662ffbaeef8fb13bd0c1479717b0177f7e67d132face1a4cb368b13ec24957111f437f8ba5b678177d4f3a4c5b205887bdc4d2fcecad4414f15b976c6d3ae4ccceef4def12b477656bfd22e42c76a49d9ddc9f17dfb01107909985e7b78ff1657c9b07b63d0c0570f8ac63bcfda740bb743869d8b324f57a21dd4c89d04c3acd80d88a0e4a92287e7706c627c17674b61b339082fd3b89b328df97bac17823876c517d9465a294bc0ca9346b10186e9223ee1d1ce73b27b69defeaec40383fc648e640c5d306ff8aa0d7d4e10baaeabab81eb35bd25e95458cd31de34f2c8310546cfe4c7cc2ad46fd505dba8a0073b534c3a6fb8d697ac9c6ce37c50fec271da492bba68659fa3c4c5f5eb9a712495f6f07b4610d5f49c75dca603466534677d11c106da1beee3f4ee7c5090d3f829ab8d3cc66ae5578ba0f46a92a201270f71cbd9f9cdd825cebb9f5ce4982025ad5ef9c9b667f50f32346ed63c299b50b31807d40eaa2672ed6f0ea097d5493e5bc110d3aa34732663d92ae41f6085e3d3f61b5ad8c64ee243b53e52ae8968f1be901bfd7fa2f4ba03cd9e300a1393adb3448c7ec8d1bda718e8760ddcc8f5f1d26602b94c2a9e2b38075a2de70da91d2503043467e8942ebf47de5f3d8ab989c6c8a9104d25b76176e2e7ae58615be17b903cc68f5948295156ef335024001cdee4929d00195ac92712796a9e95ebb05765e65a8d87cc5ab0ce8fba749fcf29081ba3ea20cf171f401b98525208d9cd7ca661b0b8328469333bcfcc5b6a4eccbc9ca3d487742f44c8ebdd983092fa53d106f7e3c698ac5e62f699920ff6805906340949f5ff2c2c0377942f967fd99ecc93a18c34cdbeb1a1d049111a8a2a9a9c5b0839a5cc57f8e46397efad3d1d71ff69e07d53039d37bfaa302a0586be71c6ae680061a00d9aa9b07a5091003d87eb6316ac6909c5d011271d430f5d47584f42b2a2177f19032aa3ac8c8f56d81322957623965b6599491602a2cc2c80769ec2716fb5031464df8be58658752eb42c0a2dee485be1de5bc2d44fbbb0728feb4caa24d948818add1ef02c7f22d4fb95cb93cc5a4165db6b81f4b3d6e61badc17c7d19d411635017b7c36c126953cb43c5f843376d00a15b461d6ea3b1035685d136f67d9e7c37419c7405fda54bff0f0db3d64e54e78ecb006b93ae9f08d5ad0b5a5617eaa327baeaa5823693921840777de183344a8bea474a4487d714d483da4b6abdc62a0651bb4a873b3500a5632b188509933875ba70d5978e1761807fe98d1200163fda71758d61ed831195aba04322ddb64a84420e5f28f341cece420525f2423207a3bc00f9d4e795c8a9d1e535320b64c57c4c67a0daa064b0f2d115d449625775aac0ab5bb94debb3dc34a740960780b22097e18e2ee468200d6fe3e10d013898b12c5a4fa92dae49cbbd81c9e646a88c721ccded54ad9540f3ac9b946e811f5943969d1f9b7369841666a2f74dc6acd4afaf4a76f58deca4aafc18cfb0ae9c988cce44e8260eb05551db289719647bd63d1a933b7e57e6ceb0983cfe771b5146271d360873eed43dfa06c0e9c7a4db8cf5951bf3bfa61674617c950aca7423f0db4aac5706361a2ae4f0de9c94e05d9b3df47fc5e0c5021db28728355036a5f5fa59d6b9e95014071a1be0f8700851135f5ee8a1c4246b7dcca0536225810e2319f91890ff8629fb7225327fed7ddea5f80d06aaa9a8d65c1a6dbce6a5d86acb357d5f554bec7c1c0b065d51c2c8db04339e05de2c72fc5452aec267c7e4e8ccb98314226a883cc5ff947fdb3477ca0229b11668676c20db6df07e0cb0c0f88d6369f00a554f8a6714187ff0cbcf7648b8393871b0d08863827155a9907aab16597a9ec37bcfe884c97226f94d8ee85a2d84d3225d2565b7d186d9724e412468e0418bbfd370ab5876d276cfeb9415a9d2d1625ef992d526ef8a9b2e2830183e630c4d50f507d642e3b63369b18a6fe48dc763668796733b43381cb8c30aa371206de1db42452e046c952991d74f42d00fa6b19034637ebf91e225cbbeefe03a436d37e6e581caedc697dcd562bea492d9fd40c7b15bde722fa0d0c912dc91b64412fad1e2351079fbc52e1b84436941aef71fa361f2b8d887acdc3b458f663004553735ba63b020c620b39d677886ceaf981c8e589b713fe5a0b75f94ed557ec5ae506767a14a8eabeec4b9e352555c6f740f7d9fa2f0a6fb8f4353c5b8e60deb768a69b5735f70e6dca92e5e94aac76e180ee100c94415ec911a00759dcca1ccc81ab1e05189ca0482a3c1d75ad11a3ed0274239984afd092914ffc9406b5700395911126a03b06e586aa5a8d6a38a6a283ddf4090147f3c5408ff877a54e728d60444dad1ea8551c9d8f0b7d59250dca6ae8b7c4f945ed7981294e46b04d004bc373eafa78b40879636cd8f940f738ff5b80bc3fab10f2e6bbfab0db47be9c539fbc6764d959bd401e33888be97d71c9addc3d42f3c413722a1009f3dcfe1b2ca2cb256c91f04aa19b3cfccc5fb99b4ad7d07efcf4f3f905d83bfc794399e915a1c76ab7e0dc6d1b360ff1b8d5453e1abd03bf8488b6dbc18049a73f381044aa5bc739a97959eb729d5ce72b5efd184c3d2327ec29773824dd4c9784d43d93fd323397af0ee7cf276348639f3169a80ff766a5cf439dbb8a4bbf84c3ae37da5a3e5abafee556e250d536589e4868768626edc32957ae936fa977d117bf4ffe538c0c58e24504a5ac7cdcc24ba07be3ac78a291fc6cdeded0d60487e82cc806c21497208eedf03501c14e111640042085048e3d5bf27fed41ba3283ef7a8ca68fec00f94efefca6e26b3e2997b2f92f253db96ce22428cd6812f6d3193416bcbe54be4ffabfdeb21f23a02d2ca2ae8740c76c307a7a52c708d810207b8ef67892734356e6c0b850c9f1c702c4738dc7f600ae7520259eef3b9f634934122da2710ed483af331a2ea8e1270e791b4655d74a5a62e068c8978ac79c3a9695c63483f2e42dc8fe4d69b07cc68c829248625e30e6d17c549f648a9344a5c5e6a6b8269c2a5a41eb669743deeae55f3b9f66d1bc574eb603de7568f67f97e3e88484a783dfe688f84adc4b9ce51ab053f5fd99b0a1ac094234781796159bbd427583ed68e25df56ece929a53a8d5d13934fdd58a8719873fb443b88ff9f0b68ee7acaea390049ae9fd23edd0aecc61331812e3c357cada345d6841c1b062b900baa17217c19e54f06d10a2bf8014e5363ff4de0cbf6a77f2f59d9f8bc86b35b8d9ce102bb98a32e1bf8462cece3be0f38694c8e2d905af5ed2dcf9267560a14cb43d7f8eff01939ba142fd449495d3b310d41b85c9da0b026fd1319da481826a9bac21cc4953a9b597124497d3f2d18e696ffa712cecb2818131c2857a51c698113e7121187cd560f3c71ec359326de38adb619682454869b20562a522e55682e798b93b6dd4f4913cdbf688c2228a6ab9b31a32736219f64e889436dd9a9a185f85d30648be6173dd3bb6bcebc439ed95e267ce0b9e99cce7861fc20ab5c2ea6d2e8a377147f7f6237566130753a70b9662943e6750c2acf0e9bf70db5e8b8b56d8a93e4cd00d2b574499ef4ec38b2731f12c636ba7a8bd33a1a2135919812ed2d3529a7698e6aff715782f24eb9b0d57d5d0c0fb84a35b5fbf7d5969d5d3d27514d930b4dd32b6d83e4b3d2e38c1b6d9e363556d278488cd175d74e0742fcb6a758a0645ac11780eed91b8b114b8920a08657750d080d0281ec4005c27a8fb0627bf636c33f20b121524820788883e39b8291c673ef474c0857deb97cd948384ee8de31b3269466d539c7550356ef3ab566aed6222a8e42bd6324ae042274a3c429030aced757d64593d398216daf</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Algoritmalar Ders Notları</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Algoritmalar</category>
      </categories>
      <tags>
        <tag>recursive</tag>
        <tag>bitwise operations</tag>
      </tags>
  </entry>
  <entry>
    <title>.NET Uygulamalarının Çalışma Yapısı: Derleme ve Çalıştırma Süreçleri</title>
    <url>/post/390419117.html</url>
    <content><![CDATA[<p>Dotnet uygulamalarının çalışma yapısı, gerçekleşecek olan derleme ve çalıştırma süreçleri Language Specific Compiler, Intermediate Language, Common Language Runtime, Just-In-Time Compiler ve Native Code kavramları ile birlikte ele alınacaktır.</p>
<span id="more"></span>

<h2 id="Compilation-Derleme-Asamasi"><a href="#Compilation-Derleme-Asamasi" class="headerlink" title="Compilation (Derleme Aşaması)"></a>Compilation (Derleme Aşaması)</h2><mark class="label primary">Language Specific Compiler</mark>, yani dile özgü derleyiciler bulunmaktadır. C# dilini kullanarak bir uygulama geliştirdiğimizi varsayalım. Yazmış olduğumuz uygulamayı build ettiğimizde Language Specific Compiler, yazmış olduğumuz uygulamayı bir ara dile çevirir. Bu ara dil, <mark class="label primary">Microsoft Intermediate Language</mark>, <mark class="label primary">Common Intermediate Language</mark> veya <mark class="label primary">Intermediate Language</mark> olarak bilinmektedir. Ara dile çevrilmesi ile birlikte oluşacak olan dosyalar <mark class="label primary">.EXE</mark> veya <mark class="label primary">.DLL</mark> uzantılı dosyalar olacaktır.

<h2 id="Runtime-Calisma-Zamani-Asamasi"><a href="#Runtime-Calisma-Zamani-Asamasi" class="headerlink" title="Runtime (Çalışma Zamanı) Aşaması"></a>Runtime (Çalışma Zamanı) Aşaması</h2><p>Uygulamayı çalıştırdım. Uygulama çalıştırıldığı anda <mark class="label primary">Common Language Runtime</mark> devreye girmektedir. Common Language Runtime’ın devreye girmesi ile birlikte <mark class="label primary">Just-In-Time Compiler</mark> oluşan ilgili Microsoft Intermediate Language kodunu, <mark class="label primary">Native code</mark>‘a dönüştürmektedir. Native code, makine koduna karşılık gelmektedir. Yani işletim sistemimize özgü olarak, işletim sistemimizde ilgili uygulamanın çalışabilmesi için oluşturalan koddan bahsediyoruz. Native code’a dönüştürülme işleminden sonra uygulama başarılı bir şekilde çalıştırılır.</p>
<h2 id="Ornek-Basit-Bir-Console-Uygulamasi"><a href="#Ornek-Basit-Bir-Console-Uygulamasi" class="headerlink" title="Örnek: Basit Bir Console Uygulaması"></a>Örnek: Basit Bir Console Uygulaması</h2><p>Konunun daha iyi anlaşılması için basit bir örnek yapalım.</p>
<h3 id="Yeni-Bir-Console-Uygulamasi-Olusturma"><a href="#Yeni-Bir-Console-Uygulamasi-Olusturma" class="headerlink" title="Yeni Bir Console Uygulaması Oluşturma"></a>Yeni Bir Console Uygulaması Oluşturma</h3><mark class="label primary">SampleApp</mark> adında bir Console uygulaması oluşturalım.

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">dotnet new console -o .</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_390419117002.png"></p>
<p>Proje dizinimiz şu şekilde oluşacaktır.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_390419117003.png"></p>
<h3 id="Uygulamayi-Derleme"><a href="#Uygulamayi-Derleme" class="headerlink" title="Uygulamayı Derleme"></a>Uygulamayı Derleme</h3><p>Projemizi build edelim. Build etme aşamasında Language Specific Compiler, yazılmış olan ilgili kodu Microsoft Intermediate Language koduna çevirir. Bu dosyalar daha önce belirtildiği gibi .EXE veya .DLL uzantılı dosyalar olmaktadır.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">dotnet build</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_390419117004.png"></p>
<p>Build etme işlemi sonlandığında proje dizininde <mark class="label primary">bin</mark> adlı bir dizin oluştuğunu gözlemleyeceğiz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_390419117005.png"></p>
<p>İlgili <mark class="label primary">.EXE</mark> uzantılı dosyamızın da ilgili dizin altında oluştuğunu gözlemliyoruz.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_390419117006.png"></p>
<h3 id="Uygulamayi-Calistirma"><a href="#Uygulamayi-Calistirma" class="headerlink" title="Uygulamayı Çalıştırma"></a>Uygulamayı Çalıştırma</h3><p>Şimdi uygulamamızı çalıştıralım. Aşağıdaki komutu verdiğimiz anda Common Language Runtime devreye girer. Just-In-Time Compiler, ilgili Microsoft Intermediate Language kodunu native koda yani yerel koda dönüştürür. Bu da işletim sistemimize özgü oluşturulmuş olan bir makine kodudur. Native kod da oluşturulduktan sonra artık uygulama başarılı bir şekilde çalıştırılmaktadır.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">dotnet run</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_390419117007.png"></p>
]]></content>
      <categories>
        <category>Dotnet</category>
      </categories>
      <tags>
        <tag>Dotnet</tag>
        <tag>C#</tag>
        <tag>JIT</tag>
        <tag>CLR</tag>
        <tag>MSIL</tag>
      </tags>
  </entry>
  <entry>
    <title>My unqualified hostname (foo.bar) unknown: sleeping for retry</title>
    <url>/post/1659074625.html</url>
    <content><![CDATA[<p>FreeBSD Server’ımız oldukça yavaş açılıyor. Çıktılarımızı gözlemlediğimiz zaman şu şekilde çıktılar olduğunu görüyoruz.</p>
<span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Feb 26 01:49:45 foo bar: My unqualified host name (tar) unknown; sleeping for retry</span><br><span class="line">Feb 26 01:50:45 foo bar: unable to qualify my own domain name (tar) -- using short name</span><br><span class="line">Feb 26 01:50:45 foo bar: My unqualified host name (infrastructure) unknown; sleeping for retry</span><br><span class="line">Feb 26 01:51:45 foo bar: unable to qualify my own domain name (tar) -- using short name</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1659074625001.png"></p>
<p>Sistemin açılış esnasında uzun süre bekleme problemini çözmek için <mark class="label primary">hostname</mark>’i düzenlemek yeterli olacaktır.</p>
<p>Yapılandırma dosyamızı düzenleyelim.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ee /etc/rc.conf</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1659074625002.png"></p>
<mark class="label primary">hostname</mark> sonuna <mark class="label primary">.local</mark> eklemek yeterli olacaktır.

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1659074625003.png"></p>
<p>Yapılandırma dosyamızın son şekli şu şekilde olacaktır.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/rc.conf</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1659074625004.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>Yeniden başlattığımızda ilgili uyarıların kalktığını ve daha hızlı bir şekilde server’ımızın ayağa kalktığını gözlemliyoruz.</p>
]]></content>
      <categories>
        <category>FreeBSD</category>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>FreeBSD</tag>
        <tag>Server</tag>
        <tag>GNU/Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog Rehberi</title>
    <url>/post/1160298273.html</url>
    <content><![CDATA[<p>Hexo içerisinde kullanabileceğimiz bazı özellikler ve bunların görünümlerini inceleyebilirsiniz.</p>
<span id="more"></span>

<h2 id="Basliklar"><a href="#Basliklar" class="headerlink" title="Başlıklar"></a>Başlıklar</h2><div class="tabs" id="başlıklar"><ul class="nav-tabs"><li class="tab active"><a href="#başlıklar-1">Kod</a></li><li class="tab"><a href="#başlıklar-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="başlıklar-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="başlıklar-2"><p><img data-src="https://cdn.jsdelivr.net/gh/ramazanaltintop/Image/IMG_1160298273001.png"></p></div></div></div>

<h2 id="Metin-Stilleri"><a href="#Metin-Stilleri" class="headerlink" title="Metin Stilleri"></a>Metin Stilleri</h2><div class="tabs" id="metin-stilleri"><ul class="nav-tabs"><li class="tab active"><a href="#metin-stilleri-1">Kod</a></li><li class="tab"><a href="#metin-stilleri-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="metin-stilleri-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>Altı çizili<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span> metin</span><br><span class="line"><span class="strong">**Kalın**</span> metin</span><br><span class="line"><span class="strong">**Kalın**</span> metin</span><br><span class="line"><span class="emphasis">_İtalik_</span> metin</span><br><span class="line"><span class="emphasis">_İtalik_</span> metin</span><br><span class="line"><span class="strong">**<span class="emphasis">_Kalın ve İtalik_</span>**</span> metin</span><br><span class="line"><span class="code">`Vurgulanmış metin`</span></span><br><span class="line">~~Üstü çizili~~ metin</span><br><span class="line">Bu bir <span class="language-xml"><span class="tag">&lt;<span class="name">sub</span>&gt;</span></span>Alt simge<span class="language-xml"><span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span> metin</span><br><span class="line">Bu bir <span class="language-xml"><span class="tag">&lt;<span class="name">sup</span>&gt;</span></span>Üst simge<span class="language-xml"><span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span> metin</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>Font büyüklüğü 5 olan<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span> metin</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Cascadia Code&quot;</span>&gt;</span></span>Cascadia Code<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">teal</span>&gt;</span></span>Teal renk<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span> metin</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">color</span>=<span class="string">red</span> <span class="attr">bgcolor</span>=<span class="string">teal</span>&gt;</span></span>Arkaplan rengi：Teal olan metin.<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="metin-stilleri-2"><p><u>Altı çizili</u> metin<br><strong>Kalın</strong> metin<br><strong>Kalın</strong> metin<br><em>İtalik</em> metin<br><em>İtalik</em> metin<br><strong><em>Kalın ve İtalik</em></strong> metin<br><code>Vurgulanmış metin</code><br><del>Üstü çizili</del> metin<br>Bu bir <sub>Alt simge</sub> metin<br>Bu bir <sup>Üst simge</sup> metin<br><font size = 5>Font büyüklüğü 5 olan</font> metin<br><font face="Cascadia Code">Cascadia Code</font> metin<br><font color=teal>Teal renk</font> metin</p>
<table><tr><td bgcolor=teal>Arkaplan rengi Teal olan metin.</td></tr></table></div></div></div>

<h2 id="Metinden-Alinti"><a href="#Metinden-Alinti" class="headerlink" title="Metinden Alıntı"></a>Metinden Alıntı</h2><div class="tabs" id="metinden-alıntı"><ul class="nav-tabs"><li class="tab active"><a href="#metinden-alıntı-1">Kod</a></li><li class="tab"><a href="#metinden-alıntı-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="metinden-alıntı-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; Bir</span></span><br><span class="line"><span class="quote">&gt; İki</span></span><br><span class="line"><span class="quote">&gt; Üç</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; &gt; Üç Bir</span></span><br><span class="line"><span class="quote">&gt; &gt; Üç İki</span></span><br><span class="line"><span class="quote">&gt; &gt; Üç Üç</span></span><br><span class="line"><span class="quote">&gt; &gt; Üç Dört</span></span><br><span class="line"><span class="quote">&gt; &gt; <span class="strong">**Üç**</span> Beş</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; Dört</span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="metinden-alıntı-2"><blockquote>
<p>Bir<br>İki<br>Üç</p>
<blockquote>
<p>Üç Bir<br>Üç İki<br>Üç Üç<br>Üç Dört<br><strong>Üç</strong> Beş</p>
</blockquote>
<p>Dört<br>….</p>
</blockquote></div></div></div>

<h2 id="Ayirma-Cizgisi"><a href="#Ayirma-Cizgisi" class="headerlink" title="Ayırma Çizgisi"></a>Ayırma Çizgisi</h2><div class="tabs" id="ayırma-çizgisi"><ul class="nav-tabs"><li class="tab active"><a href="#ayırma-çizgisi-1">Kod</a></li><li class="tab"><a href="#ayırma-çizgisi-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="ayırma-çizgisi-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section">---</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="ayırma-çizgisi-2"><hr></div></div></div>

<h2 id="Listeler"><a href="#Listeler" class="headerlink" title="Listeler"></a>Listeler</h2><div class="tabs" id="listeler"><ul class="nav-tabs"><li class="tab active"><a href="#listeler-1">Kod</a></li><li class="tab"><a href="#listeler-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="listeler-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> Yapay Zeka</span><br><span class="line"><span class="bullet">-</span> Makine Öğrenmesi</span><br><span class="line"><span class="bullet">-</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> Derin Öğrenme</span><br><span class="line"><span class="bullet">*</span> Bilgisayar Mimarisi</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Nümerik Analiz</span><br><span class="line"><span class="bullet">-</span> Diferansiyel Denklemler</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="listeler-2"><ul>
<li>Yapay Zeka</li>
<li>Makine Öğrenmesi</li>
<li>…</li>
</ul>
<ul>
<li>Derin Öğrenme</li>
<li>Bilgisayar Mimarisi</li>
<li>…</li>
</ul>
<ul>
<li>Nümerik Analiz</li>
<li>Diferansiyel Denklemler</li>
<li>…</li>
</ul></div></div></div>

<h2 id="Sirali-Listeler"><a href="#Sirali-Listeler" class="headerlink" title="Sıralı Listeler"></a>Sıralı Listeler</h2><div class="tabs" id="sıralı-listeler"><ul class="nav-tabs"><li class="tab active"><a href="#sıralı-listeler-1">Kod</a></li><li class="tab"><a href="#sıralı-listeler-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sıralı-listeler-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># Sonrasında bir boşluk olduğuna dikkat edin.</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span></span><br><span class="line"><span class="bullet">2.</span></span><br><span class="line"><span class="bullet">3.</span></span><br><span class="line">4.</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="sıralı-listeler-2"><ol>
<li></li>
<li></li>
<li></li>
<li></li>
</ol></div></div></div>

<h2 id="Resim"><a href="#Resim" class="headerlink" title="Resim"></a>Resim</h2><div class="tabs" id="resim"><ul class="nav-tabs"><li class="tab active"><a href="#resim-1">Local</a></li><li class="tab"><a href="#resim-2">Local Görünüm</a></li><li class="tab"><a href="#resim-3">Çevrimiçi</a></li><li class="tab"><a href="#resim-4">Çevrimiçi Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="resim-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/uploads/custom-logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Default Cover&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:10%;&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="resim-2"><img data-src="/uploads/custom-logo.png" alt="Default Cover" style="zoom:10%;" /></div><div class="tab-pane" id="resim-3"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">![<span class="string">Default Cover</span>](<span class="link">https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="resim-4"><p><img data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg" alt="Default Cover"></p></div></div></div>

<h2 id="Tablo"><a href="#Tablo" class="headerlink" title="Tablo"></a>Tablo</h2><div class="tabs" id="tablo"><ul class="nav-tabs"><li class="tab active"><a href="#tablo-1">Kod</a></li><li class="tab"><a href="#tablo-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tablo-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">| Intel Mikroişlemciler | 4004      | 8008    | 8080   | 8086                 | 8088         |</span><br><span class="line">| --------------------- | --------- | ------- | ------ | -------------------- | ------------ |</span><br><span class="line">| Introduced            | 1971      | 1972    | 1974   | 1978                 | 1979         |</span><br><span class="line">| Clock speeds          | 108 kHz   | 108 kHz | 2 MHz  | 2 MHz, 8 MHz, 10 MHz | 5 MHz, 8 MHz |</span><br><span class="line">| Bus width             | 4 bits    | 8 bits  | 8 bits | 16 bits              | 8 bits       |</span><br><span class="line">| Number of transistors | 2,300     | 3,500   | 6,000  | 29,000               | 29,000       |</span><br><span class="line">| Feature size (um)     | 10        | 8       | 6      | 3                    | 6            |</span><br><span class="line">| Addresable memory     | 640 bytes | 16 KB   | 64 KB  | 1 MB                 | 1 MB         |</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tablo-2"><table>
<thead>
<tr>
<th>Intel Mikroişlemciler</th>
<th>4004</th>
<th>8008</th>
<th>8080</th>
<th>8086</th>
<th>8088</th>
</tr>
</thead>
<tbody><tr>
<td>Introduced</td>
<td>1971</td>
<td>1972</td>
<td>1974</td>
<td>1978</td>
<td>1979</td>
</tr>
<tr>
<td>Clock speeds</td>
<td>108 kHz</td>
<td>108 kHz</td>
<td>2 MHz</td>
<td>2 MHz, 8 MHz, 10 MHz</td>
<td>5 MHz, 8 MHz</td>
</tr>
<tr>
<td>Bus width</td>
<td>4 bits</td>
<td>8 bits</td>
<td>8 bits</td>
<td>16 bits</td>
<td>8 bits</td>
</tr>
<tr>
<td>Number of transistors</td>
<td>2,300</td>
<td>3,500</td>
<td>6,000</td>
<td>29,000</td>
<td>29,000</td>
</tr>
<tr>
<td>Feature size (um)</td>
<td>10</td>
<td>8</td>
<td>6</td>
<td>3</td>
<td>6</td>
</tr>
<tr>
<td>Addresable memory</td>
<td>640 bytes</td>
<td>16 KB</td>
<td>64 KB</td>
<td>1 MB</td>
<td>1 MB</td>
</tr>
</tbody></table></div></div></div>

<h2 id="Matematik"><a href="#Matematik" class="headerlink" title="Matematik"></a>Matematik</h2><div class="tabs" id="matematik"><ul class="nav-tabs"><li class="tab active"><a href="#matematik-1">Kod</a></li><li class="tab"><a href="#matematik-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="matematik-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\hat&#123;y&#125;=\theta<span class="emphasis">_0+\theta_</span>1 x<span class="emphasis">_1</span></span><br><span class="line"><span class="emphasis">$$</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">$$</span></span><br><span class="line"><span class="emphasis">\Gamma(z)=\int_</span>0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="matematik-2"><p>$$<br>\hat{y}&#x3D;\theta_0+\theta_1 x_1<br>$$</p>
<p>$$<br>\Gamma(z)&#x3D;\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p></div></div></div>

<h2 id="Baglantilar"><a href="#Baglantilar" class="headerlink" title="Bağlantılar"></a>Bağlantılar</h2><div class="tabs" id="bağlantılar"><ul class="nav-tabs"><li class="tab active"><a href="#bağlantılar-1">Kod</a></li><li class="tab"><a href="#bağlantılar-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="bağlantılar-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">Kişisel Web Sitem : [<span class="string">Github</span>](<span class="link">https://ramazanaltintop.github.io</span>).</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="bağlantılar-2"><p>Kişisel Web Sitem : <a href="https://ramazanaltintop.github.io/">Github</a>.</p></div></div></div>

<h2 id="Icice-Listeler"><a href="#Icice-Listeler" class="headerlink" title="İçiçe Listeler"></a>İçiçe Listeler</h2><div class="tabs" id="i̇çiçe-listeler"><ul class="nav-tabs"><li class="tab active"><a href="#i̇çiçe-listeler-1">Kod</a></li><li class="tab"><a href="#i̇çiçe-listeler-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="i̇çiçe-listeler-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> First list item</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> First nested list item</span><br><span class="line"><span class="bullet">     -</span> Second nested list item</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> First list item</span><br><span class="line"><span class="bullet">   -</span> First nested list item</span><br><span class="line"><span class="bullet">     -</span> Second nested list item</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="i̇çiçe-listeler-2"><ol>
<li><p>First list item</p>
<ul>
<li>First nested list item<ul>
<li>Second nested list item</li>
</ul>
</li>
</ul>
</li>
<li><p>First list item</p>
<ul>
<li>First nested list item<ul>
<li>Second nested list item</li>
</ul>
</li>
</ul>
</li>
</ol></div></div></div>

<h2 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h2><div class="tabs" id="footnotes"><ul class="nav-tabs"><li class="tab active"><a href="#footnotes-1">Kod</a></li><li class="tab"><a href="#footnotes-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="footnotes-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">Here is a simple footnote[^1].</span><br><span class="line"></span><br><span class="line">A footnote can also have multiple lines[^2].</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">My reference.</span></span><br><span class="line">[<span class="symbol">^2</span>]: <span class="link">To add line breaks within a footnote, prefix new lines with 2 spaces. This is a second line.</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="footnotes-2"><p>Here is a simple footnote[^1].</p>
<p>A footnote can also have multiple lines[^2].</p>
<p>[^1]: My reference.<br>[^2]: To add line breaks within a footnote, prefix new lines with 2 spaces. This is a second line.</p></div></div></div>

<h2 id="Yorum-Satiri"><a href="#Yorum-Satiri" class="headerlink" title="Yorum Satırı"></a>Yorum Satırı</h2><div class="tabs" id="yorum-satırı"><ul class="nav-tabs"><li class="tab active"><a href="#yorum-satırı-1">Kod</a></li><li class="tab"><a href="#yorum-satırı-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="yorum-satırı-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&lt;!-- This content will not appear in the rendered Markdown --&gt;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="yorum-satırı-2"><!-- This content will not appear in the rendered Markdown --></div></div></div>

<h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><div class="tabs" id="tabs"><ul class="nav-tabs"><li class="tab active"><a href="#tabs-1">Kod</a></li><li class="tab"><a href="#tabs-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tabs-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% tabs example %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab test1 --&gt;</span><br><span class="line"></span><br><span class="line">This is tab1.</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab test2 --&gt;</span><br><span class="line"></span><br><span class="line">This is tab2.</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab test3 --&gt;</span><br><span class="line"></span><br><span class="line">This is tab3.</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tabs-2"><div class="tabs" id="example"><ul class="nav-tabs"><li class="tab active"><a href="#example-1">test1</a></li><li class="tab"><a href="#example-2">test2</a></li><li class="tab"><a href="#example-3">test3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="example-1"><p>This is tab1.</p></div><div class="tab-pane" id="example-2"><p>This is tab2.</p></div><div class="tab-pane" id="example-3"><p>This is tab3.</p></div></div></div></div></div></div>

<h2 id="Not"><a href="#Not" class="headerlink" title="Not"></a>Not</h2><div class="tabs" id="not"><ul class="nav-tabs"><li class="tab active"><a href="#not-1">Kod</a></li><li class="tab"><a href="#not-2">Görünüm</a></li></ul><div class="tab-content"><div class="tab-pane active" id="not-1"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% note %&#125;Modern&#123;% endnote %&#125;</span><br><span class="line">&#123;% note default %&#125;Default&#123;% endnote %&#125;</span><br><span class="line">&#123;% note primary %&#125;Primary&#123;% endnote %&#125;</span><br><span class="line">&#123;% note success %&#125;Başarılı&#123;% endnote %&#125;</span><br><span class="line">&#123;% note info %&#125;Bilgi&#123;% endnote %&#125;</span><br><span class="line">&#123;% note warning %&#125;Uyarı&#123;% endnote %&#125;</span><br><span class="line">&#123;% note danger %&#125;Tehlike&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="not-2"><div class="note "><p>Modern</p>
</div>
<div class="note default"><p>Default</p>
</div>
<div class="note primary"><p>Primary</p>
</div>
<div class="note success"><p>Başarılı</p>
</div>
<div class="note info"><p>Bilgi</p>
</div>
<div class="note warning"><p>Uyarı</p>
</div>
<div class="note danger"><p>Tehlike</p>
</div></div></div></div>

<div class="note default"><p>Kaynaklar:</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vZ2V0LXN0YXJ0ZWQvd3JpdGluZy1vbi1naXRodWIvZ2V0dGluZy1zdGFydGVkLXdpdGgtd3JpdGluZy1hbmQtZm9ybWF0dGluZy1vbi1naXRodWI=">Getting started with writing and formatting on github<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FraWxhcmx4aC9oZXhvLWJ1dHRlcmZseS10YWctcGx1Z2lucy1wbHVz">Hexo-butterfly-tag-plugins-plus<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZm9tYWwuY2MvcG9zdHMvMjAxMzQ1NGQuaHRtbA==">Markdown 语法与外挂标签写法汇总<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9neHlzdHJ1Z2dsZS50b3AvcG9zdHMvd3JpdGUyLw==">外挂标签<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</div>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
